import __clrclasses__.System.IO.IsolatedStorage as IsolatedStorage
import __clrclasses__.System.IO.MemoryMappedFiles as MemoryMappedFiles
import __clrclasses__.System.IO.Pipes as Pipes
import __clrclasses__.System.IO.Ports as Ports
import __clrclasses__.System.IO.Compression as Compression
from __clrclasses__.Microsoft.Win32.SafeHandles import SafeFileHandle as _n_0_t_0
from __clrclasses__.System import IDisposable as _n_1_t_0
from __clrclasses__.System import Char as _n_1_t_1
from __clrclasses__.System import Array as _n_1_t_2
from __clrclasses__.System import Byte as _n_1_t_3
from __clrclasses__.System import Decimal as _n_1_t_4
from __clrclasses__.System import SByte as _n_1_t_5
from __clrclasses__.System import UInt16 as _n_1_t_6
from __clrclasses__.System import UInt32 as _n_1_t_7
from __clrclasses__.System import UInt64 as _n_1_t_8
from __clrclasses__.System import DateTime as _n_1_t_9
from __clrclasses__.System import Exception as _n_1_t_10
from __clrclasses__.System import Enum as _n_1_t_11
from __clrclasses__.System import IComparable as _n_1_t_12
from __clrclasses__.System import IFormattable as _n_1_t_13
from __clrclasses__.System import IConvertible as _n_1_t_14
from __clrclasses__.System import EventArgs as _n_1_t_15
from __clrclasses__.System import MulticastDelegate as _n_1_t_16
from __clrclasses__.System import ICloneable as _n_1_t_17
from __clrclasses__.System import IntPtr as _n_1_t_18
from __clrclasses__.System import IAsyncResult as _n_1_t_19
from __clrclasses__.System import AsyncCallback as _n_1_t_20
from __clrclasses__.System import MarshalByRefObject as _n_1_t_21
from __clrclasses__.System import SystemException as _n_1_t_22
from __clrclasses__.System import ArraySegment as _n_1_t_23
from __clrclasses__.System import IFormatProvider as _n_1_t_24
from __clrclasses__.System import ValueType as _n_1_t_25
from __clrclasses__.System.Collections.Generic import IEnumerable as _n_2_t_0
from __clrclasses__.System.ComponentModel import Component as _n_3_t_0
from __clrclasses__.System.ComponentModel import IComponent as _n_3_t_1
from __clrclasses__.System.ComponentModel import ISupportInitialize as _n_3_t_2
from __clrclasses__.System.ComponentModel import ISynchronizeInvoke as _n_3_t_3
from __clrclasses__.System.ComponentModel import DescriptionAttribute as _n_3_t_4
from __clrclasses__.System.Runtime.InteropServices import _Exception as _n_4_t_0
from __clrclasses__.System.Runtime.InteropServices import _Attribute as _n_4_t_1
from __clrclasses__.System.Runtime.InteropServices import SafeBuffer as _n_4_t_2
from __clrclasses__.System.Runtime.Serialization import ISerializable as _n_5_t_0
from __clrclasses__.System.Security.AccessControl import DirectorySecurity as _n_6_t_0
from __clrclasses__.System.Security.AccessControl import AccessControlSections as _n_6_t_1
from __clrclasses__.System.Security.AccessControl import FileSecurity as _n_6_t_2
from __clrclasses__.System.Security.AccessControl import FileSystemRights as _n_6_t_3
from __clrclasses__.System.Text import Encoding as _n_7_t_0
from __clrclasses__.System.Text import StringBuilder as _n_7_t_1
from __clrclasses__.System.Threading import CancellationToken as _n_8_t_0
from __clrclasses__.System.Threading.Tasks import Task as _n_9_t_0
import typing
class BinaryReader(_n_1_t_0):
    @property
    def BaseStream(self) -> Stream:"""BaseStream { get; } -> Stream"""
    def __init__(self, input: Stream, encoding: _n_7_t_0, leaveOpen: bool) -> BinaryReader:...
    def __init__(self, input: Stream, encoding: _n_7_t_0) -> BinaryReader:...
    def __init__(self, input: Stream) -> BinaryReader:...
    def Close(self):...
    def PeekChar(self) -> int:...
    def Read(self, buffer: _n_1_t_2[_n_1_t_1], index: int, count: int) -> int:...
    def Read(self) -> int:...
    def ReadBoolean(self) -> bool:...
    def ReadByte(self) -> _n_1_t_3:...
    def ReadBytes(self, count: int) -> _n_1_t_2[_n_1_t_3]:...
    def ReadChar(self) -> _n_1_t_1:...
    def ReadChars(self, count: int) -> _n_1_t_2[_n_1_t_1]:...
    def ReadDecimal(self) -> _n_1_t_4:...
    def ReadDouble(self) -> float:...
    def ReadInt16(self) -> int:...
    def ReadInt32(self) -> int:...
    def ReadInt64(self) -> int:...
    def ReadSByte(self) -> _n_1_t_5:...
    def ReadSingle(self) -> float:...
    def ReadString(self) -> str:...
    def ReadUInt16(self) -> _n_1_t_6:...
    def ReadUInt32(self) -> _n_1_t_7:...
    def ReadUInt64(self) -> _n_1_t_8:...
class BinaryWriter(_n_1_t_0):
    Null: int
    @property
    def BaseStream(self) -> Stream:"""BaseStream { get; } -> Stream"""
    def __init__(self, output: Stream, encoding: _n_7_t_0, leaveOpen: bool) -> BinaryWriter:...
    def __init__(self, output: Stream, encoding: _n_7_t_0) -> BinaryWriter:...
    def __init__(self, output: Stream) -> BinaryWriter:...
    def Close(self):...
    def Flush(self):...
    def Seek(self, offset: int, origin: SeekOrigin) -> int:...
    def Write(self, value: str):...
    def Write(self, value: _n_1_t_8):...
    def Write(self, value: _n_1_t_7):...
    def Write(self, value: _n_1_t_6):...
    def Write(self, value: int):...
    def Write(self, value: _n_1_t_4):...
    def Write(self, value: float):...
    def Write(self, ch: _n_1_t_1):...
    def Write(self, buffer: _n_1_t_2[_n_1_t_3], index: int, count: int):...
    def Write(self, buffer: _n_1_t_2[_n_1_t_3]):...
    def Write(self, value: _n_1_t_5):...
    def Write(self, value: _n_1_t_3):...
    def Write(self, value: bool):...
class BufferedStream(Stream, _n_1_t_0):
    def __init__(self, stream: Stream, bufferSize: int) -> BufferedStream:...
    def __init__(self, stream: Stream) -> BufferedStream:...
class Directory(object):
    @staticmethod
    def CreateDirectory(path: str, directorySecurity: _n_6_t_0) -> DirectoryInfo:...
    @staticmethod
    def CreateDirectory(path: str) -> DirectoryInfo:...
    @staticmethod
    def Delete(path: str, recursive: bool):...
    @staticmethod
    def Delete(path: str):...
    @staticmethod
    def EnumerateDirectories(path: str, searchPattern: str, searchOption: SearchOption) -> _n_2_t_0[str]:...
    @staticmethod
    def EnumerateDirectories(path: str, searchPattern: str) -> _n_2_t_0[str]:...
    @staticmethod
    def EnumerateDirectories(path: str) -> _n_2_t_0[str]:...
    @staticmethod
    def EnumerateFiles(path: str, searchPattern: str, searchOption: SearchOption) -> _n_2_t_0[str]:...
    @staticmethod
    def EnumerateFiles(path: str, searchPattern: str) -> _n_2_t_0[str]:...
    @staticmethod
    def EnumerateFiles(path: str) -> _n_2_t_0[str]:...
    @staticmethod
    def EnumerateFileSystemEntries(path: str, searchPattern: str, searchOption: SearchOption) -> _n_2_t_0[str]:...
    @staticmethod
    def EnumerateFileSystemEntries(path: str, searchPattern: str) -> _n_2_t_0[str]:...
    @staticmethod
    def EnumerateFileSystemEntries(path: str) -> _n_2_t_0[str]:...
    @staticmethod
    def Exists(path: str) -> bool:...
    @staticmethod
    def GetAccessControl(path: str, includeSections: _n_6_t_1) -> _n_6_t_0:...
    @staticmethod
    def GetAccessControl(path: str) -> _n_6_t_0:...
    @staticmethod
    def GetCreationTime(path: str) -> _n_1_t_9:...
    @staticmethod
    def GetCreationTimeUtc(path: str) -> _n_1_t_9:...
    @staticmethod
    def GetCurrentDirectory() -> str:...
    @staticmethod
    def GetDirectories(path: str, searchPattern: str, searchOption: SearchOption) -> _n_1_t_2[str]:...
    @staticmethod
    def GetDirectories(path: str, searchPattern: str) -> _n_1_t_2[str]:...
    @staticmethod
    def GetDirectories(path: str) -> _n_1_t_2[str]:...
    @staticmethod
    def GetDirectoryRoot(path: str) -> str:...
    @staticmethod
    def GetFiles(path: str, searchPattern: str, searchOption: SearchOption) -> _n_1_t_2[str]:...
    @staticmethod
    def GetFiles(path: str, searchPattern: str) -> _n_1_t_2[str]:...
    @staticmethod
    def GetFiles(path: str) -> _n_1_t_2[str]:...
    @staticmethod
    def GetFileSystemEntries(path: str, searchPattern: str, searchOption: SearchOption) -> _n_1_t_2[str]:...
    @staticmethod
    def GetFileSystemEntries(path: str, searchPattern: str) -> _n_1_t_2[str]:...
    @staticmethod
    def GetFileSystemEntries(path: str) -> _n_1_t_2[str]:...
    @staticmethod
    def GetLastAccessTime(path: str) -> _n_1_t_9:...
    @staticmethod
    def GetLastAccessTimeUtc(path: str) -> _n_1_t_9:...
    @staticmethod
    def GetLastWriteTime(path: str) -> _n_1_t_9:...
    @staticmethod
    def GetLastWriteTimeUtc(path: str) -> _n_1_t_9:...
    @staticmethod
    def GetLogicalDrives() -> _n_1_t_2[str]:...
    @staticmethod
    def GetParent(path: str) -> DirectoryInfo:...
    @staticmethod
    def Move(sourceDirName: str, destDirName: str):...
    @staticmethod
    def SetAccessControl(path: str, directorySecurity: _n_6_t_0):...
    @staticmethod
    def SetCreationTime(path: str, creationTime: _n_1_t_9):...
    @staticmethod
    def SetCreationTimeUtc(path: str, creationTimeUtc: _n_1_t_9):...
    @staticmethod
    def SetCurrentDirectory(path: str):...
    @staticmethod
    def SetLastAccessTime(path: str, lastAccessTime: _n_1_t_9):...
    @staticmethod
    def SetLastAccessTimeUtc(path: str, lastAccessTimeUtc: _n_1_t_9):...
    @staticmethod
    def SetLastWriteTime(path: str, lastWriteTime: _n_1_t_9):...
    @staticmethod
    def SetLastWriteTimeUtc(path: str, lastWriteTimeUtc: _n_1_t_9):...
class DirectoryInfo(FileSystemInfo, _n_5_t_0):
    @property
    def Parent(self) -> DirectoryInfo:"""Parent { get; } -> DirectoryInfo"""
    @property
    def Root(self) -> DirectoryInfo:"""Root { get; } -> DirectoryInfo"""
    def __init__(self, path: str) -> DirectoryInfo:...
    def Create(self, directorySecurity: _n_6_t_0):...
    def Create(self):...
    def CreateSubdirectory(self, path: str, directorySecurity: _n_6_t_0) -> DirectoryInfo:...
    def CreateSubdirectory(self, path: str) -> DirectoryInfo:...
    def EnumerateDirectories(self, searchPattern: str, searchOption: SearchOption) -> _n_2_t_0[DirectoryInfo]:...
    def EnumerateDirectories(self, searchPattern: str) -> _n_2_t_0[DirectoryInfo]:...
    def EnumerateDirectories(self) -> _n_2_t_0[DirectoryInfo]:...
    def EnumerateFiles(self, searchPattern: str, searchOption: SearchOption) -> _n_2_t_0[FileInfo]:...
    def EnumerateFiles(self, searchPattern: str) -> _n_2_t_0[FileInfo]:...
    def EnumerateFiles(self) -> _n_2_t_0[FileInfo]:...
    def EnumerateFileSystemInfos(self, searchPattern: str, searchOption: SearchOption) -> _n_2_t_0[FileSystemInfo]:...
    def EnumerateFileSystemInfos(self, searchPattern: str) -> _n_2_t_0[FileSystemInfo]:...
    def EnumerateFileSystemInfos(self) -> _n_2_t_0[FileSystemInfo]:...
    def GetAccessControl(self, includeSections: _n_6_t_1) -> _n_6_t_0:...
    def GetAccessControl(self) -> _n_6_t_0:...
    def GetDirectories(self, searchPattern: str, searchOption: SearchOption) -> _n_1_t_2[DirectoryInfo]:...
    def GetDirectories(self, searchPattern: str) -> _n_1_t_2[DirectoryInfo]:...
    def GetDirectories(self) -> _n_1_t_2[DirectoryInfo]:...
    def GetFiles(self) -> _n_1_t_2[FileInfo]:...
    def GetFiles(self, searchPattern: str, searchOption: SearchOption) -> _n_1_t_2[FileInfo]:...
    def GetFiles(self, searchPattern: str) -> _n_1_t_2[FileInfo]:...
    def GetFileSystemInfos(self) -> _n_1_t_2[FileSystemInfo]:...
    def GetFileSystemInfos(self, searchPattern: str, searchOption: SearchOption) -> _n_1_t_2[FileSystemInfo]:...
    def GetFileSystemInfos(self, searchPattern: str) -> _n_1_t_2[FileSystemInfo]:...
    def MoveTo(self, destDirName: str):...
    def SetAccessControl(self, directorySecurity: _n_6_t_0):...
class DirectoryNotFoundException(IOException, _n_5_t_0, _n_4_t_0):
    def __init__(self, message: str, innerException: _n_1_t_10) -> DirectoryNotFoundException:...
    def __init__(self, message: str) -> DirectoryNotFoundException:...
    def __init__(self) -> DirectoryNotFoundException:...
class DriveInfo(_n_5_t_0):
    @property
    def AvailableFreeSpace(self) -> int:"""AvailableFreeSpace { get; } -> int"""
    @property
    def DriveFormat(self) -> str:"""DriveFormat { get; } -> str"""
    @property
    def DriveType(self) -> DriveType:"""DriveType { get; } -> DriveType"""
    @property
    def IsReady(self) -> bool:"""IsReady { get; } -> bool"""
    @property
    def Name(self) -> str:"""Name { get; } -> str"""
    @property
    def RootDirectory(self) -> DirectoryInfo:"""RootDirectory { get; } -> DirectoryInfo"""
    @property
    def TotalFreeSpace(self) -> int:"""TotalFreeSpace { get; } -> int"""
    @property
    def TotalSize(self) -> int:"""TotalSize { get; } -> int"""
    @property
    def VolumeLabel(self) -> str:"""VolumeLabel { get; set; } -> str"""
    def __init__(self, driveName: str) -> DriveInfo:...
    @staticmethod
    def GetDrives() -> _n_1_t_2[DriveInfo]:...
class DriveNotFoundException(IOException, _n_5_t_0, _n_4_t_0):
    def __init__(self, message: str, innerException: _n_1_t_10) -> DriveNotFoundException:...
    def __init__(self, message: str) -> DriveNotFoundException:...
    def __init__(self) -> DriveNotFoundException:...
class DriveType(_n_1_t_11, _n_1_t_12, _n_1_t_13, _n_1_t_14):
    CDRom: int
    Fixed: int
    Network: int
    NoRootDirectory: int
    Ram: int
    Removable: int
    Unknown: int
    value__: int
class EndOfStreamException(IOException, _n_5_t_0, _n_4_t_0):
    def __init__(self, message: str, innerException: _n_1_t_10) -> EndOfStreamException:...
    def __init__(self, message: str) -> EndOfStreamException:...
    def __init__(self) -> EndOfStreamException:...
class ErrorEventArgs(_n_1_t_15):
    def __init__(self, exception: _n_1_t_10) -> ErrorEventArgs:...
    def GetException(self) -> _n_1_t_10:...
class ErrorEventHandler(_n_1_t_16, _n_1_t_17, _n_5_t_0):
    def __init__(self, object: object, method: _n_1_t_18) -> ErrorEventHandler:...
    def BeginInvoke(self, sender: object, e: ErrorEventArgs, callback: _n_1_t_20, object: object) -> _n_1_t_19:...
    def EndInvoke(self, result: _n_1_t_19):...
    def Invoke(self, sender: object, e: ErrorEventArgs):...
class File(object):
    @staticmethod
    def AppendAllLines(path: str, contents: _n_2_t_0[str], encoding: _n_7_t_0):...
    @staticmethod
    def AppendAllLines(path: str, contents: _n_2_t_0[str]):...
    @staticmethod
    def AppendAllText(path: str, contents: str, encoding: _n_7_t_0):...
    @staticmethod
    def AppendAllText(path: str, contents: str):...
    @staticmethod
    def AppendText(path: str) -> StreamWriter:...
    @staticmethod
    def Copy(sourceFileName: str, destFileName: str, overwrite: bool):...
    @staticmethod
    def Copy(sourceFileName: str, destFileName: str):...
    @staticmethod
    def Create(path: str, bufferSize: int, options: FileOptions, fileSecurity: _n_6_t_2) -> FileStream:...
    @staticmethod
    def Create(path: str, bufferSize: int, options: FileOptions) -> FileStream:...
    @staticmethod
    def Create(path: str, bufferSize: int) -> FileStream:...
    @staticmethod
    def Create(path: str) -> FileStream:...
    @staticmethod
    def CreateText(path: str) -> StreamWriter:...
    @staticmethod
    def Decrypt(path: str):...
    @staticmethod
    def Delete(path: str):...
    @staticmethod
    def Encrypt(path: str):...
    @staticmethod
    def Exists(path: str) -> bool:...
    @staticmethod
    def GetAccessControl(path: str, includeSections: _n_6_t_1) -> _n_6_t_2:...
    @staticmethod
    def GetAccessControl(path: str) -> _n_6_t_2:...
    @staticmethod
    def GetAttributes(path: str) -> FileAttributes:...
    @staticmethod
    def GetCreationTime(path: str) -> _n_1_t_9:...
    @staticmethod
    def GetCreationTimeUtc(path: str) -> _n_1_t_9:...
    @staticmethod
    def GetLastAccessTime(path: str) -> _n_1_t_9:...
    @staticmethod
    def GetLastAccessTimeUtc(path: str) -> _n_1_t_9:...
    @staticmethod
    def GetLastWriteTime(path: str) -> _n_1_t_9:...
    @staticmethod
    def GetLastWriteTimeUtc(path: str) -> _n_1_t_9:...
    @staticmethod
    def Move(sourceFileName: str, destFileName: str):...
    @staticmethod
    def Open(path: str, mode: FileMode, access: FileAccess, share: FileShare) -> FileStream:...
    @staticmethod
    def Open(path: str, mode: FileMode, access: FileAccess) -> FileStream:...
    @staticmethod
    def Open(path: str, mode: FileMode) -> FileStream:...
    @staticmethod
    def OpenRead(path: str) -> FileStream:...
    @staticmethod
    def OpenText(path: str) -> StreamReader:...
    @staticmethod
    def OpenWrite(path: str) -> FileStream:...
    @staticmethod
    def ReadAllBytes(path: str) -> _n_1_t_2[_n_1_t_3]:...
    @staticmethod
    def ReadAllLines(path: str, encoding: _n_7_t_0) -> _n_1_t_2[str]:...
    @staticmethod
    def ReadAllLines(path: str) -> _n_1_t_2[str]:...
    @staticmethod
    def ReadAllText(path: str, encoding: _n_7_t_0) -> str:...
    @staticmethod
    def ReadAllText(path: str) -> str:...
    @staticmethod
    def ReadLines(path: str, encoding: _n_7_t_0) -> _n_2_t_0[str]:...
    @staticmethod
    def ReadLines(path: str) -> _n_2_t_0[str]:...
    @staticmethod
    def Replace(sourceFileName: str, destinationFileName: str, destinationBackupFileName: str, ignoreMetadataErrors: bool):...
    @staticmethod
    def Replace(sourceFileName: str, destinationFileName: str, destinationBackupFileName: str):...
    @staticmethod
    def SetAccessControl(path: str, fileSecurity: _n_6_t_2):...
    @staticmethod
    def SetAttributes(path: str, fileAttributes: FileAttributes):...
    @staticmethod
    def SetCreationTime(path: str, creationTime: _n_1_t_9):...
    @staticmethod
    def SetCreationTimeUtc(path: str, creationTimeUtc: _n_1_t_9):...
    @staticmethod
    def SetLastAccessTime(path: str, lastAccessTime: _n_1_t_9):...
    @staticmethod
    def SetLastAccessTimeUtc(path: str, lastAccessTimeUtc: _n_1_t_9):...
    @staticmethod
    def SetLastWriteTime(path: str, lastWriteTime: _n_1_t_9):...
    @staticmethod
    def SetLastWriteTimeUtc(path: str, lastWriteTimeUtc: _n_1_t_9):...
    @staticmethod
    def WriteAllBytes(path: str, bytes: _n_1_t_2[_n_1_t_3]):...
    @staticmethod
    def WriteAllLines(path: str, contents: _n_2_t_0[str], encoding: _n_7_t_0):...
    @staticmethod
    def WriteAllLines(path: str, contents: _n_2_t_0[str]):...
    @staticmethod
    def WriteAllLines(path: str, contents: _n_1_t_2[str], encoding: _n_7_t_0):...
    @staticmethod
    def WriteAllLines(path: str, contents: _n_1_t_2[str]):...
    @staticmethod
    def WriteAllText(path: str, contents: str, encoding: _n_7_t_0):...
    @staticmethod
    def WriteAllText(path: str, contents: str):...
class FileAccess(_n_1_t_11, _n_1_t_12, _n_1_t_13, _n_1_t_14):
    Read: int
    ReadWrite: int
    value__: int
    Write: int
class FileAttributes(_n_1_t_11, _n_1_t_12, _n_1_t_13, _n_1_t_14):
    Archive: int
    Compressed: int
    Device: int
    Directory: int
    Encrypted: int
    Hidden: int
    IntegrityStream: int
    Normal: int
    NoScrubData: int
    NotContentIndexed: int
    Offline: int
    ReadOnly: int
    ReparsePoint: int
    SparseFile: int
    System: int
    Temporary: int
    value__: int
class FileInfo(FileSystemInfo, _n_5_t_0):
    @property
    def Directory(self) -> DirectoryInfo:"""Directory { get; } -> DirectoryInfo"""
    @property
    def DirectoryName(self) -> str:"""DirectoryName { get; } -> str"""
    @property
    def IsReadOnly(self) -> bool:"""IsReadOnly { get; set; } -> bool"""
    @property
    def Length(self) -> int:"""Length { get; } -> int"""
    def __init__(self, fileName: str) -> FileInfo:...
    def AppendText(self) -> StreamWriter:...
    def CopyTo(self, destFileName: str, overwrite: bool) -> FileInfo:...
    def CopyTo(self, destFileName: str) -> FileInfo:...
    def Create(self) -> FileStream:...
    def CreateText(self) -> StreamWriter:...
    def Decrypt(self):...
    def Encrypt(self):...
    def GetAccessControl(self, includeSections: _n_6_t_1) -> _n_6_t_2:...
    def GetAccessControl(self) -> _n_6_t_2:...
    def MoveTo(self, destFileName: str):...
    def Open(self, mode: FileMode, access: FileAccess, share: FileShare) -> FileStream:...
    def Open(self, mode: FileMode, access: FileAccess) -> FileStream:...
    def Open(self, mode: FileMode) -> FileStream:...
    def OpenRead(self) -> FileStream:...
    def OpenText(self) -> StreamReader:...
    def OpenWrite(self) -> FileStream:...
    def Replace(self, destinationFileName: str, destinationBackupFileName: str, ignoreMetadataErrors: bool) -> FileInfo:...
    def Replace(self, destinationFileName: str, destinationBackupFileName: str) -> FileInfo:...
    def SetAccessControl(self, fileSecurity: _n_6_t_2):...
class FileLoadException(IOException, _n_5_t_0, _n_4_t_0):
    @property
    def FileName(self) -> str:"""FileName { get; } -> str"""
    @property
    def FusionLog(self) -> str:"""FusionLog { get; } -> str"""
    def __init__(self, message: str, fileName: str, inner: _n_1_t_10) -> FileLoadException:...
    def __init__(self, message: str, fileName: str) -> FileLoadException:...
    def __init__(self, message: str, inner: _n_1_t_10) -> FileLoadException:...
    def __init__(self, message: str) -> FileLoadException:...
    def __init__(self) -> FileLoadException:...
class FileMode(_n_1_t_11, _n_1_t_12, _n_1_t_13, _n_1_t_14):
    Append: int
    Create: int
    CreateNew: int
    Open: int
    OpenOrCreate: int
    Truncate: int
    value__: int
class FileNotFoundException(IOException, _n_5_t_0, _n_4_t_0):
    @property
    def FileName(self) -> str:"""FileName { get; } -> str"""
    @property
    def FusionLog(self) -> str:"""FusionLog { get; } -> str"""
    def __init__(self, message: str, fileName: str, innerException: _n_1_t_10) -> FileNotFoundException:...
    def __init__(self, message: str, fileName: str) -> FileNotFoundException:...
    def __init__(self, message: str, innerException: _n_1_t_10) -> FileNotFoundException:...
    def __init__(self, message: str) -> FileNotFoundException:...
    def __init__(self) -> FileNotFoundException:...
class FileOptions(_n_1_t_11, _n_1_t_12, _n_1_t_13, _n_1_t_14):
    Asynchronous: int
    DeleteOnClose: int
    Encrypted: int
    _None: int
    RandomAccess: int
    SequentialScan: int
    value__: int
    WriteThrough: int
class FileShare(_n_1_t_11, _n_1_t_12, _n_1_t_13, _n_1_t_14):
    Delete: int
    Inheritable: int
    _None: int
    Read: int
    ReadWrite: int
    value__: int
    Write: int
class FileStream(Stream, _n_1_t_0):
    @property
    def Handle(self) -> _n_1_t_18:"""Handle { get; } -> IntPtr"""
    @property
    def IsAsync(self) -> bool:"""IsAsync { get; } -> bool"""
    @property
    def Name(self) -> str:"""Name { get; } -> str"""
    @property
    def SafeFileHandle(self) -> _n_0_t_0:"""SafeFileHandle { get; } -> SafeFileHandle"""
    def __init__(self, handle: _n_0_t_0, access: FileAccess, bufferSize: int, isAsync: bool) -> FileStream:...
    def __init__(self, handle: _n_0_t_0, access: FileAccess, bufferSize: int) -> FileStream:...
    def __init__(self, handle: _n_0_t_0, access: FileAccess) -> FileStream:...
    def __init__(self, handle: _n_1_t_18, access: FileAccess, ownsHandle: bool, bufferSize: int, isAsync: bool) -> FileStream:...
    def __init__(self, handle: _n_1_t_18, access: FileAccess, ownsHandle: bool, bufferSize: int) -> FileStream:...
    def __init__(self, handle: _n_1_t_18, access: FileAccess, ownsHandle: bool) -> FileStream:...
    def __init__(self, handle: _n_1_t_18, access: FileAccess) -> FileStream:...
    def __init__(self, path: str, mode: FileMode, rights: _n_6_t_3, share: FileShare, bufferSize: int, options: FileOptions) -> FileStream:...
    def __init__(self, path: str, mode: FileMode, rights: _n_6_t_3, share: FileShare, bufferSize: int, options: FileOptions, fileSecurity: _n_6_t_2) -> FileStream:...
    def __init__(self, path: str, mode: FileMode, access: FileAccess, share: FileShare, bufferSize: int, useAsync: bool) -> FileStream:...
    def __init__(self, path: str, mode: FileMode, access: FileAccess, share: FileShare, bufferSize: int, options: FileOptions) -> FileStream:...
    def __init__(self, path: str, mode: FileMode, access: FileAccess, share: FileShare, bufferSize: int) -> FileStream:...
    def __init__(self, path: str, mode: FileMode, access: FileAccess, share: FileShare) -> FileStream:...
    def __init__(self, path: str, mode: FileMode, access: FileAccess) -> FileStream:...
    def __init__(self, path: str, mode: FileMode) -> FileStream:...
    def GetAccessControl(self) -> _n_6_t_2:...
    def Lock(self, position: int, length: int):...
    def SetAccessControl(self, fileSecurity: _n_6_t_2):...
    def Unlock(self, position: int, length: int):...
class FileSystemEventArgs(_n_1_t_15):
    @property
    def ChangeType(self) -> WatcherChangeTypes:"""ChangeType { get; } -> WatcherChangeTypes"""
    @property
    def FullPath(self) -> str:"""FullPath { get; } -> str"""
    @property
    def Name(self) -> str:"""Name { get; } -> str"""
    def __init__(self, changeType: WatcherChangeTypes, directory: str, name: str) -> FileSystemEventArgs:...
class FileSystemEventHandler(_n_1_t_16, _n_1_t_17, _n_5_t_0):
    def __init__(self, object: object, method: _n_1_t_18) -> FileSystemEventHandler:...
    def BeginInvoke(self, sender: object, e: FileSystemEventArgs, callback: _n_1_t_20, object: object) -> _n_1_t_19:...
    def EndInvoke(self, result: _n_1_t_19):...
    def Invoke(self, sender: object, e: FileSystemEventArgs):...
class FileSystemInfo(_n_1_t_21, _n_5_t_0):
    @property
    def Attributes(self) -> FileAttributes:"""Attributes { get; set; } -> FileAttributes"""
    @property
    def CreationTime(self) -> _n_1_t_9:"""CreationTime { get; set; } -> DateTime"""
    @property
    def CreationTimeUtc(self) -> _n_1_t_9:"""CreationTimeUtc { get; set; } -> DateTime"""
    @property
    def Exists(self) -> bool:"""Exists { get; } -> bool"""
    @property
    def Extension(self) -> str:"""Extension { get; } -> str"""
    @property
    def FullName(self) -> str:"""FullName { get; } -> str"""
    @property
    def LastAccessTime(self) -> _n_1_t_9:"""LastAccessTime { get; set; } -> DateTime"""
    @property
    def LastAccessTimeUtc(self) -> _n_1_t_9:"""LastAccessTimeUtc { get; set; } -> DateTime"""
    @property
    def LastWriteTime(self) -> _n_1_t_9:"""LastWriteTime { get; set; } -> DateTime"""
    @property
    def LastWriteTimeUtc(self) -> _n_1_t_9:"""LastWriteTimeUtc { get; set; } -> DateTime"""
    @property
    def Name(self) -> str:"""Name { get; } -> str"""
    def Delete(self):...
    def Refresh(self):...
class FileSystemWatcher(_n_3_t_0, _n_3_t_1, _n_3_t_2):
    @property
    def EnableRaisingEvents(self) -> bool:"""EnableRaisingEvents { get; set; } -> bool"""
    @property
    def Filter(self) -> str:"""Filter { get; set; } -> str"""
    @property
    def IncludeSubdirectories(self) -> bool:"""IncludeSubdirectories { get; set; } -> bool"""
    @property
    def InternalBufferSize(self) -> int:"""InternalBufferSize { get; set; } -> int"""
    @property
    def NotifyFilter(self) -> NotifyFilters:"""NotifyFilter { get; set; } -> NotifyFilters"""
    @property
    def Path(self) -> str:"""Path { get; set; } -> str"""
    @property
    def SynchronizingObject(self) -> _n_3_t_3:"""SynchronizingObject { get; set; } -> ISynchronizeInvoke"""
    @property
    def Changed(self) -> FileSystemEventHandler:
        """Changed Event: FileSystemEventHandler"""
    @property
    def Created(self) -> FileSystemEventHandler:
        """Created Event: FileSystemEventHandler"""
    @property
    def Deleted(self) -> FileSystemEventHandler:
        """Deleted Event: FileSystemEventHandler"""
    @property
    def Error(self) -> ErrorEventHandler:
        """Error Event: ErrorEventHandler"""
    @property
    def Renamed(self) -> RenamedEventHandler:
        """Renamed Event: RenamedEventHandler"""
    def __init__(self, path: str, filter: str) -> FileSystemWatcher:...
    def __init__(self, path: str) -> FileSystemWatcher:...
    def __init__(self) -> FileSystemWatcher:...
    def WaitForChanged(self, changeType: WatcherChangeTypes, timeout: int) -> WaitForChangedResult:...
    def WaitForChanged(self, changeType: WatcherChangeTypes) -> WaitForChangedResult:...
class HandleInheritability(_n_1_t_11, _n_1_t_12, _n_1_t_13, _n_1_t_14):
    Inheritable: int
    _None: int
    value__: int
class InternalBufferOverflowException(_n_1_t_22, _n_5_t_0, _n_4_t_0):
    def __init__(self, message: str, inner: _n_1_t_10) -> InternalBufferOverflowException:...
    def __init__(self, message: str) -> InternalBufferOverflowException:...
    def __init__(self) -> InternalBufferOverflowException:...
class InvalidDataException(_n_1_t_22, _n_5_t_0, _n_4_t_0):
    def __init__(self, message: str, innerException: _n_1_t_10) -> InvalidDataException:...
    def __init__(self, message: str) -> InvalidDataException:...
    def __init__(self) -> InvalidDataException:...
class IODescriptionAttribute(_n_3_t_4, _n_4_t_1):
    def __init__(self, description: str) -> IODescriptionAttribute:...
class IOException(_n_1_t_22, _n_5_t_0, _n_4_t_0):
    def __init__(self, message: str, innerException: _n_1_t_10) -> IOException:...
    def __init__(self, message: str, hresult: int) -> IOException:...
    def __init__(self, message: str) -> IOException:...
    def __init__(self) -> IOException:...
class MemoryStream(Stream, _n_1_t_0):
    @property
    def Capacity(self) -> int:"""Capacity { get; set; } -> int"""
    def __init__(self, buffer: _n_1_t_2[_n_1_t_3], index: int, count: int, writable: bool, publiclyVisible: bool) -> MemoryStream:...
    def __init__(self, buffer: _n_1_t_2[_n_1_t_3], index: int, count: int, writable: bool) -> MemoryStream:...
    def __init__(self, buffer: _n_1_t_2[_n_1_t_3], index: int, count: int) -> MemoryStream:...
    def __init__(self, buffer: _n_1_t_2[_n_1_t_3], writable: bool) -> MemoryStream:...
    def __init__(self, buffer: _n_1_t_2[_n_1_t_3]) -> MemoryStream:...
    def __init__(self, capacity: int) -> MemoryStream:...
    def __init__(self) -> MemoryStream:...
    def GetBuffer(self) -> _n_1_t_2[_n_1_t_3]:...
    def ToArray(self) -> _n_1_t_2[_n_1_t_3]:...
    def TryGetBuffer(self, buffer: _n_1_t_23[_n_1_t_3]) -> bool:...
    def WriteTo(self, stream: Stream):...
class NotifyFilters(_n_1_t_11, _n_1_t_12, _n_1_t_13, _n_1_t_14):
    Attributes: int
    CreationTime: int
    DirectoryName: int
    FileName: int
    LastAccess: int
    LastWrite: int
    Security: int
    Size: int
    value__: int
class Path(object):
    AltDirectorySeparatorChar: int
    DirectorySeparatorChar: int
    InvalidPathChars: int
    PathSeparator: int
    VolumeSeparatorChar: int
    @staticmethod
    def ChangeExtension(path: str, extension: str) -> str:...
    @staticmethod
    def Combine(paths: _n_1_t_2[str]) -> str:...
    @staticmethod
    def Combine(path1: str, path2: str, path3: str, path4: str) -> str:...
    @staticmethod
    def Combine(path1: str, path2: str, path3: str) -> str:...
    @staticmethod
    def Combine(path1: str, path2: str) -> str:...
    @staticmethod
    def GetDirectoryName(path: str) -> str:...
    @staticmethod
    def GetExtension(path: str) -> str:...
    @staticmethod
    def GetFileName(path: str) -> str:...
    @staticmethod
    def GetFileNameWithoutExtension(path: str) -> str:...
    @staticmethod
    def GetFullPath(path: str) -> str:...
    @staticmethod
    def GetInvalidFileNameChars() -> _n_1_t_2[_n_1_t_1]:...
    @staticmethod
    def GetInvalidPathChars() -> _n_1_t_2[_n_1_t_1]:...
    @staticmethod
    def GetPathRoot(path: str) -> str:...
    @staticmethod
    def GetRandomFileName() -> str:...
    @staticmethod
    def GetTempFileName() -> str:...
    @staticmethod
    def GetTempPath() -> str:...
    @staticmethod
    def HasExtension(path: str) -> bool:...
    @staticmethod
    def IsPathRooted(path: str) -> bool:...
class PathTooLongException(IOException, _n_5_t_0, _n_4_t_0):
    def __init__(self, message: str, innerException: _n_1_t_10) -> PathTooLongException:...
    def __init__(self, message: str) -> PathTooLongException:...
    def __init__(self) -> PathTooLongException:...
class RenamedEventArgs(FileSystemEventArgs):
    @property
    def OldFullPath(self) -> str:"""OldFullPath { get; } -> str"""
    @property
    def OldName(self) -> str:"""OldName { get; } -> str"""
    def __init__(self, changeType: WatcherChangeTypes, directory: str, name: str, oldName: str) -> RenamedEventArgs:...
class RenamedEventHandler(_n_1_t_16, _n_1_t_17, _n_5_t_0):
    def __init__(self, object: object, method: _n_1_t_18) -> RenamedEventHandler:...
    def BeginInvoke(self, sender: object, e: RenamedEventArgs, callback: _n_1_t_20, object: object) -> _n_1_t_19:...
    def EndInvoke(self, result: _n_1_t_19):...
    def Invoke(self, sender: object, e: RenamedEventArgs):...
class SearchOption(_n_1_t_11, _n_1_t_12, _n_1_t_13, _n_1_t_14):
    AllDirectories: int
    TopDirectoryOnly: int
    value__: int
class SeekOrigin(_n_1_t_11, _n_1_t_12, _n_1_t_13, _n_1_t_14):
    Begin: int
    Current: int
    End: int
    value__: int
class Stream(_n_1_t_21, _n_1_t_0):
    Null: int
    @property
    def CanRead(self) -> bool:"""CanRead { get; } -> bool"""
    @property
    def CanSeek(self) -> bool:"""CanSeek { get; } -> bool"""
    @property
    def CanTimeout(self) -> bool:"""CanTimeout { get; } -> bool"""
    @property
    def CanWrite(self) -> bool:"""CanWrite { get; } -> bool"""
    @property
    def Length(self) -> int:"""Length { get; } -> int"""
    @property
    def Position(self) -> int:"""Position { get; set; } -> int"""
    @property
    def ReadTimeout(self) -> int:"""ReadTimeout { get; set; } -> int"""
    @property
    def WriteTimeout(self) -> int:"""WriteTimeout { get; set; } -> int"""
    def BeginRead(self, buffer: _n_1_t_2[_n_1_t_3], offset: int, count: int, callback: _n_1_t_20, state: object) -> _n_1_t_19:...
    def BeginWrite(self, buffer: _n_1_t_2[_n_1_t_3], offset: int, count: int, callback: _n_1_t_20, state: object) -> _n_1_t_19:...
    def Close(self):...
    def CopyTo(self, destination: Stream, bufferSize: int):...
    def CopyTo(self, destination: Stream):...
    def CopyToAsync(self, destination: Stream, bufferSize: int, cancellationToken: _n_8_t_0) -> _n_9_t_0:...
    def CopyToAsync(self, destination: Stream, bufferSize: int) -> _n_9_t_0:...
    def CopyToAsync(self, destination: Stream) -> _n_9_t_0:...
    def EndRead(self, asyncResult: _n_1_t_19) -> int:...
    def EndWrite(self, asyncResult: _n_1_t_19):...
    def Flush(self):...
    def FlushAsync(self, cancellationToken: _n_8_t_0) -> _n_9_t_0:...
    def FlushAsync(self) -> _n_9_t_0:...
    def Read(self, buffer: _n_1_t_2[_n_1_t_3], offset: int, count: int) -> int:...
    def ReadAsync(self, buffer: _n_1_t_2[_n_1_t_3], offset: int, count: int, cancellationToken: _n_8_t_0) -> _n_9_t_0[int]:...
    def ReadAsync(self, buffer: _n_1_t_2[_n_1_t_3], offset: int, count: int) -> _n_9_t_0[int]:...
    def ReadByte(self) -> int:...
    def Seek(self, offset: int, origin: SeekOrigin) -> int:...
    def SetLength(self, value: int):...
    @staticmethod
    def Synchronized(stream: Stream) -> Stream:...
    def Write(self, buffer: _n_1_t_2[_n_1_t_3], offset: int, count: int):...
    def WriteAsync(self, buffer: _n_1_t_2[_n_1_t_3], offset: int, count: int, cancellationToken: _n_8_t_0) -> _n_9_t_0:...
    def WriteAsync(self, buffer: _n_1_t_2[_n_1_t_3], offset: int, count: int) -> _n_9_t_0:...
    def WriteByte(self, value: _n_1_t_3):...
class StreamReader(TextReader, _n_1_t_0):
    Null: int
    @property
    def BaseStream(self) -> Stream:"""BaseStream { get; } -> Stream"""
    @property
    def CurrentEncoding(self) -> _n_7_t_0:"""CurrentEncoding { get; } -> Encoding"""
    @property
    def EndOfStream(self) -> bool:"""EndOfStream { get; } -> bool"""
    def __init__(self, path: str, encoding: _n_7_t_0, detectEncodingFromByteOrderMarks: bool, bufferSize: int) -> StreamReader:...
    def __init__(self, path: str, encoding: _n_7_t_0, detectEncodingFromByteOrderMarks: bool) -> StreamReader:...
    def __init__(self, path: str, encoding: _n_7_t_0) -> StreamReader:...
    def __init__(self, path: str, detectEncodingFromByteOrderMarks: bool) -> StreamReader:...
    def __init__(self, path: str) -> StreamReader:...
    def __init__(self, stream: Stream, encoding: _n_7_t_0, detectEncodingFromByteOrderMarks: bool, bufferSize: int, leaveOpen: bool) -> StreamReader:...
    def __init__(self, stream: Stream, encoding: _n_7_t_0, detectEncodingFromByteOrderMarks: bool, bufferSize: int) -> StreamReader:...
    def __init__(self, stream: Stream, encoding: _n_7_t_0, detectEncodingFromByteOrderMarks: bool) -> StreamReader:...
    def __init__(self, stream: Stream, encoding: _n_7_t_0) -> StreamReader:...
    def __init__(self, stream: Stream, detectEncodingFromByteOrderMarks: bool) -> StreamReader:...
    def __init__(self, stream: Stream) -> StreamReader:...
    def DiscardBufferedData(self):...
class StreamWriter(TextWriter, _n_1_t_0):
    Null: int
    @property
    def AutoFlush(self) -> bool:"""AutoFlush { get; set; } -> bool"""
    @property
    def BaseStream(self) -> Stream:"""BaseStream { get; } -> Stream"""
    def __init__(self, path: str, append: bool, encoding: _n_7_t_0, bufferSize: int) -> StreamWriter:...
    def __init__(self, path: str, append: bool) -> StreamWriter:...
    def __init__(self, path: str) -> StreamWriter:...
    def __init__(self, stream: Stream, encoding: _n_7_t_0, bufferSize: int) -> StreamWriter:...
    def __init__(self, path: str, append: bool, encoding: _n_7_t_0) -> StreamWriter:...
    def __init__(self, stream: Stream, encoding: _n_7_t_0, bufferSize: int, leaveOpen: bool) -> StreamWriter:...
    def __init__(self, stream: Stream, encoding: _n_7_t_0) -> StreamWriter:...
    def __init__(self, stream: Stream) -> StreamWriter:...
class StringReader(TextReader, _n_1_t_0):
    def __init__(self, s: str) -> StringReader:...
class StringWriter(TextWriter, _n_1_t_0):
    def __init__(self, sb: _n_7_t_1, formatProvider: _n_1_t_24) -> StringWriter:...
    def __init__(self, sb: _n_7_t_1) -> StringWriter:...
    def __init__(self, formatProvider: _n_1_t_24) -> StringWriter:...
    def __init__(self) -> StringWriter:...
    def GetStringBuilder(self) -> _n_7_t_1:...
class TextReader(_n_1_t_21, _n_1_t_0):
    Null: int
    def Close(self):...
    def Peek(self) -> int:...
    def Read(self, buffer: _n_1_t_2[_n_1_t_1], index: int, count: int) -> int:...
    def Read(self) -> int:...
    def ReadAsync(self, buffer: _n_1_t_2[_n_1_t_1], index: int, count: int) -> _n_9_t_0[int]:...
    def ReadBlock(self, buffer: _n_1_t_2[_n_1_t_1], index: int, count: int) -> int:...
    def ReadBlockAsync(self, buffer: _n_1_t_2[_n_1_t_1], index: int, count: int) -> _n_9_t_0[int]:...
    def ReadLine(self) -> str:...
    def ReadLineAsync(self) -> _n_9_t_0[str]:...
    def ReadToEnd(self) -> str:...
    def ReadToEndAsync(self) -> _n_9_t_0[str]:...
    @staticmethod
    def Synchronized(reader: TextReader) -> TextReader:...
class TextWriter(_n_1_t_21, _n_1_t_0):
    Null: int
    @property
    def Encoding(self) -> _n_7_t_0:"""Encoding { get; } -> Encoding"""
    @property
    def FormatProvider(self) -> _n_1_t_24:"""FormatProvider { get; } -> IFormatProvider"""
    @property
    def NewLine(self) -> str:"""NewLine { get; set; } -> str"""
    def Close(self):...
    def Flush(self):...
    def FlushAsync(self) -> _n_9_t_0:...
    @staticmethod
    def Synchronized(writer: TextWriter) -> TextWriter:...
    def Write(self, format: str, arg: _n_1_t_2[object]):...
    def Write(self, format: str, arg0: object, arg1: object, arg2: object):...
    def Write(self, format: str, arg0: object, arg1: object):...
    def Write(self, format: str, arg0: object):...
    def Write(self, value: object):...
    def Write(self, value: str):...
    def Write(self, value: _n_1_t_4):...
    def Write(self, value: float):...
    def Write(self, value: _n_1_t_8):...
    def Write(self, value: _n_1_t_7):...
    def Write(self, value: int):...
    def Write(self, value: bool):...
    def Write(self, buffer: _n_1_t_2[_n_1_t_1], index: int, count: int):...
    def Write(self, buffer: _n_1_t_2[_n_1_t_1]):...
    def Write(self, value: _n_1_t_1):...
    def WriteAsync(self, buffer: _n_1_t_2[_n_1_t_1], index: int, count: int) -> _n_9_t_0:...
    def WriteAsync(self, buffer: _n_1_t_2[_n_1_t_1]) -> _n_9_t_0:...
    def WriteAsync(self, value: str) -> _n_9_t_0:...
    def WriteAsync(self, value: _n_1_t_1) -> _n_9_t_0:...
    def WriteLine(self, format: str, arg: _n_1_t_2[object]):...
    def WriteLine(self, format: str, arg0: object, arg1: object, arg2: object):...
    def WriteLine(self, format: str, arg0: object, arg1: object):...
    def WriteLine(self, format: str, arg0: object):...
    def WriteLine(self, value: object):...
    def WriteLine(self, value: str):...
    def WriteLine(self, value: _n_1_t_4):...
    def WriteLine(self, value: float):...
    def WriteLine(self, value: _n_1_t_8):...
    def WriteLine(self, value: _n_1_t_7):...
    def WriteLine(self, value: int):...
    def WriteLine(self, value: bool):...
    def WriteLine(self, buffer: _n_1_t_2[_n_1_t_1], index: int, count: int):...
    def WriteLine(self, buffer: _n_1_t_2[_n_1_t_1]):...
    def WriteLine(self, value: _n_1_t_1):...
    def WriteLine(self):...
    def WriteLineAsync(self) -> _n_9_t_0:...
    def WriteLineAsync(self, buffer: _n_1_t_2[_n_1_t_1], index: int, count: int) -> _n_9_t_0:...
    def WriteLineAsync(self, buffer: _n_1_t_2[_n_1_t_1]) -> _n_9_t_0:...
    def WriteLineAsync(self, value: str) -> _n_9_t_0:...
    def WriteLineAsync(self, value: _n_1_t_1) -> _n_9_t_0:...
class UnmanagedMemoryAccessor(_n_1_t_0):
    @property
    def CanRead(self) -> bool:"""CanRead { get; } -> bool"""
    @property
    def CanWrite(self) -> bool:"""CanWrite { get; } -> bool"""
    @property
    def Capacity(self) -> int:"""Capacity { get; } -> int"""
    def __init__(self, buffer: _n_4_t_2, offset: int, capacity: int, access: FileAccess) -> UnmanagedMemoryAccessor:...
    def __init__(self, buffer: _n_4_t_2, offset: int, capacity: int) -> UnmanagedMemoryAccessor:...
    def Read(self, position: int, structure: object):...
    def ReadArray(self, position: int, array: _n_1_t_2[typing.Any], offset: int, count: int) -> int:...
    def ReadBoolean(self, position: int) -> bool:...
    def ReadByte(self, position: int) -> _n_1_t_3:...
    def ReadChar(self, position: int) -> _n_1_t_1:...
    def ReadDecimal(self, position: int) -> _n_1_t_4:...
    def ReadDouble(self, position: int) -> float:...
    def ReadInt16(self, position: int) -> int:...
    def ReadInt32(self, position: int) -> int:...
    def ReadInt64(self, position: int) -> int:...
    def ReadSByte(self, position: int) -> _n_1_t_5:...
    def ReadSingle(self, position: int) -> float:...
    def ReadUInt16(self, position: int) -> _n_1_t_6:...
    def ReadUInt32(self, position: int) -> _n_1_t_7:...
    def ReadUInt64(self, position: int) -> _n_1_t_8:...
    def Write(self, position: int, structure: object):...
    def Write(self, position: int, value: _n_1_t_8):...
    def Write(self, position: int, value: _n_1_t_7):...
    def Write(self, position: int, value: _n_1_t_6):...
    def Write(self, position: int, value: _n_1_t_5):...
    def Write(self, position: int, value: float):...
    def Write(self, position: int, value: _n_1_t_4):...
    def Write(self, position: int, value: int):...
    def Write(self, position: int, value: _n_1_t_1):...
    def Write(self, position: int, value: _n_1_t_3):...
    def Write(self, position: int, value: bool):...
    def WriteArray(self, position: int, array: _n_1_t_2[typing.Any], offset: int, count: int):...
class UnmanagedMemoryStream(Stream, _n_1_t_0):
    @property
    def Capacity(self) -> int:"""Capacity { get; } -> int"""
    @property
    def PositionPointer(self) -> _n_1_t_3:"""PositionPointer { get; set; } -> Byte"""
    def __init__(self, pointer: _n_1_t_3, length: int, capacity: int, access: FileAccess) -> UnmanagedMemoryStream:...
    def __init__(self, pointer: _n_1_t_3, length: int) -> UnmanagedMemoryStream:...
    def __init__(self, buffer: _n_4_t_2, offset: int, length: int, access: FileAccess) -> UnmanagedMemoryStream:...
    def __init__(self, buffer: _n_4_t_2, offset: int, length: int) -> UnmanagedMemoryStream:...
class WaitForChangedResult(_n_1_t_25):
    @property
    def ChangeType(self) -> WatcherChangeTypes:"""ChangeType { get; set; } -> WatcherChangeTypes"""
    @property
    def Name(self) -> str:"""Name { get; set; } -> str"""
    @property
    def OldName(self) -> str:"""OldName { get; set; } -> str"""
    @property
    def TimedOut(self) -> bool:"""TimedOut { get; set; } -> bool"""
class WatcherChangeTypes(_n_1_t_11, _n_1_t_12, _n_1_t_13, _n_1_t_14):
    All: int
    Changed: int
    Created: int
    Deleted: int
    Renamed: int
    value__: int
