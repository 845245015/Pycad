import __clrclasses__.System.Configuration as Configuration
import __clrclasses__.System.IO as IO
import __clrclasses__.System.Security as Security
import __clrclasses__.System.Resources as Resources
import __clrclasses__.System.Globalization as Globalization
import __clrclasses__.System.Diagnostics as Diagnostics
import __clrclasses__.System.Reflection as Reflection
import __clrclasses__.System.Deployment as Deployment
import __clrclasses__.System.Runtime as Runtime
import __clrclasses__.System.Threading as Threading
import __clrclasses__.System.Dynamic as Dynamic
import __clrclasses__.System.Linq as Linq
import __clrclasses__.System.Management as Management
import __clrclasses__.System.Web as Web
import __clrclasses__.System.Timers as Timers
import __clrclasses__.System.Net as Net
import __clrclasses__.System.Windows as Windows
import __clrclasses__.System.Media as Media
import __clrclasses__.System.Collections as Collections
import __clrclasses__.System.ComponentModel as ComponentModel
import __clrclasses__.System.CodeDom as CodeDom
import __clrclasses__.System.Text as Text
from __clrclasses__.System.Collections import IList as _n_0_t_0
from __clrclasses__.System.Collections import IStructuralComparable as _n_0_t_1
from __clrclasses__.System.Collections import IStructuralEquatable as _n_0_t_2
from __clrclasses__.System.Collections import IComparer as _n_0_t_3
from __clrclasses__.System.Collections import IEnumerator as _n_0_t_4
from __clrclasses__.System.Collections import IDictionary as _n_0_t_5
from __clrclasses__.System.Collections import IEqualityComparer as _n_0_t_6
from __clrclasses__.System.Collections.Generic import IEnumerable as _n_1_t_0
from __clrclasses__.System.Collections.Generic import IComparer as _n_1_t_1
from __clrclasses__.System.Collections.Generic import IList as _n_1_t_2
from __clrclasses__.System.Collections.Generic import IReadOnlyList as _n_1_t_3
from __clrclasses__.System.Collections.Generic import IEnumerator as _n_1_t_4
from __clrclasses__.System.Collections.Generic import IEqualityComparer as _n_1_t_5
from __clrclasses__.System.Collections.ObjectModel import ReadOnlyCollection as _n_2_t_0
from __clrclasses__.System.ComponentModel import TypeConverter as _n_3_t_0
from __clrclasses__.System.Configuration.Assemblies import AssemblyHashAlgorithm as _n_4_t_0
from __clrclasses__.System.Globalization import CultureInfo as _n_5_t_0
from __clrclasses__.System.Globalization import NumberStyles as _n_5_t_1
from __clrclasses__.System.Globalization import UnicodeCategory as _n_5_t_2
from __clrclasses__.System.Globalization import Calendar as _n_5_t_3
from __clrclasses__.System.Globalization import DateTimeStyles as _n_5_t_4
from __clrclasses__.System.Globalization import TimeSpanStyles as _n_5_t_5
from __clrclasses__.System.Globalization import DaylightTime as _n_5_t_6
from __clrclasses__.System.IO import TextWriter as _n_6_t_0
from __clrclasses__.System.IO import TextReader as _n_6_t_1
from __clrclasses__.System.IO import Stream as _n_6_t_2
from __clrclasses__.System.Reflection import BindingFlags as _n_7_t_0
from __clrclasses__.System.Reflection import Binder as _n_7_t_1
from __clrclasses__.System.Reflection import AssemblyName as _n_7_t_2
from __clrclasses__.System.Reflection import Assembly as _n_7_t_3
from __clrclasses__.System.Reflection import Module as _n_7_t_4
from __clrclasses__.System.Reflection import ParameterInfo as _n_7_t_5
from __clrclasses__.System.Reflection import MemberInfo as _n_7_t_6
from __clrclasses__.System.Reflection import MethodInfo as _n_7_t_7
from __clrclasses__.System.Reflection import ICustomAttributeProvider as _n_7_t_8
from __clrclasses__.System.Reflection import IReflect as _n_7_t_9
from __clrclasses__.System.Reflection import MethodBase as _n_7_t_10
from __clrclasses__.System.Reflection import GenericParameterAttributes as _n_7_t_11
from __clrclasses__.System.Reflection import FieldInfo as _n_7_t_12
from __clrclasses__.System.Reflection import EventInfo as _n_7_t_13
from __clrclasses__.System.Reflection import PropertyInfo as _n_7_t_14
from __clrclasses__.System.Reflection import TypeInfo as _n_7_t_15
from __clrclasses__.System.Reflection.Emit import AssemblyBuilder as _n_8_t_0
from __clrclasses__.System.Reflection.Emit import AssemblyBuilderAccess as _n_8_t_1
from __clrclasses__.System.Runtime.ExceptionServices import FirstChanceExceptionEventArgs as _n_9_t_0
from __clrclasses__.System.Runtime.Hosting import ApplicationActivator as _n_10_t_0
from __clrclasses__.System.Runtime.Hosting import ActivationArguments as _n_10_t_1
from __clrclasses__.System.Runtime.InteropServices import _Exception as _n_11_t_0
from __clrclasses__.System.Runtime.InteropServices import _Activator as _n_11_t_1
from __clrclasses__.System.Runtime.InteropServices import _Attribute as _n_11_t_2
from __clrclasses__.System.Runtime.InteropServices import _MemberInfo as _n_11_t_3
from __clrclasses__.System.Runtime.InteropServices import _Type as _n_11_t_4
from __clrclasses__.System.Runtime.InteropServices import StructLayoutAttribute as _n_11_t_5
from __clrclasses__.System.Runtime.Remoting import ObjectHandle as _n_12_t_0
from __clrclasses__.System.Runtime.Remoting import ObjRef as _n_12_t_1
from __clrclasses__.System.Runtime.Serialization import ISerializable as _n_13_t_0
from __clrclasses__.System.Runtime.Serialization import IDeserializationCallback as _n_13_t_1
from __clrclasses__.System.Security import PermissionSet as _n_14_t_0
from __clrclasses__.System.Security import IEvidenceFactory as _n_14_t_1
from __clrclasses__.System.Security import HostSecurityManager as _n_14_t_2
from __clrclasses__.System.Security import SecurityState as _n_14_t_3
from __clrclasses__.System.Security.Policy import Evidence as _n_15_t_0
from __clrclasses__.System.Security.Policy import PolicyLevel as _n_15_t_1
from __clrclasses__.System.Security.Policy import ApplicationTrust as _n_15_t_2
from __clrclasses__.System.Security.Policy import StrongName as _n_15_t_3
from __clrclasses__.System.Security.Principal import PrincipalPolicy as _n_16_t_0
from __clrclasses__.System.Security.Principal import IPrincipal as _n_16_t_1
from __clrclasses__.System.Text import Encoding as _n_17_t_0
from __clrclasses__.System.Text import NormalizationForm as _n_17_t_1
from __clrclasses__.System.Threading import HostExecutionContextManager as _n_18_t_0
from __clrclasses__.System.Threading import WaitHandle as _n_18_t_1
from __clrclasses__.System.Threading import LazyThreadSafetyMode as _n_18_t_2
from __clrclasses__.System.Threading import CancellationToken as _n_18_t_3
import typing
T = typing.TypeVar('T')
TInput = typing.TypeVar('TInput')
TOutput = typing.TypeVar('TOutput')
TEventArgs = typing.TypeVar('TEventArgs')
TResult = typing.TypeVar('TResult')
T1 = typing.TypeVar('T1')
class _AppDomain():
    @property
    def BaseDirectory(self) -> str:"""BaseDirectory { get; } -> str"""
    @property
    def DynamicDirectory(self) -> str:"""DynamicDirectory { get; } -> str"""
    @property
    def Evidence(self) -> _n_15_t_0:"""Evidence { get; } -> Evidence"""
    @property
    def FriendlyName(self) -> str:"""FriendlyName { get; } -> str"""
    @property
    def RelativeSearchPath(self) -> str:"""RelativeSearchPath { get; } -> str"""
    @property
    def ShadowCopyFiles(self) -> bool:"""ShadowCopyFiles { get; } -> bool"""
    @property
    def AssemblyLoad(self) -> AssemblyLoadEventHandler:
        """AssemblyLoad Event: AssemblyLoadEventHandler"""
    @property
    def AssemblyResolve(self) -> ResolveEventHandler:
        """AssemblyResolve Event: ResolveEventHandler"""
    @property
    def DomainUnload(self) -> EventHandler:
        """DomainUnload Event: EventHandler"""
    @property
    def ProcessExit(self) -> EventHandler:
        """ProcessExit Event: EventHandler"""
    @property
    def ResourceResolve(self) -> ResolveEventHandler:
        """ResourceResolve Event: ResolveEventHandler"""
    @property
    def TypeResolve(self) -> ResolveEventHandler:
        """TypeResolve Event: ResolveEventHandler"""
    @property
    def UnhandledException(self) -> UnhandledExceptionEventHandler:
        """UnhandledException Event: UnhandledExceptionEventHandler"""
    def AppendPrivatePath(self, path: str):...
    def ClearPrivatePath(self):...
    def ClearShadowCopyPath(self):...
    def CreateInstance(self, assemblyName: str, typeName: str, ignoreCase: bool, bindingAttr: _n_7_t_0, binder: _n_7_t_1, args: Array[object], culture: _n_5_t_0, activationAttributes: Array[object], securityAttributes: _n_15_t_0) -> _n_12_t_0:...
    def CreateInstance(self, assemblyName: str, typeName: str, activationAttributes: Array[object]) -> _n_12_t_0:...
    def CreateInstance(self, assemblyName: str, typeName: str) -> _n_12_t_0:...
    def CreateInstanceFrom(self, assemblyFile: str, typeName: str, ignoreCase: bool, bindingAttr: _n_7_t_0, binder: _n_7_t_1, args: Array[object], culture: _n_5_t_0, activationAttributes: Array[object], securityAttributes: _n_15_t_0) -> _n_12_t_0:...
    def CreateInstanceFrom(self, assemblyFile: str, typeName: str, activationAttributes: Array[object]) -> _n_12_t_0:...
    def CreateInstanceFrom(self, assemblyFile: str, typeName: str) -> _n_12_t_0:...
    def DefineDynamicAssembly(self, name: _n_7_t_2, access: _n_8_t_1, dir: str, evidence: _n_15_t_0, requiredPermissions: _n_14_t_0, optionalPermissions: _n_14_t_0, refusedPermissions: _n_14_t_0, isSynchronized: bool) -> _n_8_t_0:...
    def DefineDynamicAssembly(self, name: _n_7_t_2, access: _n_8_t_1, dir: str, evidence: _n_15_t_0, requiredPermissions: _n_14_t_0, optionalPermissions: _n_14_t_0, refusedPermissions: _n_14_t_0) -> _n_8_t_0:...
    def DefineDynamicAssembly(self, name: _n_7_t_2, access: _n_8_t_1, evidence: _n_15_t_0, requiredPermissions: _n_14_t_0, optionalPermissions: _n_14_t_0, refusedPermissions: _n_14_t_0) -> _n_8_t_0:...
    def DefineDynamicAssembly(self, name: _n_7_t_2, access: _n_8_t_1, dir: str, requiredPermissions: _n_14_t_0, optionalPermissions: _n_14_t_0, refusedPermissions: _n_14_t_0) -> _n_8_t_0:...
    def DefineDynamicAssembly(self, name: _n_7_t_2, access: _n_8_t_1, dir: str, evidence: _n_15_t_0) -> _n_8_t_0:...
    def DefineDynamicAssembly(self, name: _n_7_t_2, access: _n_8_t_1, requiredPermissions: _n_14_t_0, optionalPermissions: _n_14_t_0, refusedPermissions: _n_14_t_0) -> _n_8_t_0:...
    def DefineDynamicAssembly(self, name: _n_7_t_2, access: _n_8_t_1, evidence: _n_15_t_0) -> _n_8_t_0:...
    def DefineDynamicAssembly(self, name: _n_7_t_2, access: _n_8_t_1, dir: str) -> _n_8_t_0:...
    def DefineDynamicAssembly(self, name: _n_7_t_2, access: _n_8_t_1) -> _n_8_t_0:...
    def DoCallBack(self, theDelegate: CrossAppDomainDelegate):...
    def Equals(self, other: object) -> bool:...
    def ExecuteAssembly(self, assemblyFile: str, assemblySecurity: _n_15_t_0, args: Array[str]) -> int:...
    def ExecuteAssembly(self, assemblyFile: str) -> int:...
    def ExecuteAssembly(self, assemblyFile: str, assemblySecurity: _n_15_t_0) -> int:...
    def GetAssemblies(self) -> Array[_n_7_t_3]:...
    def GetData(self, name: str) -> object:...
    def GetHashCode(self) -> int:...
    def GetIDsOfNames(self, riid: Guid, rgszNames: IntPtr, cNames: UInt32, lcid: UInt32, rgDispId: IntPtr):...
    def GetLifetimeService(self) -> object:...
    def GetType(self) -> Type:...
    def GetTypeInfo(self, iTInfo: UInt32, lcid: UInt32, ppTInfo: IntPtr):...
    def GetTypeInfoCount(self, pcTInfo: UInt32):...
    def InitializeLifetimeService(self) -> object:...
    def Invoke(self, dispIdMember: UInt32, riid: Guid, lcid: UInt32, wFlags: int, pDispParams: IntPtr, pVarResult: IntPtr, pExcepInfo: IntPtr, puArgErr: IntPtr):...
    def Load(self, assemblyString: str, assemblySecurity: _n_15_t_0) -> _n_7_t_3:...
    def Load(self, assemblyRef: _n_7_t_2, assemblySecurity: _n_15_t_0) -> _n_7_t_3:...
    def Load(self, rawAssembly: Array[Byte], rawSymbolStore: Array[Byte], securityEvidence: _n_15_t_0) -> _n_7_t_3:...
    def Load(self, rawAssembly: Array[Byte], rawSymbolStore: Array[Byte]) -> _n_7_t_3:...
    def Load(self, rawAssembly: Array[Byte]) -> _n_7_t_3:...
    def Load(self, assemblyString: str) -> _n_7_t_3:...
    def Load(self, assemblyRef: _n_7_t_2) -> _n_7_t_3:...
    def SetAppDomainPolicy(self, domainPolicy: _n_15_t_1):...
    def SetCachePath(self, s: str):...
    def SetData(self, name: str, data: object):...
    def SetPrincipalPolicy(self, policy: _n_16_t_0):...
    def SetShadowCopyPath(self, s: str):...
    def SetThreadPrincipal(self, principal: _n_16_t_1):...
    def ToString(self) -> str:...
class AccessViolationException(SystemException, _n_13_t_0, _n_11_t_0):
    def __init__(self, message: str, innerException: Exception) -> AccessViolationException:...
    def __init__(self, message: str) -> AccessViolationException:...
    def __init__(self) -> AccessViolationException:...
class Action(MulticastDelegate, ICloneable, _n_13_t_0, typing.Generic[T]):
    def __init__(self, object: object, method: IntPtr) -> Action:...
    def BeginInvoke(self, obj: T, callback: AsyncCallback, object: object) -> IAsyncResult:...
    def EndInvoke(self, result: IAsyncResult):...
    def Invoke(self, obj: T):...
class ActivationContext(IDisposable, _n_13_t_0):
    @property
    def ApplicationManifestBytes(self) -> Array[Byte]:"""ApplicationManifestBytes { get; } -> Array"""
    @property
    def DeploymentManifestBytes(self) -> Array[Byte]:"""DeploymentManifestBytes { get; } -> Array"""
    @property
    def Form(self) -> ActivationContext.ContextForm:"""Form { get; } -> ActivationContext.ContextForm"""
    @property
    def Identity(self) -> ApplicationIdentity:"""Identity { get; } -> ApplicationIdentity"""
    @staticmethod
    def CreatePartialActivationContext(identity: ApplicationIdentity, manifestPaths: Array[str]) -> ActivationContext:...
    @staticmethod
    def CreatePartialActivationContext(identity: ApplicationIdentity) -> ActivationContext:...
    class ContextForm(Enum, IComparable, IFormattable, IConvertible):
        Loose: int
        StoreBounded: int
        value__: int
class Activator(_n_11_t_1):
    @staticmethod
    def CreateComInstanceFrom(assemblyName: str, typeName: str, hashValue: Array[Byte], hashAlgorithm: _n_4_t_0) -> _n_12_t_0:...
    @staticmethod
    def CreateComInstanceFrom(assemblyName: str, typeName: str) -> _n_12_t_0:...
    @staticmethod
    def CreateInstance(activationContext: ActivationContext, activationCustomData: Array[str]) -> _n_12_t_0:...
    @staticmethod
    def CreateInstance(activationContext: ActivationContext) -> _n_12_t_0:...
    @staticmethod
    def CreateInstance(domain: AppDomain, assemblyName: str, typeName: str, ignoreCase: bool, bindingAttr: _n_7_t_0, binder: _n_7_t_1, args: Array[object], culture: _n_5_t_0, activationAttributes: Array[object]) -> _n_12_t_0:...
    @staticmethod
    def CreateInstance(domain: AppDomain, assemblyName: str, typeName: str, ignoreCase: bool, bindingAttr: _n_7_t_0, binder: _n_7_t_1, args: Array[object], culture: _n_5_t_0, activationAttributes: Array[object], securityAttributes: _n_15_t_0) -> _n_12_t_0:...
    @staticmethod
    def CreateInstance(domain: AppDomain, assemblyName: str, typeName: str) -> _n_12_t_0:...
    @staticmethod
    def CreateInstance(assemblyName: str, typeName: str, ignoreCase: bool, bindingAttr: _n_7_t_0, binder: _n_7_t_1, args: Array[object], culture: _n_5_t_0, activationAttributes: Array[object]) -> _n_12_t_0:...
    @staticmethod
    def CreateInstance(assemblyName: str, typeName: str, ignoreCase: bool, bindingAttr: _n_7_t_0, binder: _n_7_t_1, args: Array[object], culture: _n_5_t_0, activationAttributes: Array[object], securityInfo: _n_15_t_0) -> _n_12_t_0:...
    @staticmethod
    def CreateInstance() -> typing.Any:...
    @staticmethod
    def CreateInstance(type: Type, nonPublic: bool) -> object:...
    @staticmethod
    def CreateInstance(assemblyName: str, typeName: str, activationAttributes: Array[object]) -> _n_12_t_0:...
    @staticmethod
    def CreateInstance(assemblyName: str, typeName: str) -> _n_12_t_0:...
    @staticmethod
    def CreateInstance(type: Type) -> object:...
    @staticmethod
    def CreateInstance(type: Type, args: Array[object], activationAttributes: Array[object]) -> object:...
    @staticmethod
    def CreateInstance(type: Type, args: Array[object]) -> object:...
    @staticmethod
    def CreateInstance(type: Type, bindingAttr: _n_7_t_0, binder: _n_7_t_1, args: Array[object], culture: _n_5_t_0, activationAttributes: Array[object]) -> object:...
    @staticmethod
    def CreateInstance(type: Type, bindingAttr: _n_7_t_0, binder: _n_7_t_1, args: Array[object], culture: _n_5_t_0) -> object:...
    @staticmethod
    def CreateInstanceFrom(domain: AppDomain, assemblyFile: str, typeName: str, ignoreCase: bool, bindingAttr: _n_7_t_0, binder: _n_7_t_1, args: Array[object], culture: _n_5_t_0, activationAttributes: Array[object]) -> _n_12_t_0:...
    @staticmethod
    def CreateInstanceFrom(domain: AppDomain, assemblyFile: str, typeName: str, ignoreCase: bool, bindingAttr: _n_7_t_0, binder: _n_7_t_1, args: Array[object], culture: _n_5_t_0, activationAttributes: Array[object], securityAttributes: _n_15_t_0) -> _n_12_t_0:...
    @staticmethod
    def CreateInstanceFrom(domain: AppDomain, assemblyFile: str, typeName: str) -> _n_12_t_0:...
    @staticmethod
    def CreateInstanceFrom(assemblyFile: str, typeName: str, ignoreCase: bool, bindingAttr: _n_7_t_0, binder: _n_7_t_1, args: Array[object], culture: _n_5_t_0, activationAttributes: Array[object]) -> _n_12_t_0:...
    @staticmethod
    def CreateInstanceFrom(assemblyFile: str, typeName: str, ignoreCase: bool, bindingAttr: _n_7_t_0, binder: _n_7_t_1, args: Array[object], culture: _n_5_t_0, activationAttributes: Array[object], securityInfo: _n_15_t_0) -> _n_12_t_0:...
    @staticmethod
    def CreateInstanceFrom(assemblyFile: str, typeName: str, activationAttributes: Array[object]) -> _n_12_t_0:...
    @staticmethod
    def CreateInstanceFrom(assemblyFile: str, typeName: str) -> _n_12_t_0:...
    @staticmethod
    def GetObject(type: Type, url: str, state: object) -> object:...
    @staticmethod
    def GetObject(type: Type, url: str) -> object:...
class AggregateException(Exception, _n_13_t_0, _n_11_t_0):
    @property
    def InnerExceptions(self) -> _n_2_t_0[Exception]:"""InnerExceptions { get; } -> ReadOnlyCollection"""
    def __init__(self, message: str, innerExceptions: Array[Exception]) -> AggregateException:...
    def __init__(self, message: str, innerExceptions: _n_1_t_0[Exception]) -> AggregateException:...
    def __init__(self, innerExceptions: Array[Exception]) -> AggregateException:...
    def __init__(self, innerExceptions: _n_1_t_0[Exception]) -> AggregateException:...
    def __init__(self, message: str, innerException: Exception) -> AggregateException:...
    def __init__(self, message: str) -> AggregateException:...
    def __init__(self) -> AggregateException:...
    def Flatten(self) -> AggregateException:...
    def Handle(self, predicate: Func[Exception, bool]):...
class AppContext(object):
    @property
    def BaseDirectory(self) -> str:"""BaseDirectory { get; } -> str"""
    @property
    def TargetFrameworkName(self) -> str:"""TargetFrameworkName { get; } -> str"""
    @staticmethod
    def GetData(name: str) -> object:...
    @staticmethod
    def SetSwitch(switchName: str, isEnabled: bool):...
    @staticmethod
    def TryGetSwitch(switchName: str, isEnabled: bool) -> bool:...
class AppDomain(MarshalByRefObject, _AppDomain, _n_14_t_1):
    @property
    def ActivationContext(self) -> ActivationContext:"""ActivationContext { get; } -> ActivationContext"""
    @property
    def ApplicationIdentity(self) -> ApplicationIdentity:"""ApplicationIdentity { get; } -> ApplicationIdentity"""
    @property
    def ApplicationTrust(self) -> _n_15_t_2:"""ApplicationTrust { get; } -> ApplicationTrust"""
    @property
    def CurrentDomain(self) -> AppDomain:"""CurrentDomain { get; } -> AppDomain"""
    @property
    def DomainManager(self) -> AppDomainManager:"""DomainManager { get; } -> AppDomainManager"""
    @property
    def Id(self) -> int:"""Id { get; } -> int"""
    @property
    def IsFullyTrusted(self) -> bool:"""IsFullyTrusted { get; } -> bool"""
    @property
    def IsHomogenous(self) -> bool:"""IsHomogenous { get; } -> bool"""
    @property
    def MonitoringIsEnabled(self) -> bool:"""MonitoringIsEnabled { get; set; } -> bool"""
    @property
    def MonitoringSurvivedMemorySize(self) -> int:"""MonitoringSurvivedMemorySize { get; } -> int"""
    @property
    def MonitoringSurvivedProcessMemorySize(self) -> int:"""MonitoringSurvivedProcessMemorySize { get; } -> int"""
    @property
    def MonitoringTotalAllocatedMemorySize(self) -> int:"""MonitoringTotalAllocatedMemorySize { get; } -> int"""
    @property
    def MonitoringTotalProcessorTime(self) -> TimeSpan:"""MonitoringTotalProcessorTime { get; } -> TimeSpan"""
    @property
    def PermissionSet(self) -> _n_14_t_0:"""PermissionSet { get; } -> PermissionSet"""
    @property
    def SetupInformation(self) -> AppDomainSetup:"""SetupInformation { get; } -> AppDomainSetup"""
    @property
    def FirstChanceException(self) -> EventHandler[_n_9_t_0]:
        """FirstChanceException Event: EventHandler"""
    @property
    def ReflectionOnlyAssemblyResolve(self) -> ResolveEventHandler:
        """ReflectionOnlyAssemblyResolve Event: ResolveEventHandler"""
    def ApplyPolicy(self, assemblyName: str) -> str:...
    def CreateComInstanceFrom(self, assemblyFile: str, typeName: str, hashValue: Array[Byte], hashAlgorithm: _n_4_t_0) -> _n_12_t_0:...
    def CreateComInstanceFrom(self, assemblyName: str, typeName: str) -> _n_12_t_0:...
    @staticmethod
    def CreateDomain(friendlyName: str, securityInfo: _n_15_t_0, appBasePath: str, appRelativeSearchPath: str, shadowCopyFiles: bool, adInit: AppDomainInitializer, adInitArgs: Array[str]) -> AppDomain:...
    @staticmethod
    def CreateDomain(friendlyName: str, securityInfo: _n_15_t_0, info: AppDomainSetup, grantSet: _n_14_t_0, fullTrustAssemblies: Array[_n_15_t_3]) -> AppDomain:...
    @staticmethod
    def CreateDomain(friendlyName: str, securityInfo: _n_15_t_0, info: AppDomainSetup) -> AppDomain:...
    @staticmethod
    def CreateDomain(friendlyName: str) -> AppDomain:...
    @staticmethod
    def CreateDomain(friendlyName: str, securityInfo: _n_15_t_0, appBasePath: str, appRelativeSearchPath: str, shadowCopyFiles: bool) -> AppDomain:...
    @staticmethod
    def CreateDomain(friendlyName: str, securityInfo: _n_15_t_0) -> AppDomain:...
    def CreateInstanceAndUnwrap(self, assemblyName: str, typeName: str, ignoreCase: bool, bindingAttr: _n_7_t_0, binder: _n_7_t_1, args: Array[object], culture: _n_5_t_0, activationAttributes: Array[object]) -> object:...
    def CreateInstanceAndUnwrap(self, assemblyName: str, typeName: str, ignoreCase: bool, bindingAttr: _n_7_t_0, binder: _n_7_t_1, args: Array[object], culture: _n_5_t_0, activationAttributes: Array[object], securityAttributes: _n_15_t_0) -> object:...
    def CreateInstanceAndUnwrap(self, assemblyName: str, typeName: str, activationAttributes: Array[object]) -> object:...
    def CreateInstanceAndUnwrap(self, assemblyName: str, typeName: str) -> object:...
    def CreateInstanceFromAndUnwrap(self, assemblyFile: str, typeName: str, ignoreCase: bool, bindingAttr: _n_7_t_0, binder: _n_7_t_1, args: Array[object], culture: _n_5_t_0, activationAttributes: Array[object]) -> object:...
    def CreateInstanceFromAndUnwrap(self, assemblyName: str, typeName: str, ignoreCase: bool, bindingAttr: _n_7_t_0, binder: _n_7_t_1, args: Array[object], culture: _n_5_t_0, activationAttributes: Array[object], securityAttributes: _n_15_t_0) -> object:...
    def CreateInstanceFromAndUnwrap(self, assemblyName: str, typeName: str, activationAttributes: Array[object]) -> object:...
    def CreateInstanceFromAndUnwrap(self, assemblyName: str, typeName: str) -> object:...
    def ExecuteAssemblyByName(self, assemblyName: _n_7_t_2, args: Array[str]) -> int:...
    def ExecuteAssemblyByName(self, assemblyName: _n_7_t_2, assemblySecurity: _n_15_t_0, args: Array[str]) -> int:...
    def ExecuteAssemblyByName(self, assemblyName: str, args: Array[str]) -> int:...
    def ExecuteAssemblyByName(self, assemblyName: str, assemblySecurity: _n_15_t_0, args: Array[str]) -> int:...
    def ExecuteAssemblyByName(self, assemblyName: str, assemblySecurity: _n_15_t_0) -> int:...
    def ExecuteAssemblyByName(self, assemblyName: str) -> int:...
    @staticmethod
    def GetCurrentThreadId() -> int:...
    def IsCompatibilitySwitchSet(self, value: str) -> Nullable[bool]:...
    def IsDefaultAppDomain(self) -> bool:...
    def IsFinalizingForUnload(self) -> bool:...
    def ReflectionOnlyGetAssemblies(self) -> Array[_n_7_t_3]:...
    def SetDynamicBase(self, path: str):...
    def SetShadowCopyFiles(self):...
    @staticmethod
    def Unload(domain: AppDomain):...
class AppDomainInitializer(MulticastDelegate, ICloneable, _n_13_t_0):
    def __init__(self, object: object, method: IntPtr) -> AppDomainInitializer:...
    def BeginInvoke(self, args: Array[str], callback: AsyncCallback, object: object) -> IAsyncResult:...
    def EndInvoke(self, result: IAsyncResult):...
    def Invoke(self, args: Array[str]):...
class AppDomainManager(MarshalByRefObject):
    @property
    def ApplicationActivator(self) -> _n_10_t_0:"""ApplicationActivator { get; } -> ApplicationActivator"""
    @property
    def EntryAssembly(self) -> _n_7_t_3:"""EntryAssembly { get; } -> Assembly"""
    @property
    def HostExecutionContextManager(self) -> _n_18_t_0:"""HostExecutionContextManager { get; } -> HostExecutionContextManager"""
    @property
    def HostSecurityManager(self) -> _n_14_t_2:"""HostSecurityManager { get; } -> HostSecurityManager"""
    @property
    def InitializationFlags(self) -> AppDomainManagerInitializationOptions:"""InitializationFlags { get; set; } -> AppDomainManagerInitializationOptions"""
    def __init__(self) -> AppDomainManager:...
    def CheckSecuritySettings(self, state: _n_14_t_3) -> bool:...
    def CreateDomain(self, friendlyName: str, securityInfo: _n_15_t_0, appDomainInfo: AppDomainSetup) -> AppDomain:...
    def InitializeNewDomain(self, appDomainInfo: AppDomainSetup):...
class AppDomainManagerInitializationOptions(Enum, IComparable, IFormattable, IConvertible):
    _None: int
    RegisterWithHost: int
    value__: int
class AppDomainSetup(IAppDomainSetup):
    @property
    def ActivationArguments(self) -> _n_10_t_1:"""ActivationArguments { get; set; } -> ActivationArguments"""
    @property
    def AppDomainInitializer(self) -> AppDomainInitializer:"""AppDomainInitializer { get; set; } -> AppDomainInitializer"""
    @property
    def AppDomainInitializerArguments(self) -> Array[str]:"""AppDomainInitializerArguments { get; set; } -> Array"""
    @property
    def AppDomainManagerAssembly(self) -> str:"""AppDomainManagerAssembly { get; set; } -> str"""
    @property
    def AppDomainManagerType(self) -> str:"""AppDomainManagerType { get; set; } -> str"""
    @property
    def ApplicationTrust(self) -> _n_15_t_2:"""ApplicationTrust { get; set; } -> ApplicationTrust"""
    @property
    def DisallowApplicationBaseProbing(self) -> bool:"""DisallowApplicationBaseProbing { get; set; } -> bool"""
    @property
    def DisallowBindingRedirects(self) -> bool:"""DisallowBindingRedirects { get; set; } -> bool"""
    @property
    def DisallowCodeDownload(self) -> bool:"""DisallowCodeDownload { get; set; } -> bool"""
    @property
    def DisallowPublisherPolicy(self) -> bool:"""DisallowPublisherPolicy { get; set; } -> bool"""
    @property
    def LoaderOptimization(self) -> LoaderOptimization:"""LoaderOptimization { get; set; } -> LoaderOptimization"""
    @property
    def PartialTrustVisibleAssemblies(self) -> Array[str]:"""PartialTrustVisibleAssemblies { get; set; } -> Array"""
    @property
    def SandboxInterop(self) -> bool:"""SandboxInterop { get; set; } -> bool"""
    @property
    def TargetFrameworkName(self) -> str:"""TargetFrameworkName { get; set; } -> str"""
    def __init__(self, activationArguments: _n_10_t_1) -> AppDomainSetup:...
    def __init__(self, activationContext: ActivationContext) -> AppDomainSetup:...
    def __init__(self) -> AppDomainSetup:...
    def GetConfigurationBytes(self) -> Array[Byte]:...
    def SetCompatibilitySwitches(self, switches: _n_1_t_0[str]):...
    def SetConfigurationBytes(self, value: Array[Byte]):...
    def SetNativeFunction(self, functionName: str, functionVersion: int, functionPointer: IntPtr):...
class AppDomainUnloadedException(SystemException, _n_13_t_0, _n_11_t_0):
    def __init__(self, message: str, innerException: Exception) -> AppDomainUnloadedException:...
    def __init__(self, message: str) -> AppDomainUnloadedException:...
    def __init__(self) -> AppDomainUnloadedException:...
class ApplicationException(Exception, _n_13_t_0, _n_11_t_0):
    def __init__(self, message: str, innerException: Exception) -> ApplicationException:...
    def __init__(self, message: str) -> ApplicationException:...
    def __init__(self) -> ApplicationException:...
class ApplicationId(object):
    @property
    def Culture(self) -> str:"""Culture { get; } -> str"""
    @property
    def Name(self) -> str:"""Name { get; } -> str"""
    @property
    def ProcessorArchitecture(self) -> str:"""ProcessorArchitecture { get; } -> str"""
    @property
    def PublicKeyToken(self) -> Array[Byte]:"""PublicKeyToken { get; } -> Array"""
    @property
    def Version(self) -> Version:"""Version { get; } -> Version"""
    def __init__(self, publicKeyToken: Array[Byte], name: str, version: Version, processorArchitecture: str, culture: str) -> ApplicationId:...
    def Copy(self) -> ApplicationId:...
class ApplicationIdentity(_n_13_t_0):
    @property
    def CodeBase(self) -> str:"""CodeBase { get; } -> str"""
    @property
    def FullName(self) -> str:"""FullName { get; } -> str"""
    def __init__(self, applicationIdentityFullName: str) -> ApplicationIdentity:...
class ArgIterator(ValueType):
    def __init__(self, arglist: RuntimeArgumentHandle, ptr: Void) -> ArgIterator:...
    def __init__(self, arglist: RuntimeArgumentHandle) -> ArgIterator:...
    def End(self):...
    def GetNextArg(self, rth: RuntimeTypeHandle) -> TypedReference:...
    def GetNextArg(self) -> TypedReference:...
    def GetNextArgType(self) -> RuntimeTypeHandle:...
    def GetRemainingCount(self) -> int:...
class ArgumentException(SystemException, _n_13_t_0, _n_11_t_0):
    @property
    def ParamName(self) -> str:"""ParamName { get; } -> str"""
    def __init__(self, message: str, paramName: str) -> ArgumentException:...
    def __init__(self, message: str, paramName: str, innerException: Exception) -> ArgumentException:...
    def __init__(self, message: str, innerException: Exception) -> ArgumentException:...
    def __init__(self, message: str) -> ArgumentException:...
    def __init__(self) -> ArgumentException:...
class ArgumentNullException(ArgumentException, _n_13_t_0, _n_11_t_0):
    def __init__(self, paramName: str, message: str) -> ArgumentNullException:...
    def __init__(self, message: str, innerException: Exception) -> ArgumentNullException:...
    def __init__(self, paramName: str) -> ArgumentNullException:...
    def __init__(self) -> ArgumentNullException:...
class ArgumentOutOfRangeException(ArgumentException, _n_13_t_0, _n_11_t_0):
    @property
    def ActualValue(self) -> object:"""ActualValue { get; } -> object"""
    def __init__(self, paramName: str, actualValue: object, message: str) -> ArgumentOutOfRangeException:...
    def __init__(self, message: str, innerException: Exception) -> ArgumentOutOfRangeException:...
    def __init__(self, paramName: str, message: str) -> ArgumentOutOfRangeException:...
    def __init__(self, paramName: str) -> ArgumentOutOfRangeException:...
    def __init__(self) -> ArgumentOutOfRangeException:...
class ArithmeticException(SystemException, _n_13_t_0, _n_11_t_0):
    def __init__(self, message: str, innerException: Exception) -> ArithmeticException:...
    def __init__(self, message: str) -> ArithmeticException:...
    def __init__(self) -> ArithmeticException:...
class Array(ICloneable, _n_0_t_0, _n_0_t_1, _n_0_t_2, typing.Generic[T], typing.Iterable[T]):
    @property
    def Length(self) -> int:"""Length { get; } -> int"""
    @property
    def LongLength(self) -> int:"""LongLength { get; } -> int"""
    @property
    def Rank(self) -> int:"""Rank { get; } -> int"""
    @staticmethod
    def AsReadOnly(array: Array[T]) -> _n_2_t_0[T]:...
    @staticmethod
    def BinarySearch(array: Array[T], index: int, length: int, value: T, comparer: _n_1_t_1[T]) -> int:...
    @staticmethod
    def BinarySearch(array: Array[T], index: int, length: int, value: T) -> int:...
    @staticmethod
    def BinarySearch(array: Array[T], value: T, comparer: _n_1_t_1[T]) -> int:...
    @staticmethod
    def BinarySearch(array: Array[T], value: T) -> int:...
    @staticmethod
    def BinarySearch(array: Array, index: int, length: int, value: object, comparer: _n_0_t_3) -> int:...
    @staticmethod
    def BinarySearch(array: Array, value: object, comparer: _n_0_t_3) -> int:...
    @staticmethod
    def BinarySearch(array: Array, index: int, length: int, value: object) -> int:...
    @staticmethod
    def BinarySearch(array: Array, value: object) -> int:...
    @staticmethod
    def ConstrainedCopy(sourceArray: Array, sourceIndex: int, destinationArray: Array, destinationIndex: int, length: int):...
    @staticmethod
    def ConvertAll(array: Array[typing.Any], converter: Converter[typing.Any, typing.Any]) -> Array[typing.Any]:...
    @staticmethod
    def Copy(sourceArray: Array, sourceIndex: int, destinationArray: Array, destinationIndex: int, length: int):...
    @staticmethod
    def Copy(sourceArray: Array, destinationArray: Array, length: int):...
    @staticmethod
    def CreateInstance(elementType: Type, lengths: Array[int], lowerBounds: Array[int]) -> Array:...
    @staticmethod
    def CreateInstance(elementType: Type, lengths: Array[int]) -> Array:...
    @staticmethod
    def CreateInstance(elementType: Type, length1: int, length2: int, length3: int) -> Array:...
    @staticmethod
    def CreateInstance(elementType: Type, length1: int, length2: int) -> Array:...
    @staticmethod
    def CreateInstance(elementType: Type, length: int) -> Array:...
    @staticmethod
    def Empty() -> Array[T]:...
    @staticmethod
    def Exists(array: Array[T], match: Predicate[T]) -> bool:...
    @staticmethod
    def Find(array: Array[T], match: Predicate[T]) -> T:...
    @staticmethod
    def FindAll(array: Array[T], match: Predicate[T]) -> Array[T]:...
    @staticmethod
    def FindIndex(array: Array[T], startIndex: int, count: int, match: Predicate[T]) -> int:...
    @staticmethod
    def FindIndex(array: Array[T], startIndex: int, match: Predicate[T]) -> int:...
    @staticmethod
    def FindIndex(array: Array[T], match: Predicate[T]) -> int:...
    @staticmethod
    def FindLast(array: Array[T], match: Predicate[T]) -> T:...
    @staticmethod
    def FindLastIndex(array: Array[T], startIndex: int, count: int, match: Predicate[T]) -> int:...
    @staticmethod
    def FindLastIndex(array: Array[T], startIndex: int, match: Predicate[T]) -> int:...
    @staticmethod
    def FindLastIndex(array: Array[T], match: Predicate[T]) -> int:...
    @staticmethod
    def ForEach(array: Array[T], action: Action[T]):...
    def GetLength(self, dimension: int) -> int:...
    def GetLongLength(self, dimension: int) -> int:...
    def GetLowerBound(self, dimension: int) -> int:...
    def GetUpperBound(self, dimension: int) -> int:...
    def GetValue(self, index1: int, index2: int, index3: int) -> object:...
    def GetValue(self, index1: int, index2: int) -> object:...
    def GetValue(self, index: int) -> object:...
    def GetValue(self, indices: Array[int]) -> object:...
    def Initialize(self):...
    @staticmethod
    def LastIndexOf(array: Array[T], value: T, startIndex: int, count: int) -> int:...
    @staticmethod
    def LastIndexOf(array: Array[T], value: T, startIndex: int) -> int:...
    @staticmethod
    def LastIndexOf(array: Array[T], value: T) -> int:...
    @staticmethod
    def LastIndexOf(array: Array, value: object, startIndex: int, count: int) -> int:...
    @staticmethod
    def LastIndexOf(array: Array, value: object, startIndex: int) -> int:...
    @staticmethod
    def LastIndexOf(array: Array, value: object) -> int:...
    @staticmethod
    def Resize(array: object, newSize: int):...
    @staticmethod
    def Reverse(array: Array, index: int, length: int):...
    @staticmethod
    def Reverse(array: Array):...
    def SetValue(self, value: object, indices: Array[int]):...
    def SetValue(self, value: object, index1: int, index2: int, index3: int):...
    def SetValue(self, value: object, index1: int, index2: int):...
    def SetValue(self, value: object, index: int):...
    @staticmethod
    def Sort(array: Array[T], comparison: Comparison[T]):...
    @staticmethod
    def Sort(keys: Array[typing.Any], items: Array[typing.Any], index: int, length: int, comparer: _n_1_t_1[typing.Any]):...
    @staticmethod
    def Sort(array: Array[T], index: int, length: int, comparer: _n_1_t_1[T]):...
    @staticmethod
    def Sort(keys: Array[typing.Any], items: Array[typing.Any], comparer: _n_1_t_1[typing.Any]):...
    @staticmethod
    def Sort(array: Array[T], comparer: _n_1_t_1[T]):...
    @staticmethod
    def Sort(keys: Array[typing.Any], items: Array[typing.Any], index: int, length: int):...
    @staticmethod
    def Sort(array: Array[T], index: int, length: int):...
    @staticmethod
    def Sort(keys: Array[typing.Any], items: Array[typing.Any]):...
    @staticmethod
    def Sort(array: Array[T]):...
    @staticmethod
    def Sort(keys: Array, items: Array, index: int, length: int, comparer: _n_0_t_3):...
    @staticmethod
    def Sort(array: Array, index: int, length: int, comparer: _n_0_t_3):...
    @staticmethod
    def Sort(keys: Array, items: Array, comparer: _n_0_t_3):...
    @staticmethod
    def Sort(array: Array, comparer: _n_0_t_3):...
    @staticmethod
    def Sort(keys: Array, items: Array, index: int, length: int):...
    @staticmethod
    def Sort(array: Array, index: int, length: int):...
    @staticmethod
    def Sort(keys: Array, items: Array):...
    @staticmethod
    def Sort(array: Array):...
    @staticmethod
    def TrueForAll(array: Array[T], match: Predicate[T]) -> bool:...
class ArraySegment(ValueType, _n_1_t_2[T], _n_1_t_3[T], typing.Generic[T]):
    @property
    def Array(self) -> Array[T]:"""Array { get; } -> Array"""
    @property
    def Offset(self) -> int:"""Offset { get; } -> int"""
    def __init__(self, array: Array[T], offset: int, count: int) -> ArraySegment:...
    def __init__(self, array: Array[T]) -> ArraySegment:...
class ArrayTypeMismatchException(SystemException, _n_13_t_0, _n_11_t_0):
    def __init__(self, message: str, innerException: Exception) -> ArrayTypeMismatchException:...
    def __init__(self, message: str) -> ArrayTypeMismatchException:...
    def __init__(self) -> ArrayTypeMismatchException:...
class AssemblyLoadEventArgs(EventArgs):
    @property
    def LoadedAssembly(self) -> _n_7_t_3:"""LoadedAssembly { get; } -> Assembly"""
    def __init__(self, loadedAssembly: _n_7_t_3) -> AssemblyLoadEventArgs:...
class AssemblyLoadEventHandler(MulticastDelegate, ICloneable, _n_13_t_0):
    def __init__(self, object: object, method: IntPtr) -> AssemblyLoadEventHandler:...
    def BeginInvoke(self, sender: object, args: AssemblyLoadEventArgs, callback: AsyncCallback, object: object) -> IAsyncResult:...
    def EndInvoke(self, result: IAsyncResult):...
    def Invoke(self, sender: object, args: AssemblyLoadEventArgs):...
class AsyncCallback(MulticastDelegate, ICloneable, _n_13_t_0):
    def __init__(self, object: object, method: IntPtr) -> AsyncCallback:...
    def BeginInvoke(self, ar: IAsyncResult, callback: AsyncCallback, object: object) -> IAsyncResult:...
    def EndInvoke(self, result: IAsyncResult):...
    def Invoke(self, ar: IAsyncResult):...
class Attribute(_n_11_t_2):
    @property
    def TypeId(self) -> object:"""TypeId { get; } -> object"""
    @staticmethod
    def GetCustomAttribute(element: _n_7_t_3, attributeType: Type, inherit: bool) -> Attribute:...
    @staticmethod
    def GetCustomAttribute(element: _n_7_t_3, attributeType: Type) -> Attribute:...
    @staticmethod
    def GetCustomAttribute(element: _n_7_t_4, attributeType: Type, inherit: bool) -> Attribute:...
    @staticmethod
    def GetCustomAttribute(element: _n_7_t_4, attributeType: Type) -> Attribute:...
    @staticmethod
    def GetCustomAttribute(element: _n_7_t_5, attributeType: Type, inherit: bool) -> Attribute:...
    @staticmethod
    def GetCustomAttribute(element: _n_7_t_5, attributeType: Type) -> Attribute:...
    @staticmethod
    def GetCustomAttribute(element: _n_7_t_6, attributeType: Type, inherit: bool) -> Attribute:...
    @staticmethod
    def GetCustomAttribute(element: _n_7_t_6, attributeType: Type) -> Attribute:...
    @staticmethod
    def GetCustomAttributes(element: _n_7_t_3, inherit: bool) -> Array[Attribute]:...
    @staticmethod
    def GetCustomAttributes(element: _n_7_t_3) -> Array[Attribute]:...
    @staticmethod
    def GetCustomAttributes(element: _n_7_t_3, attributeType: Type, inherit: bool) -> Array[Attribute]:...
    @staticmethod
    def GetCustomAttributes(element: _n_7_t_3, attributeType: Type) -> Array[Attribute]:...
    @staticmethod
    def GetCustomAttributes(element: _n_7_t_4, attributeType: Type, inherit: bool) -> Array[Attribute]:...
    @staticmethod
    def GetCustomAttributes(element: _n_7_t_4, inherit: bool) -> Array[Attribute]:...
    @staticmethod
    def GetCustomAttributes(element: _n_7_t_4) -> Array[Attribute]:...
    @staticmethod
    def GetCustomAttributes(element: _n_7_t_4, attributeType: Type) -> Array[Attribute]:...
    @staticmethod
    def GetCustomAttributes(element: _n_7_t_5, inherit: bool) -> Array[Attribute]:...
    @staticmethod
    def GetCustomAttributes(element: _n_7_t_5, attributeType: Type, inherit: bool) -> Array[Attribute]:...
    @staticmethod
    def GetCustomAttributes(element: _n_7_t_5, attributeType: Type) -> Array[Attribute]:...
    @staticmethod
    def GetCustomAttributes(element: _n_7_t_5) -> Array[Attribute]:...
    @staticmethod
    def GetCustomAttributes(element: _n_7_t_6, inherit: bool) -> Array[Attribute]:...
    @staticmethod
    def GetCustomAttributes(element: _n_7_t_6) -> Array[Attribute]:...
    @staticmethod
    def GetCustomAttributes(element: _n_7_t_6, type: Type, inherit: bool) -> Array[Attribute]:...
    @staticmethod
    def GetCustomAttributes(element: _n_7_t_6, type: Type) -> Array[Attribute]:...
    def IsDefaultAttribute(self) -> bool:...
    @staticmethod
    def IsDefined(element: _n_7_t_3, attributeType: Type, inherit: bool) -> bool:...
    @staticmethod
    def IsDefined(element: _n_7_t_3, attributeType: Type) -> bool:...
    @staticmethod
    def IsDefined(element: _n_7_t_4, attributeType: Type, inherit: bool) -> bool:...
    @staticmethod
    def IsDefined(element: _n_7_t_4, attributeType: Type) -> bool:...
    @staticmethod
    def IsDefined(element: _n_7_t_5, attributeType: Type, inherit: bool) -> bool:...
    @staticmethod
    def IsDefined(element: _n_7_t_5, attributeType: Type) -> bool:...
    @staticmethod
    def IsDefined(element: _n_7_t_6, attributeType: Type, inherit: bool) -> bool:...
    @staticmethod
    def IsDefined(element: _n_7_t_6, attributeType: Type) -> bool:...
    def Match(self, obj: object) -> bool:...
class AttributeTargets(Enum, IComparable, IFormattable, IConvertible):
    All: int
    Assembly: int
    Class: int
    Constructor: int
    Delegate: int
    Enum: int
    Event: int
    Field: int
    GenericParameter: int
    Interface: int
    Method: int
    Module: int
    Parameter: int
    Property: int
    ReturnValue: int
    Struct: int
    value__: int
class AttributeUsageAttribute(Attribute, _n_11_t_2):
    @property
    def AllowMultiple(self) -> bool:"""AllowMultiple { get; set; } -> bool"""
    @property
    def Inherited(self) -> bool:"""Inherited { get; set; } -> bool"""
    @property
    def ValidOn(self) -> AttributeTargets:"""ValidOn { get; } -> AttributeTargets"""
    def __init__(self, validOn: AttributeTargets) -> AttributeUsageAttribute:...
class BadImageFormatException(SystemException, _n_13_t_0, _n_11_t_0):
    @property
    def FileName(self) -> str:"""FileName { get; } -> str"""
    @property
    def FusionLog(self) -> str:"""FusionLog { get; } -> str"""
    def __init__(self, message: str, fileName: str, inner: Exception) -> BadImageFormatException:...
    def __init__(self, message: str, fileName: str) -> BadImageFormatException:...
    def __init__(self, message: str, inner: Exception) -> BadImageFormatException:...
    def __init__(self, message: str) -> BadImageFormatException:...
    def __init__(self) -> BadImageFormatException:...
class Base64FormattingOptions(Enum, IComparable, IFormattable, IConvertible):
    InsertLineBreaks: int
    _None: int
    value__: int
class BitConverter(object):
    IsLittleEndian: int
    @staticmethod
    def DoubleToInt64Bits(value: float) -> int:...
    @staticmethod
    def GetBytes(value: float) -> Array[Byte]:...
    @staticmethod
    def GetBytes(value: UInt64) -> Array[Byte]:...
    @staticmethod
    def GetBytes(value: UInt32) -> Array[Byte]:...
    @staticmethod
    def GetBytes(value: UInt16) -> Array[Byte]:...
    @staticmethod
    def GetBytes(value: int) -> Array[Byte]:...
    @staticmethod
    def GetBytes(value: Char) -> Array[Byte]:...
    @staticmethod
    def GetBytes(value: bool) -> Array[Byte]:...
    @staticmethod
    def Int64BitsToDouble(value: int) -> float:...
    @staticmethod
    def ToBoolean(value: Array[Byte], startIndex: int) -> bool:...
    @staticmethod
    def ToChar(value: Array[Byte], startIndex: int) -> Char:...
    @staticmethod
    def ToDouble(value: Array[Byte], startIndex: int) -> float:...
    @staticmethod
    def ToInt16(value: Array[Byte], startIndex: int) -> int:...
    @staticmethod
    def ToInt32(value: Array[Byte], startIndex: int) -> int:...
    @staticmethod
    def ToInt64(value: Array[Byte], startIndex: int) -> int:...
    @staticmethod
    def ToSingle(value: Array[Byte], startIndex: int) -> float:...
    @staticmethod
    def ToUInt16(value: Array[Byte], startIndex: int) -> UInt16:...
    @staticmethod
    def ToUInt32(value: Array[Byte], startIndex: int) -> UInt32:...
    @staticmethod
    def ToUInt64(value: Array[Byte], startIndex: int) -> UInt64:...
class Buffer(object):
    @staticmethod
    def BlockCopy(src: Array, srcOffset: int, dst: Array, dstOffset: int, count: int):...
    @staticmethod
    def ByteLength(array: Array) -> int:...
    @staticmethod
    def GetByte(array: Array, index: int) -> Byte:...
    @staticmethod
    def MemoryCopy(source: Void, destination: Void, destinationSizeInBytes: UInt64, sourceBytesToCopy: UInt64):...
    @staticmethod
    def MemoryCopy(source: Void, destination: Void, destinationSizeInBytes: int, sourceBytesToCopy: int):...
    @staticmethod
    def SetByte(array: Array, index: int, value: Byte):...
class Byte(ValueType, IComparable, IFormattable, IConvertible, IComparable[Byte], IEquatable[Byte]):
    MaxValue: int
    MinValue: int
    @staticmethod
    def Parse(s: str, style: _n_5_t_1, provider: IFormatProvider) -> Byte:...
    @staticmethod
    def Parse(s: str, provider: IFormatProvider) -> Byte:...
    @staticmethod
    def Parse(s: str, style: _n_5_t_1) -> Byte:...
    @staticmethod
    def Parse(s: str) -> Byte:...
    @staticmethod
    def TryParse(s: str, style: _n_5_t_1, provider: IFormatProvider, result: Byte) -> bool:...
    @staticmethod
    def TryParse(s: str, result: Byte) -> bool:...
class CannotUnloadAppDomainException(SystemException, _n_13_t_0, _n_11_t_0):
    def __init__(self, message: str, innerException: Exception) -> CannotUnloadAppDomainException:...
    def __init__(self, message: str) -> CannotUnloadAppDomainException:...
    def __init__(self) -> CannotUnloadAppDomainException:...
class Char(ValueType, IComparable, IConvertible, IComparable[Char], IEquatable[Char]):
    MaxValue: int
    MinValue: int
    @staticmethod
    def ConvertFromUtf32(utf32: int) -> str:...
    @staticmethod
    def ConvertToUtf32(s: str, index: int) -> int:...
    @staticmethod
    def ConvertToUtf32(highSurrogate: Char, lowSurrogate: Char) -> int:...
    @staticmethod
    def GetNumericValue(s: str, index: int) -> float:...
    @staticmethod
    def GetNumericValue(c: Char) -> float:...
    @staticmethod
    def GetUnicodeCategory(s: str, index: int) -> _n_5_t_2:...
    @staticmethod
    def GetUnicodeCategory(c: Char) -> _n_5_t_2:...
    @staticmethod
    def IsControl(s: str, index: int) -> bool:...
    @staticmethod
    def IsControl(c: Char) -> bool:...
    @staticmethod
    def IsDigit(s: str, index: int) -> bool:...
    @staticmethod
    def IsDigit(c: Char) -> bool:...
    @staticmethod
    def IsHighSurrogate(s: str, index: int) -> bool:...
    @staticmethod
    def IsHighSurrogate(c: Char) -> bool:...
    @staticmethod
    def IsLetter(s: str, index: int) -> bool:...
    @staticmethod
    def IsLetter(c: Char) -> bool:...
    @staticmethod
    def IsLetterOrDigit(s: str, index: int) -> bool:...
    @staticmethod
    def IsLetterOrDigit(c: Char) -> bool:...
    @staticmethod
    def IsLower(s: str, index: int) -> bool:...
    @staticmethod
    def IsLower(c: Char) -> bool:...
    @staticmethod
    def IsLowSurrogate(s: str, index: int) -> bool:...
    @staticmethod
    def IsLowSurrogate(c: Char) -> bool:...
    @staticmethod
    def IsNumber(s: str, index: int) -> bool:...
    @staticmethod
    def IsNumber(c: Char) -> bool:...
    @staticmethod
    def IsPunctuation(s: str, index: int) -> bool:...
    @staticmethod
    def IsPunctuation(c: Char) -> bool:...
    @staticmethod
    def IsSeparator(s: str, index: int) -> bool:...
    @staticmethod
    def IsSeparator(c: Char) -> bool:...
    @staticmethod
    def IsSurrogate(s: str, index: int) -> bool:...
    @staticmethod
    def IsSurrogate(c: Char) -> bool:...
    @staticmethod
    def IsSurrogatePair(highSurrogate: Char, lowSurrogate: Char) -> bool:...
    @staticmethod
    def IsSurrogatePair(s: str, index: int) -> bool:...
    @staticmethod
    def IsSymbol(s: str, index: int) -> bool:...
    @staticmethod
    def IsSymbol(c: Char) -> bool:...
    @staticmethod
    def IsUpper(s: str, index: int) -> bool:...
    @staticmethod
    def IsUpper(c: Char) -> bool:...
    @staticmethod
    def IsWhiteSpace(s: str, index: int) -> bool:...
    @staticmethod
    def IsWhiteSpace(c: Char) -> bool:...
    @staticmethod
    def Parse(s: str) -> Char:...
    @staticmethod
    def ToLower(c: Char) -> Char:...
    @staticmethod
    def ToLower(c: Char, culture: _n_5_t_0) -> Char:...
    @staticmethod
    def ToLowerInvariant(c: Char) -> Char:...
    @staticmethod
    def ToUpper(c: Char) -> Char:...
    @staticmethod
    def ToUpper(c: Char, culture: _n_5_t_0) -> Char:...
    @staticmethod
    def ToUpperInvariant(c: Char) -> Char:...
    @staticmethod
    def TryParse(s: str, result: Char) -> bool:...
class CharEnumerator(_n_0_t_4, ICloneable, _n_1_t_4[Char]):
    pass
class CLSCompliantAttribute(Attribute, _n_11_t_2):
    @property
    def IsCompliant(self) -> bool:"""IsCompliant { get; } -> bool"""
    def __init__(self, isCompliant: bool) -> CLSCompliantAttribute:...
class Comparison(MulticastDelegate, ICloneable, _n_13_t_0, typing.Generic[T]):
    def __init__(self, object: object, method: IntPtr) -> Comparison:...
    def BeginInvoke(self, x: T, y: T, callback: AsyncCallback, object: object) -> IAsyncResult:...
    def EndInvoke(self, result: IAsyncResult) -> int:...
    def Invoke(self, x: T, y: T) -> int:...
class Console(object):
    @property
    def BackgroundColor(self) -> ConsoleColor:"""BackgroundColor { get; set; } -> ConsoleColor"""
    @property
    def BufferHeight(self) -> int:"""BufferHeight { get; set; } -> int"""
    @property
    def BufferWidth(self) -> int:"""BufferWidth { get; set; } -> int"""
    @property
    def CapsLock(self) -> bool:"""CapsLock { get; } -> bool"""
    @property
    def CursorLeft(self) -> int:"""CursorLeft { get; set; } -> int"""
    @property
    def CursorSize(self) -> int:"""CursorSize { get; set; } -> int"""
    @property
    def CursorTop(self) -> int:"""CursorTop { get; set; } -> int"""
    @property
    def CursorVisible(self) -> bool:"""CursorVisible { get; set; } -> bool"""
    @property
    def Error(self) -> _n_6_t_0:"""Error { get; } -> TextWriter"""
    @property
    def ForegroundColor(self) -> ConsoleColor:"""ForegroundColor { get; set; } -> ConsoleColor"""
    @property
    def In(self) -> _n_6_t_1:"""In { get; } -> TextReader"""
    @property
    def InputEncoding(self) -> _n_17_t_0:"""InputEncoding { get; set; } -> Encoding"""
    @property
    def IsErrorRedirected(self) -> bool:"""IsErrorRedirected { get; } -> bool"""
    @property
    def IsInputRedirected(self) -> bool:"""IsInputRedirected { get; } -> bool"""
    @property
    def IsOutputRedirected(self) -> bool:"""IsOutputRedirected { get; } -> bool"""
    @property
    def KeyAvailable(self) -> bool:"""KeyAvailable { get; } -> bool"""
    @property
    def LargestWindowHeight(self) -> int:"""LargestWindowHeight { get; } -> int"""
    @property
    def LargestWindowWidth(self) -> int:"""LargestWindowWidth { get; } -> int"""
    @property
    def NumberLock(self) -> bool:"""NumberLock { get; } -> bool"""
    @property
    def Out(self) -> _n_6_t_0:"""Out { get; } -> TextWriter"""
    @property
    def OutputEncoding(self) -> _n_17_t_0:"""OutputEncoding { get; set; } -> Encoding"""
    @property
    def Title(self) -> str:"""Title { get; set; } -> str"""
    @property
    def TreatControlCAsInput(self) -> bool:"""TreatControlCAsInput { get; set; } -> bool"""
    @property
    def WindowHeight(self) -> int:"""WindowHeight { get; set; } -> int"""
    @property
    def WindowLeft(self) -> int:"""WindowLeft { get; set; } -> int"""
    @property
    def WindowTop(self) -> int:"""WindowTop { get; set; } -> int"""
    @property
    def WindowWidth(self) -> int:"""WindowWidth { get; set; } -> int"""
    @property
    def CancelKeyPress(self) -> ConsoleCancelEventHandler:
        """CancelKeyPress Event: ConsoleCancelEventHandler"""
    @staticmethod
    def Beep(frequency: int, duration: int):...
    @staticmethod
    def Beep():...
    @staticmethod
    def Clear():...
    @staticmethod
    def MoveBufferArea(sourceLeft: int, sourceTop: int, sourceWidth: int, sourceHeight: int, targetLeft: int, targetTop: int, sourceChar: Char, sourceForeColor: ConsoleColor, sourceBackColor: ConsoleColor):...
    @staticmethod
    def MoveBufferArea(sourceLeft: int, sourceTop: int, sourceWidth: int, sourceHeight: int, targetLeft: int, targetTop: int):...
    @staticmethod
    def OpenStandardError(bufferSize: int) -> _n_6_t_2:...
    @staticmethod
    def OpenStandardError() -> _n_6_t_2:...
    @staticmethod
    def OpenStandardInput(bufferSize: int) -> _n_6_t_2:...
    @staticmethod
    def OpenStandardInput() -> _n_6_t_2:...
    @staticmethod
    def OpenStandardOutput(bufferSize: int) -> _n_6_t_2:...
    @staticmethod
    def OpenStandardOutput() -> _n_6_t_2:...
    @staticmethod
    def Read() -> int:...
    @staticmethod
    def ReadKey(intercept: bool) -> ConsoleKeyInfo:...
    @staticmethod
    def ReadKey() -> ConsoleKeyInfo:...
    @staticmethod
    def ReadLine() -> str:...
    @staticmethod
    def ResetColor():...
    @staticmethod
    def SetBufferSize(width: int, height: int):...
    @staticmethod
    def SetCursorPosition(left: int, top: int):...
    @staticmethod
    def SetError(newError: _n_6_t_0):...
    @staticmethod
    def SetIn(newIn: _n_6_t_1):...
    @staticmethod
    def SetOut(newOut: _n_6_t_0):...
    @staticmethod
    def SetWindowPosition(left: int, top: int):...
    @staticmethod
    def SetWindowSize(width: int, height: int):...
    @staticmethod
    def Write(value: str):...
    @staticmethod
    def Write(value: object):...
    @staticmethod
    def Write(value: UInt64):...
    @staticmethod
    def Write(value: UInt32):...
    @staticmethod
    def Write(value: int):...
    @staticmethod
    def Write(value: Decimal):...
    @staticmethod
    def Write(value: float):...
    @staticmethod
    def Write(buffer: Array[Char], index: int, count: int):...
    @staticmethod
    def Write(buffer: Array[Char]):...
    @staticmethod
    def Write(value: Char):...
    @staticmethod
    def Write(value: bool):...
    @staticmethod
    def Write(format: str, arg: Array[object]):...
    @staticmethod
    def Write(format: str, arg0: object, arg1: object, arg2: object, arg3: object):...
    @staticmethod
    def Write(format: str, arg0: object, arg1: object, arg2: object):...
    @staticmethod
    def Write(format: str, arg0: object, arg1: object):...
    @staticmethod
    def Write(format: str, arg0: object):...
    @staticmethod
    def WriteLine(format: str, arg: Array[object]):...
    @staticmethod
    def WriteLine(format: str, arg0: object, arg1: object, arg2: object, arg3: object):...
    @staticmethod
    def WriteLine(format: str, arg0: object, arg1: object, arg2: object):...
    @staticmethod
    def WriteLine(format: str, arg0: object, arg1: object):...
    @staticmethod
    def WriteLine(format: str, arg0: object):...
    @staticmethod
    def WriteLine(value: str):...
    @staticmethod
    def WriteLine(value: object):...
    @staticmethod
    def WriteLine(value: UInt64):...
    @staticmethod
    def WriteLine(value: UInt32):...
    @staticmethod
    def WriteLine(value: int):...
    @staticmethod
    def WriteLine(value: float):...
    @staticmethod
    def WriteLine(value: Decimal):...
    @staticmethod
    def WriteLine(buffer: Array[Char], index: int, count: int):...
    @staticmethod
    def WriteLine(buffer: Array[Char]):...
    @staticmethod
    def WriteLine(value: Char):...
    @staticmethod
    def WriteLine(value: bool):...
    @staticmethod
    def WriteLine():...
class ConsoleCancelEventArgs(EventArgs):
    @property
    def Cancel(self) -> bool:"""Cancel { get; set; } -> bool"""
    @property
    def SpecialKey(self) -> ConsoleSpecialKey:"""SpecialKey { get; } -> ConsoleSpecialKey"""
class ConsoleCancelEventHandler(MulticastDelegate, ICloneable, _n_13_t_0):
    def __init__(self, object: object, method: IntPtr) -> ConsoleCancelEventHandler:...
    def BeginInvoke(self, sender: object, e: ConsoleCancelEventArgs, callback: AsyncCallback, object: object) -> IAsyncResult:...
    def EndInvoke(self, result: IAsyncResult):...
    def Invoke(self, sender: object, e: ConsoleCancelEventArgs):...
class ConsoleColor(Enum, IComparable, IFormattable, IConvertible):
    Black: int
    Blue: int
    Cyan: int
    DarkBlue: int
    DarkCyan: int
    DarkGray: int
    DarkGreen: int
    DarkMagenta: int
    DarkRed: int
    DarkYellow: int
    Gray: int
    Green: int
    Magenta: int
    Red: int
    value__: int
    White: int
    Yellow: int
class ConsoleKey(Enum, IComparable, IFormattable, IConvertible):
    A: int
    Add: int
    Applications: int
    Attention: int
    B: int
    Backspace: int
    BrowserBack: int
    BrowserFavorites: int
    BrowserForward: int
    BrowserHome: int
    BrowserRefresh: int
    BrowserSearch: int
    BrowserStop: int
    C: int
    Clear: int
    CrSel: int
    D: int
    D0: int
    D1: int
    D2: int
    D3: int
    D4: int
    D5: int
    D6: int
    D7: int
    D8: int
    D9: int
    Decimal: int
    Delete: int
    Divide: int
    DownArrow: int
    E: int
    End: int
    Enter: int
    EraseEndOfFile: int
    Escape: int
    Execute: int
    ExSel: int
    F: int
    F1: int
    F10: int
    F11: int
    F12: int
    F13: int
    F14: int
    F15: int
    F16: int
    F17: int
    F18: int
    F19: int
    F2: int
    F20: int
    F21: int
    F22: int
    F23: int
    F24: int
    F3: int
    F4: int
    F5: int
    F6: int
    F7: int
    F8: int
    F9: int
    G: int
    H: int
    Help: int
    Home: int
    I: int
    Insert: int
    J: int
    K: int
    L: int
    LaunchApp1: int
    LaunchApp2: int
    LaunchMail: int
    LaunchMediaSelect: int
    LeftArrow: int
    LeftWindows: int
    M: int
    MediaNext: int
    MediaPlay: int
    MediaPrevious: int
    MediaStop: int
    Multiply: int
    N: int
    NoName: int
    NumPad0: int
    NumPad1: int
    NumPad2: int
    NumPad3: int
    NumPad4: int
    NumPad5: int
    NumPad6: int
    NumPad7: int
    NumPad8: int
    NumPad9: int
    O: int
    Oem1: int
    Oem102: int
    Oem2: int
    Oem3: int
    Oem4: int
    Oem5: int
    Oem6: int
    Oem7: int
    Oem8: int
    OemClear: int
    OemComma: int
    OemMinus: int
    OemPeriod: int
    OemPlus: int
    P: int
    Pa1: int
    Packet: int
    PageDown: int
    PageUp: int
    Pause: int
    Play: int
    Print: int
    PrintScreen: int
    Process: int
    Q: int
    R: int
    RightArrow: int
    RightWindows: int
    S: int
    Select: int
    Separator: int
    Sleep: int
    Spacebar: int
    Subtract: int
    T: int
    Tab: int
    U: int
    UpArrow: int
    V: int
    value__: int
    VolumeDown: int
    VolumeMute: int
    VolumeUp: int
    W: int
    X: int
    Y: int
    Z: int
    Zoom: int
class ConsoleKeyInfo(ValueType):
    @property
    def Key(self) -> ConsoleKey:"""Key { get; } -> ConsoleKey"""
    @property
    def KeyChar(self) -> Char:"""KeyChar { get; } -> Char"""
    @property
    def Modifiers(self) -> ConsoleModifiers:"""Modifiers { get; } -> ConsoleModifiers"""
    def __init__(self, keyChar: Char, key: ConsoleKey, shift: bool, alt: bool, control: bool) -> ConsoleKeyInfo:...
class ConsoleModifiers(Enum, IComparable, IFormattable, IConvertible):
    Alt: int
    Control: int
    Shift: int
    value__: int
class ConsoleSpecialKey(Enum, IComparable, IFormattable, IConvertible):
    ControlBreak: int
    ControlC: int
    value__: int
class ContextBoundObject(MarshalByRefObject):
    pass
class ContextMarshalException(SystemException, _n_13_t_0, _n_11_t_0):
    def __init__(self, message: str, inner: Exception) -> ContextMarshalException:...
    def __init__(self, message: str) -> ContextMarshalException:...
    def __init__(self) -> ContextMarshalException:...
class ContextStaticAttribute(Attribute, _n_11_t_2):
    def __init__(self) -> ContextStaticAttribute:...
class Convert(object):
    DBNull: int
    @staticmethod
    def ChangeType(value: object, conversionType: Type, provider: IFormatProvider) -> object:...
    @staticmethod
    def ChangeType(value: object, conversionType: Type) -> object:...
    @staticmethod
    def ChangeType(value: object, typeCode: TypeCode, provider: IFormatProvider) -> object:...
    @staticmethod
    def ChangeType(value: object, typeCode: TypeCode) -> object:...
    @staticmethod
    def FromBase64CharArray(inArray: Array[Char], offset: int, length: int) -> Array[Byte]:...
    @staticmethod
    def FromBase64String(s: str) -> Array[Byte]:...
    @staticmethod
    def GetTypeCode(value: object) -> TypeCode:...
    @staticmethod
    def IsDBNull(value: object) -> bool:...
    @staticmethod
    def ToBase64CharArray(inArray: Array[Byte], offsetIn: int, length: int, outArray: Array[Char], offsetOut: int, options: Base64FormattingOptions) -> int:...
    @staticmethod
    def ToBase64CharArray(inArray: Array[Byte], offsetIn: int, length: int, outArray: Array[Char], offsetOut: int) -> int:...
    @staticmethod
    def ToBase64String(inArray: Array[Byte], offset: int, length: int, options: Base64FormattingOptions) -> str:...
    @staticmethod
    def ToBase64String(inArray: Array[Byte], offset: int, length: int) -> str:...
    @staticmethod
    def ToBase64String(inArray: Array[Byte], options: Base64FormattingOptions) -> str:...
    @staticmethod
    def ToBase64String(inArray: Array[Byte]) -> str:...
    @staticmethod
    def ToBoolean(value: DateTime) -> bool:...
    @staticmethod
    def ToBoolean(value: Decimal) -> bool:...
    @staticmethod
    def ToBoolean(value: float) -> bool:...
    @staticmethod
    def ToBoolean(value: str, provider: IFormatProvider) -> bool:...
    @staticmethod
    def ToBoolean(value: str) -> bool:...
    @staticmethod
    def ToBoolean(value: UInt64) -> bool:...
    @staticmethod
    def ToBoolean(value: UInt32) -> bool:...
    @staticmethod
    def ToBoolean(value: UInt16) -> bool:...
    @staticmethod
    def ToBoolean(value: int) -> bool:...
    @staticmethod
    def ToBoolean(value: Byte) -> bool:...
    @staticmethod
    def ToBoolean(value: Char) -> bool:...
    @staticmethod
    def ToBoolean(value: SByte) -> bool:...
    @staticmethod
    def ToBoolean(value: bool) -> bool:...
    @staticmethod
    def ToBoolean(value: object, provider: IFormatProvider) -> bool:...
    @staticmethod
    def ToBoolean(value: object) -> bool:...
    @staticmethod
    def ToByte(value: str, fromBase: int) -> Byte:...
    @staticmethod
    def ToByte(value: DateTime) -> Byte:...
    @staticmethod
    def ToByte(value: str, provider: IFormatProvider) -> Byte:...
    @staticmethod
    def ToByte(value: str) -> Byte:...
    @staticmethod
    def ToByte(value: Decimal) -> Byte:...
    @staticmethod
    def ToByte(value: float) -> Byte:...
    @staticmethod
    def ToByte(value: UInt64) -> Byte:...
    @staticmethod
    def ToByte(value: UInt32) -> Byte:...
    @staticmethod
    def ToByte(value: UInt16) -> Byte:...
    @staticmethod
    def ToByte(value: int) -> Byte:...
    @staticmethod
    def ToByte(value: SByte) -> Byte:...
    @staticmethod
    def ToByte(value: Char) -> Byte:...
    @staticmethod
    def ToByte(value: Byte) -> Byte:...
    @staticmethod
    def ToByte(value: bool) -> Byte:...
    @staticmethod
    def ToByte(value: object, provider: IFormatProvider) -> Byte:...
    @staticmethod
    def ToByte(value: object) -> Byte:...
    @staticmethod
    def ToChar(value: DateTime) -> Char:...
    @staticmethod
    def ToChar(value: Decimal) -> Char:...
    @staticmethod
    def ToChar(value: float) -> Char:...
    @staticmethod
    def ToChar(value: str, provider: IFormatProvider) -> Char:...
    @staticmethod
    def ToChar(value: str) -> Char:...
    @staticmethod
    def ToChar(value: UInt64) -> Char:...
    @staticmethod
    def ToChar(value: UInt32) -> Char:...
    @staticmethod
    def ToChar(value: UInt16) -> Char:...
    @staticmethod
    def ToChar(value: int) -> Char:...
    @staticmethod
    def ToChar(value: Byte) -> Char:...
    @staticmethod
    def ToChar(value: SByte) -> Char:...
    @staticmethod
    def ToChar(value: Char) -> Char:...
    @staticmethod
    def ToChar(value: bool) -> Char:...
    @staticmethod
    def ToChar(value: object, provider: IFormatProvider) -> Char:...
    @staticmethod
    def ToChar(value: object) -> Char:...
    @staticmethod
    def ToDateTime(value: Decimal) -> DateTime:...
    @staticmethod
    def ToDateTime(value: float) -> DateTime:...
    @staticmethod
    def ToDateTime(value: Char) -> DateTime:...
    @staticmethod
    def ToDateTime(value: bool) -> DateTime:...
    @staticmethod
    def ToDateTime(value: UInt64) -> DateTime:...
    @staticmethod
    def ToDateTime(value: UInt32) -> DateTime:...
    @staticmethod
    def ToDateTime(value: UInt16) -> DateTime:...
    @staticmethod
    def ToDateTime(value: int) -> DateTime:...
    @staticmethod
    def ToDateTime(value: Byte) -> DateTime:...
    @staticmethod
    def ToDateTime(value: SByte) -> DateTime:...
    @staticmethod
    def ToDateTime(value: str, provider: IFormatProvider) -> DateTime:...
    @staticmethod
    def ToDateTime(value: str) -> DateTime:...
    @staticmethod
    def ToDateTime(value: object, provider: IFormatProvider) -> DateTime:...
    @staticmethod
    def ToDateTime(value: object) -> DateTime:...
    @staticmethod
    def ToDateTime(value: DateTime) -> DateTime:...
    @staticmethod
    def ToDecimal(value: DateTime) -> Decimal:...
    @staticmethod
    def ToDecimal(value: bool) -> Decimal:...
    @staticmethod
    def ToDecimal(value: Decimal) -> Decimal:...
    @staticmethod
    def ToDecimal(value: str, provider: IFormatProvider) -> Decimal:...
    @staticmethod
    def ToDecimal(value: str) -> Decimal:...
    @staticmethod
    def ToDecimal(value: float) -> Decimal:...
    @staticmethod
    def ToDecimal(value: UInt64) -> Decimal:...
    @staticmethod
    def ToDecimal(value: UInt32) -> Decimal:...
    @staticmethod
    def ToDecimal(value: UInt16) -> Decimal:...
    @staticmethod
    def ToDecimal(value: int) -> Decimal:...
    @staticmethod
    def ToDecimal(value: Char) -> Decimal:...
    @staticmethod
    def ToDecimal(value: Byte) -> Decimal:...
    @staticmethod
    def ToDecimal(value: SByte) -> Decimal:...
    @staticmethod
    def ToDecimal(value: object, provider: IFormatProvider) -> Decimal:...
    @staticmethod
    def ToDecimal(value: object) -> Decimal:...
    @staticmethod
    def ToDouble(value: DateTime) -> float:...
    @staticmethod
    def ToDouble(value: bool) -> float:...
    @staticmethod
    def ToDouble(value: str, provider: IFormatProvider) -> float:...
    @staticmethod
    def ToDouble(value: str) -> float:...
    @staticmethod
    def ToDouble(value: Decimal) -> float:...
    @staticmethod
    def ToDouble(value: float) -> float:...
    @staticmethod
    def ToDouble(value: UInt64) -> float:...
    @staticmethod
    def ToDouble(value: UInt32) -> float:...
    @staticmethod
    def ToDouble(value: UInt16) -> float:...
    @staticmethod
    def ToDouble(value: Char) -> float:...
    @staticmethod
    def ToDouble(value: int) -> float:...
    @staticmethod
    def ToDouble(value: Byte) -> float:...
    @staticmethod
    def ToDouble(value: SByte) -> float:...
    @staticmethod
    def ToDouble(value: object, provider: IFormatProvider) -> float:...
    @staticmethod
    def ToDouble(value: object) -> float:...
    @staticmethod
    def ToInt16(value: str, fromBase: int) -> int:...
    @staticmethod
    def ToInt16(value: DateTime) -> int:...
    @staticmethod
    def ToInt16(value: str, provider: IFormatProvider) -> int:...
    @staticmethod
    def ToInt16(value: str) -> int:...
    @staticmethod
    def ToInt16(value: Decimal) -> int:...
    @staticmethod
    def ToInt16(value: float) -> int:...
    @staticmethod
    def ToInt16(value: UInt64) -> int:...
    @staticmethod
    def ToInt16(value: UInt32) -> int:...
    @staticmethod
    def ToInt16(value: int) -> int:...
    @staticmethod
    def ToInt16(value: UInt16) -> int:...
    @staticmethod
    def ToInt16(value: Byte) -> int:...
    @staticmethod
    def ToInt16(value: SByte) -> int:...
    @staticmethod
    def ToInt16(value: Char) -> int:...
    @staticmethod
    def ToInt16(value: bool) -> int:...
    @staticmethod
    def ToInt16(value: object, provider: IFormatProvider) -> int:...
    @staticmethod
    def ToInt16(value: object) -> int:...
    @staticmethod
    def ToInt32(value: str, fromBase: int) -> int:...
    @staticmethod
    def ToInt32(value: DateTime) -> int:...
    @staticmethod
    def ToInt32(value: str, provider: IFormatProvider) -> int:...
    @staticmethod
    def ToInt32(value: str) -> int:...
    @staticmethod
    def ToInt32(value: Decimal) -> int:...
    @staticmethod
    def ToInt32(value: float) -> int:...
    @staticmethod
    def ToInt32(value: UInt64) -> int:...
    @staticmethod
    def ToInt32(value: UInt32) -> int:...
    @staticmethod
    def ToInt32(value: UInt16) -> int:...
    @staticmethod
    def ToInt32(value: int) -> int:...
    @staticmethod
    def ToInt32(value: Byte) -> int:...
    @staticmethod
    def ToInt32(value: SByte) -> int:...
    @staticmethod
    def ToInt32(value: Char) -> int:...
    @staticmethod
    def ToInt32(value: bool) -> int:...
    @staticmethod
    def ToInt32(value: object, provider: IFormatProvider) -> int:...
    @staticmethod
    def ToInt32(value: object) -> int:...
    @staticmethod
    def ToInt64(value: str, fromBase: int) -> int:...
    @staticmethod
    def ToInt64(value: DateTime) -> int:...
    @staticmethod
    def ToInt64(value: str, provider: IFormatProvider) -> int:...
    @staticmethod
    def ToInt64(value: str) -> int:...
    @staticmethod
    def ToInt64(value: Decimal) -> int:...
    @staticmethod
    def ToInt64(value: float) -> int:...
    @staticmethod
    def ToInt64(value: UInt64) -> int:...
    @staticmethod
    def ToInt64(value: UInt32) -> int:...
    @staticmethod
    def ToInt64(value: UInt16) -> int:...
    @staticmethod
    def ToInt64(value: int) -> int:...
    @staticmethod
    def ToInt64(value: Byte) -> int:...
    @staticmethod
    def ToInt64(value: SByte) -> int:...
    @staticmethod
    def ToInt64(value: Char) -> int:...
    @staticmethod
    def ToInt64(value: bool) -> int:...
    @staticmethod
    def ToInt64(value: object, provider: IFormatProvider) -> int:...
    @staticmethod
    def ToInt64(value: object) -> int:...
    @staticmethod
    def ToSByte(value: str, fromBase: int) -> SByte:...
    @staticmethod
    def ToSByte(value: DateTime) -> SByte:...
    @staticmethod
    def ToSByte(value: str, provider: IFormatProvider) -> SByte:...
    @staticmethod
    def ToSByte(value: str) -> SByte:...
    @staticmethod
    def ToSByte(value: Decimal) -> SByte:...
    @staticmethod
    def ToSByte(value: float) -> SByte:...
    @staticmethod
    def ToSByte(value: UInt64) -> SByte:...
    @staticmethod
    def ToSByte(value: UInt32) -> SByte:...
    @staticmethod
    def ToSByte(value: UInt16) -> SByte:...
    @staticmethod
    def ToSByte(value: int) -> SByte:...
    @staticmethod
    def ToSByte(value: Byte) -> SByte:...
    @staticmethod
    def ToSByte(value: Char) -> SByte:...
    @staticmethod
    def ToSByte(value: SByte) -> SByte:...
    @staticmethod
    def ToSByte(value: bool) -> SByte:...
    @staticmethod
    def ToSByte(value: object, provider: IFormatProvider) -> SByte:...
    @staticmethod
    def ToSByte(value: object) -> SByte:...
    @staticmethod
    def ToSingle(value: DateTime) -> float:...
    @staticmethod
    def ToSingle(value: bool) -> float:...
    @staticmethod
    def ToSingle(value: str, provider: IFormatProvider) -> float:...
    @staticmethod
    def ToSingle(value: str) -> float:...
    @staticmethod
    def ToSingle(value: Decimal) -> float:...
    @staticmethod
    def ToSingle(value: float) -> float:...
    @staticmethod
    def ToSingle(value: UInt64) -> float:...
    @staticmethod
    def ToSingle(value: UInt32) -> float:...
    @staticmethod
    def ToSingle(value: UInt16) -> float:...
    @staticmethod
    def ToSingle(value: int) -> float:...
    @staticmethod
    def ToSingle(value: Char) -> float:...
    @staticmethod
    def ToSingle(value: Byte) -> float:...
    @staticmethod
    def ToSingle(value: SByte) -> float:...
    @staticmethod
    def ToSingle(value: object, provider: IFormatProvider) -> float:...
    @staticmethod
    def ToSingle(value: object) -> float:...
    @staticmethod
    def ToUInt16(value: str, fromBase: int) -> UInt16:...
    @staticmethod
    def ToUInt16(value: DateTime) -> UInt16:...
    @staticmethod
    def ToUInt16(value: str, provider: IFormatProvider) -> UInt16:...
    @staticmethod
    def ToUInt16(value: str) -> UInt16:...
    @staticmethod
    def ToUInt16(value: Decimal) -> UInt16:...
    @staticmethod
    def ToUInt16(value: float) -> UInt16:...
    @staticmethod
    def ToUInt16(value: UInt64) -> UInt16:...
    @staticmethod
    def ToUInt16(value: UInt32) -> UInt16:...
    @staticmethod
    def ToUInt16(value: UInt16) -> UInt16:...
    @staticmethod
    def ToUInt16(value: int) -> UInt16:...
    @staticmethod
    def ToUInt16(value: Byte) -> UInt16:...
    @staticmethod
    def ToUInt16(value: SByte) -> UInt16:...
    @staticmethod
    def ToUInt16(value: Char) -> UInt16:...
    @staticmethod
    def ToUInt16(value: bool) -> UInt16:...
    @staticmethod
    def ToUInt16(value: object, provider: IFormatProvider) -> UInt16:...
    @staticmethod
    def ToUInt16(value: object) -> UInt16:...
    @staticmethod
    def ToUInt32(value: str, fromBase: int) -> UInt32:...
    @staticmethod
    def ToUInt32(value: DateTime) -> UInt32:...
    @staticmethod
    def ToUInt32(value: str, provider: IFormatProvider) -> UInt32:...
    @staticmethod
    def ToUInt32(value: str) -> UInt32:...
    @staticmethod
    def ToUInt32(value: Decimal) -> UInt32:...
    @staticmethod
    def ToUInt32(value: float) -> UInt32:...
    @staticmethod
    def ToUInt32(value: UInt64) -> UInt32:...
    @staticmethod
    def ToUInt32(value: UInt32) -> UInt32:...
    @staticmethod
    def ToUInt32(value: UInt16) -> UInt32:...
    @staticmethod
    def ToUInt32(value: int) -> UInt32:...
    @staticmethod
    def ToUInt32(value: Byte) -> UInt32:...
    @staticmethod
    def ToUInt32(value: SByte) -> UInt32:...
    @staticmethod
    def ToUInt32(value: Char) -> UInt32:...
    @staticmethod
    def ToUInt32(value: bool) -> UInt32:...
    @staticmethod
    def ToUInt32(value: object, provider: IFormatProvider) -> UInt32:...
    @staticmethod
    def ToUInt32(value: object) -> UInt32:...
    @staticmethod
    def ToUInt64(value: str, fromBase: int) -> UInt64:...
    @staticmethod
    def ToUInt64(value: DateTime) -> UInt64:...
    @staticmethod
    def ToUInt64(value: str, provider: IFormatProvider) -> UInt64:...
    @staticmethod
    def ToUInt64(value: str) -> UInt64:...
    @staticmethod
    def ToUInt64(value: Decimal) -> UInt64:...
    @staticmethod
    def ToUInt64(value: float) -> UInt64:...
    @staticmethod
    def ToUInt64(value: UInt64) -> UInt64:...
    @staticmethod
    def ToUInt64(value: UInt32) -> UInt64:...
    @staticmethod
    def ToUInt64(value: UInt16) -> UInt64:...
    @staticmethod
    def ToUInt64(value: int) -> UInt64:...
    @staticmethod
    def ToUInt64(value: Byte) -> UInt64:...
    @staticmethod
    def ToUInt64(value: SByte) -> UInt64:...
    @staticmethod
    def ToUInt64(value: Char) -> UInt64:...
    @staticmethod
    def ToUInt64(value: bool) -> UInt64:...
    @staticmethod
    def ToUInt64(value: object, provider: IFormatProvider) -> UInt64:...
    @staticmethod
    def ToUInt64(value: object) -> UInt64:...
class Converter(MulticastDelegate, ICloneable, _n_13_t_0, typing.Generic[TInput, TOutput]):
    def __init__(self, object: object, method: IntPtr) -> Converter:...
    def BeginInvoke(self, input: TInput, callback: AsyncCallback, object: object) -> IAsyncResult:...
    def EndInvoke(self, result: IAsyncResult) -> TOutput:...
    def Invoke(self, input: TInput) -> TOutput:...
class CrossAppDomainDelegate(MulticastDelegate, ICloneable, _n_13_t_0):
    def __init__(self, object: object, method: IntPtr) -> CrossAppDomainDelegate:...
    def BeginInvoke(self, callback: AsyncCallback, object: object) -> IAsyncResult:...
    def EndInvoke(self, result: IAsyncResult):...
    def Invoke(self):...
class DataMisalignedException(SystemException, _n_13_t_0, _n_11_t_0):
    def __init__(self, message: str, innerException: Exception) -> DataMisalignedException:...
    def __init__(self, message: str) -> DataMisalignedException:...
    def __init__(self) -> DataMisalignedException:...
class DateTime(ValueType, IComparable, IFormattable, IConvertible, _n_13_t_0, IComparable[DateTime], IEquatable[DateTime]):
    MaxValue: int
    MinValue: int
    @property
    def Date(self) -> DateTime:"""Date { get; } -> DateTime"""
    @property
    def Day(self) -> int:"""Day { get; } -> int"""
    @property
    def DayOfWeek(self) -> DayOfWeek:"""DayOfWeek { get; } -> DayOfWeek"""
    @property
    def DayOfYear(self) -> int:"""DayOfYear { get; } -> int"""
    @property
    def Hour(self) -> int:"""Hour { get; } -> int"""
    @property
    def Kind(self) -> DateTimeKind:"""Kind { get; } -> DateTimeKind"""
    @property
    def Millisecond(self) -> int:"""Millisecond { get; } -> int"""
    @property
    def Minute(self) -> int:"""Minute { get; } -> int"""
    @property
    def Month(self) -> int:"""Month { get; } -> int"""
    @property
    def Now(self) -> DateTime:"""Now { get; } -> DateTime"""
    @property
    def Second(self) -> int:"""Second { get; } -> int"""
    @property
    def Ticks(self) -> int:"""Ticks { get; } -> int"""
    @property
    def TimeOfDay(self) -> TimeSpan:"""TimeOfDay { get; } -> TimeSpan"""
    @property
    def Today(self) -> DateTime:"""Today { get; } -> DateTime"""
    @property
    def UtcNow(self) -> DateTime:"""UtcNow { get; } -> DateTime"""
    @property
    def Year(self) -> int:"""Year { get; } -> int"""
    def __init__(self, year: int, month: int, day: int, hour: int, minute: int, second: int, millisecond: int, calendar: _n_5_t_3, kind: DateTimeKind) -> DateTime:...
    def __init__(self, year: int, month: int, day: int, hour: int, minute: int, second: int, millisecond: int, calendar: _n_5_t_3) -> DateTime:...
    def __init__(self, year: int, month: int, day: int, hour: int, minute: int, second: int, millisecond: int, kind: DateTimeKind) -> DateTime:...
    def __init__(self, year: int, month: int, day: int, hour: int, minute: int, second: int, millisecond: int) -> DateTime:...
    def __init__(self, year: int, month: int, day: int, hour: int, minute: int, second: int, calendar: _n_5_t_3) -> DateTime:...
    def __init__(self, year: int, month: int, day: int, hour: int, minute: int, second: int, kind: DateTimeKind) -> DateTime:...
    def __init__(self, year: int, month: int, day: int, hour: int, minute: int, second: int) -> DateTime:...
    def __init__(self, year: int, month: int, day: int, calendar: _n_5_t_3) -> DateTime:...
    def __init__(self, year: int, month: int, day: int) -> DateTime:...
    def __init__(self, ticks: int, kind: DateTimeKind) -> DateTime:...
    def __init__(self, ticks: int) -> DateTime:...
    def Add(self, value: TimeSpan) -> DateTime:...
    def AddDays(self, value: float) -> DateTime:...
    def AddHours(self, value: float) -> DateTime:...
    def AddMilliseconds(self, value: float) -> DateTime:...
    def AddMinutes(self, value: float) -> DateTime:...
    def AddMonths(self, months: int) -> DateTime:...
    def AddSeconds(self, value: float) -> DateTime:...
    def AddTicks(self, value: int) -> DateTime:...
    def AddYears(self, value: int) -> DateTime:...
    @staticmethod
    def Compare(t1: DateTime, t2: DateTime) -> int:...
    @staticmethod
    def DaysInMonth(year: int, month: int) -> int:...
    @staticmethod
    def FromBinary(dateData: int) -> DateTime:...
    @staticmethod
    def FromFileTime(fileTime: int) -> DateTime:...
    @staticmethod
    def FromFileTimeUtc(fileTime: int) -> DateTime:...
    @staticmethod
    def FromOADate(d: float) -> DateTime:...
    def GetDateTimeFormats(self, format: Char, provider: IFormatProvider) -> Array[str]:...
    def GetDateTimeFormats(self, format: Char) -> Array[str]:...
    def GetDateTimeFormats(self, provider: IFormatProvider) -> Array[str]:...
    def GetDateTimeFormats(self) -> Array[str]:...
    def IsDaylightSavingTime(self) -> bool:...
    @staticmethod
    def IsLeapYear(year: int) -> bool:...
    @staticmethod
    def Parse(s: str, provider: IFormatProvider, styles: _n_5_t_4) -> DateTime:...
    @staticmethod
    def Parse(s: str, provider: IFormatProvider) -> DateTime:...
    @staticmethod
    def Parse(s: str) -> DateTime:...
    @staticmethod
    def ParseExact(s: str, formats: Array[str], provider: IFormatProvider, style: _n_5_t_4) -> DateTime:...
    @staticmethod
    def ParseExact(s: str, format: str, provider: IFormatProvider, style: _n_5_t_4) -> DateTime:...
    @staticmethod
    def ParseExact(s: str, format: str, provider: IFormatProvider) -> DateTime:...
    @staticmethod
    def SpecifyKind(value: DateTime, kind: DateTimeKind) -> DateTime:...
    def Subtract(self, value: TimeSpan) -> DateTime:...
    def Subtract(self, value: DateTime) -> TimeSpan:...
    def ToBinary(self) -> int:...
    def ToFileTime(self) -> int:...
    def ToFileTimeUtc(self) -> int:...
    def ToLocalTime(self) -> DateTime:...
    def ToLongDateString(self) -> str:...
    def ToLongTimeString(self) -> str:...
    def ToOADate(self) -> float:...
    def ToShortDateString(self) -> str:...
    def ToShortTimeString(self) -> str:...
    def ToUniversalTime(self) -> DateTime:...
    @staticmethod
    def TryParse(s: str, provider: IFormatProvider, styles: _n_5_t_4, result: DateTime) -> bool:...
    @staticmethod
    def TryParse(s: str, result: DateTime) -> bool:...
    @staticmethod
    def TryParseExact(s: str, formats: Array[str], provider: IFormatProvider, style: _n_5_t_4, result: DateTime) -> bool:...
    @staticmethod
    def TryParseExact(s: str, format: str, provider: IFormatProvider, style: _n_5_t_4, result: DateTime) -> bool:...
class DateTimeKind(Enum, IComparable, IFormattable, IConvertible):
    Local: int
    Unspecified: int
    Utc: int
    value__: int
class DateTimeOffset(ValueType, IComparable, IFormattable, _n_13_t_0, _n_13_t_1, IComparable[DateTimeOffset], IEquatable[DateTimeOffset]):
    MaxValue: int
    MinValue: int
    @property
    def Date(self) -> DateTime:"""Date { get; } -> DateTime"""
    @property
    def DateTime(self) -> DateTime:"""DateTime { get; } -> DateTime"""
    @property
    def Day(self) -> int:"""Day { get; } -> int"""
    @property
    def DayOfWeek(self) -> DayOfWeek:"""DayOfWeek { get; } -> DayOfWeek"""
    @property
    def DayOfYear(self) -> int:"""DayOfYear { get; } -> int"""
    @property
    def Hour(self) -> int:"""Hour { get; } -> int"""
    @property
    def LocalDateTime(self) -> DateTime:"""LocalDateTime { get; } -> DateTime"""
    @property
    def Millisecond(self) -> int:"""Millisecond { get; } -> int"""
    @property
    def Minute(self) -> int:"""Minute { get; } -> int"""
    @property
    def Month(self) -> int:"""Month { get; } -> int"""
    @property
    def Now(self) -> DateTimeOffset:"""Now { get; } -> DateTimeOffset"""
    @property
    def Offset(self) -> TimeSpan:"""Offset { get; } -> TimeSpan"""
    @property
    def Second(self) -> int:"""Second { get; } -> int"""
    @property
    def Ticks(self) -> int:"""Ticks { get; } -> int"""
    @property
    def TimeOfDay(self) -> TimeSpan:"""TimeOfDay { get; } -> TimeSpan"""
    @property
    def UtcDateTime(self) -> DateTime:"""UtcDateTime { get; } -> DateTime"""
    @property
    def UtcNow(self) -> DateTimeOffset:"""UtcNow { get; } -> DateTimeOffset"""
    @property
    def UtcTicks(self) -> int:"""UtcTicks { get; } -> int"""
    @property
    def Year(self) -> int:"""Year { get; } -> int"""
    def __init__(self, year: int, month: int, day: int, hour: int, minute: int, second: int, millisecond: int, calendar: _n_5_t_3, offset: TimeSpan) -> DateTimeOffset:...
    def __init__(self, year: int, month: int, day: int, hour: int, minute: int, second: int, millisecond: int, offset: TimeSpan) -> DateTimeOffset:...
    def __init__(self, year: int, month: int, day: int, hour: int, minute: int, second: int, offset: TimeSpan) -> DateTimeOffset:...
    def __init__(self, dateTime: DateTime, offset: TimeSpan) -> DateTimeOffset:...
    def __init__(self, dateTime: DateTime) -> DateTimeOffset:...
    def __init__(self, ticks: int, offset: TimeSpan) -> DateTimeOffset:...
    def Add(self, timeSpan: TimeSpan) -> DateTimeOffset:...
    def AddDays(self, days: float) -> DateTimeOffset:...
    def AddHours(self, hours: float) -> DateTimeOffset:...
    def AddMilliseconds(self, milliseconds: float) -> DateTimeOffset:...
    def AddMinutes(self, minutes: float) -> DateTimeOffset:...
    def AddMonths(self, months: int) -> DateTimeOffset:...
    def AddSeconds(self, seconds: float) -> DateTimeOffset:...
    def AddTicks(self, ticks: int) -> DateTimeOffset:...
    def AddYears(self, years: int) -> DateTimeOffset:...
    @staticmethod
    def Compare(first: DateTimeOffset, second: DateTimeOffset) -> int:...
    def EqualsExact(self, other: DateTimeOffset) -> bool:...
    @staticmethod
    def FromFileTime(fileTime: int) -> DateTimeOffset:...
    @staticmethod
    def FromUnixTimeMilliseconds(milliseconds: int) -> DateTimeOffset:...
    @staticmethod
    def FromUnixTimeSeconds(seconds: int) -> DateTimeOffset:...
    @staticmethod
    def Parse(input: str, formatProvider: IFormatProvider, styles: _n_5_t_4) -> DateTimeOffset:...
    @staticmethod
    def Parse(input: str, formatProvider: IFormatProvider) -> DateTimeOffset:...
    @staticmethod
    def Parse(input: str) -> DateTimeOffset:...
    @staticmethod
    def ParseExact(input: str, formats: Array[str], formatProvider: IFormatProvider, styles: _n_5_t_4) -> DateTimeOffset:...
    @staticmethod
    def ParseExact(input: str, format: str, formatProvider: IFormatProvider, styles: _n_5_t_4) -> DateTimeOffset:...
    @staticmethod
    def ParseExact(input: str, format: str, formatProvider: IFormatProvider) -> DateTimeOffset:...
    def Subtract(self, value: TimeSpan) -> DateTimeOffset:...
    def Subtract(self, value: DateTimeOffset) -> TimeSpan:...
    def ToFileTime(self) -> int:...
    def ToLocalTime(self) -> DateTimeOffset:...
    def ToOffset(self, offset: TimeSpan) -> DateTimeOffset:...
    def ToUniversalTime(self) -> DateTimeOffset:...
    def ToUnixTimeMilliseconds(self) -> int:...
    def ToUnixTimeSeconds(self) -> int:...
    @staticmethod
    def TryParse(input: str, formatProvider: IFormatProvider, styles: _n_5_t_4, result: DateTimeOffset) -> bool:...
    @staticmethod
    def TryParse(input: str, result: DateTimeOffset) -> bool:...
    @staticmethod
    def TryParseExact(input: str, formats: Array[str], formatProvider: IFormatProvider, styles: _n_5_t_4, result: DateTimeOffset) -> bool:...
    @staticmethod
    def TryParseExact(input: str, format: str, formatProvider: IFormatProvider, styles: _n_5_t_4, result: DateTimeOffset) -> bool:...
class DayOfWeek(Enum, IComparable, IFormattable, IConvertible):
    Friday: int
    Monday: int
    Saturday: int
    Sunday: int
    Thursday: int
    Tuesday: int
    value__: int
    Wednesday: int
class DBNull(_n_13_t_0, IConvertible):
    Value: int
class Decimal(ValueType, IFormattable, IComparable, IConvertible, _n_13_t_1, IComparable[Decimal], IEquatable[Decimal]):
    MaxValue: int
    MinusOne: int
    MinValue: int
    One: int
    Zero: int
    def __init__(self, lo: int, mid: int, hi: int, isNegative: bool, scale: Byte) -> Decimal:...
    def __init__(self, bits: Array[int]) -> Decimal:...
    def __init__(self, value: float) -> Decimal:...
    def __init__(self, value: UInt64) -> Decimal:...
    def __init__(self, value: UInt32) -> Decimal:...
    def __init__(self, value: int) -> Decimal:...
    @staticmethod
    def Add(d1: Decimal, d2: Decimal) -> Decimal:...
    @staticmethod
    def Ceiling(d: Decimal) -> Decimal:...
    @staticmethod
    def Compare(d1: Decimal, d2: Decimal) -> int:...
    @staticmethod
    def Divide(d1: Decimal, d2: Decimal) -> Decimal:...
    @staticmethod
    def Floor(d: Decimal) -> Decimal:...
    @staticmethod
    def FromOACurrency(cy: int) -> Decimal:...
    @staticmethod
    def GetBits(d: Decimal) -> Array[int]:...
    @staticmethod
    def Multiply(d1: Decimal, d2: Decimal) -> Decimal:...
    @staticmethod
    def Negate(d: Decimal) -> Decimal:...
    @staticmethod
    def Parse(s: str, style: _n_5_t_1, provider: IFormatProvider) -> Decimal:...
    @staticmethod
    def Parse(s: str, provider: IFormatProvider) -> Decimal:...
    @staticmethod
    def Parse(s: str, style: _n_5_t_1) -> Decimal:...
    @staticmethod
    def Parse(s: str) -> Decimal:...
    @staticmethod
    def Remainder(d1: Decimal, d2: Decimal) -> Decimal:...
    @staticmethod
    def Round(d: Decimal, decimals: int, mode: MidpointRounding) -> Decimal:...
    @staticmethod
    def Round(d: Decimal, mode: MidpointRounding) -> Decimal:...
    @staticmethod
    def Round(d: Decimal, decimals: int) -> Decimal:...
    @staticmethod
    def Round(d: Decimal) -> Decimal:...
    @staticmethod
    def Subtract(d1: Decimal, d2: Decimal) -> Decimal:...
    @staticmethod
    def ToOACurrency(value: Decimal) -> int:...
    @staticmethod
    def Truncate(d: Decimal) -> Decimal:...
    @staticmethod
    def TryParse(s: str, style: _n_5_t_1, provider: IFormatProvider, result: Decimal) -> bool:...
    @staticmethod
    def TryParse(s: str, result: Decimal) -> bool:...
class Delegate(ICloneable, _n_13_t_0):
    @property
    def Method(self) -> _n_7_t_7:"""Method { get; } -> MethodInfo"""
    @property
    def Target(self) -> object:"""Target { get; } -> object"""
    @staticmethod
    def Combine(delegates: Array[Delegate]) -> Delegate:...
    @staticmethod
    def Combine(a: Delegate, b: Delegate) -> Delegate:...
    @staticmethod
    def CreateDelegate(type: Type, method: _n_7_t_7) -> Delegate:...
    @staticmethod
    def CreateDelegate(type: Type, firstArgument: object, method: _n_7_t_7, throwOnBindFailure: bool) -> Delegate:...
    @staticmethod
    def CreateDelegate(type: Type, firstArgument: object, method: _n_7_t_7) -> Delegate:...
    @staticmethod
    def CreateDelegate(type: Type, method: _n_7_t_7, throwOnBindFailure: bool) -> Delegate:...
    @staticmethod
    def CreateDelegate(type: Type, target: Type, method: str, ignoreCase: bool, throwOnBindFailure: bool) -> Delegate:...
    @staticmethod
    def CreateDelegate(type: Type, target: Type, method: str, ignoreCase: bool) -> Delegate:...
    @staticmethod
    def CreateDelegate(type: Type, target: Type, method: str) -> Delegate:...
    @staticmethod
    def CreateDelegate(type: Type, target: object, method: str, ignoreCase: bool, throwOnBindFailure: bool) -> Delegate:...
    @staticmethod
    def CreateDelegate(type: Type, target: object, method: str, ignoreCase: bool) -> Delegate:...
    @staticmethod
    def CreateDelegate(type: Type, target: object, method: str) -> Delegate:...
    def DynamicInvoke(self, args: Array[object]) -> object:...
    def GetInvocationList(self) -> Array[Delegate]:...
    @staticmethod
    def Remove(source: Delegate, value: Delegate) -> Delegate:...
    @staticmethod
    def RemoveAll(source: Delegate, value: Delegate) -> Delegate:...
    def GetMethodInfo(self) -> _n_7_t_7:
        """Extension from: System.Reflection.RuntimeReflectionExtensions"""
class DivideByZeroException(ArithmeticException, _n_13_t_0, _n_11_t_0):
    def __init__(self, message: str, innerException: Exception) -> DivideByZeroException:...
    def __init__(self, message: str) -> DivideByZeroException:...
    def __init__(self) -> DivideByZeroException:...
class DllNotFoundException(TypeLoadException, _n_13_t_0, _n_11_t_0):
    def __init__(self, message: str, inner: Exception) -> DllNotFoundException:...
    def __init__(self, message: str) -> DllNotFoundException:...
    def __init__(self) -> DllNotFoundException:...
class DuplicateWaitObjectException(ArgumentException, _n_13_t_0, _n_11_t_0):
    def __init__(self, message: str, innerException: Exception) -> DuplicateWaitObjectException:...
    def __init__(self, parameterName: str, message: str) -> DuplicateWaitObjectException:...
    def __init__(self, parameterName: str) -> DuplicateWaitObjectException:...
    def __init__(self) -> DuplicateWaitObjectException:...
class EntryPointNotFoundException(TypeLoadException, _n_13_t_0, _n_11_t_0):
    def __init__(self, message: str, inner: Exception) -> EntryPointNotFoundException:...
    def __init__(self, message: str) -> EntryPointNotFoundException:...
    def __init__(self) -> EntryPointNotFoundException:...
class Enum(ValueType, IComparable, IFormattable, IConvertible):
    @staticmethod
    def Format(enumType: Type, value: object, format: str) -> str:...
    @staticmethod
    def GetName(enumType: Type, value: object) -> str:...
    @staticmethod
    def GetNames(enumType: Type) -> Array[str]:...
    @staticmethod
    def GetUnderlyingType(enumType: Type) -> Type:...
    @staticmethod
    def GetValues(enumType: Type) -> Array:...
    def HasFlag(self, flag: Enum) -> bool:...
    @staticmethod
    def IsDefined(enumType: Type, value: object) -> bool:...
    @staticmethod
    def Parse(enumType: Type, value: str, ignoreCase: bool) -> object:...
    @staticmethod
    def Parse(enumType: Type, value: str) -> object:...
    @staticmethod
    def ToObject(enumType: Type, value: UInt64) -> object:...
    @staticmethod
    def ToObject(enumType: Type, value: UInt32) -> object:...
    @staticmethod
    def ToObject(enumType: Type, value: UInt16) -> object:...
    @staticmethod
    def ToObject(enumType: Type, value: Byte) -> object:...
    @staticmethod
    def ToObject(enumType: Type, value: int) -> object:...
    @staticmethod
    def ToObject(enumType: Type, value: SByte) -> object:...
    @staticmethod
    def ToObject(enumType: Type, value: object) -> object:...
    @staticmethod
    def TryParse(value: str, ignoreCase: bool, result: object) -> bool:...
    @staticmethod
    def TryParse(value: str, result: object) -> bool:...
class Environment(object):
    @property
    def CommandLine(self) -> str:"""CommandLine { get; } -> str"""
    @property
    def CurrentDirectory(self) -> str:"""CurrentDirectory { get; set; } -> str"""
    @property
    def CurrentManagedThreadId(self) -> int:"""CurrentManagedThreadId { get; } -> int"""
    @property
    def ExitCode(self) -> int:"""ExitCode { get; set; } -> int"""
    @property
    def HasShutdownStarted(self) -> bool:"""HasShutdownStarted { get; } -> bool"""
    @property
    def Is64BitOperatingSystem(self) -> bool:"""Is64BitOperatingSystem { get; } -> bool"""
    @property
    def Is64BitProcess(self) -> bool:"""Is64BitProcess { get; } -> bool"""
    @property
    def MachineName(self) -> str:"""MachineName { get; } -> str"""
    @property
    def NewLine(self) -> str:"""NewLine { get; } -> str"""
    @property
    def OSVersion(self) -> OperatingSystem:"""OSVersion { get; } -> OperatingSystem"""
    @property
    def ProcessorCount(self) -> int:"""ProcessorCount { get; } -> int"""
    @property
    def StackTrace(self) -> str:"""StackTrace { get; } -> str"""
    @property
    def SystemDirectory(self) -> str:"""SystemDirectory { get; } -> str"""
    @property
    def SystemPageSize(self) -> int:"""SystemPageSize { get; } -> int"""
    @property
    def TickCount(self) -> int:"""TickCount { get; } -> int"""
    @property
    def UserDomainName(self) -> str:"""UserDomainName { get; } -> str"""
    @property
    def UserInteractive(self) -> bool:"""UserInteractive { get; } -> bool"""
    @property
    def UserName(self) -> str:"""UserName { get; } -> str"""
    @property
    def Version(self) -> Version:"""Version { get; } -> Version"""
    @property
    def WorkingSet(self) -> int:"""WorkingSet { get; } -> int"""
    @staticmethod
    def Exit(exitCode: int):...
    @staticmethod
    def ExpandEnvironmentVariables(name: str) -> str:...
    @staticmethod
    def FailFast(message: str, exception: Exception):...
    @staticmethod
    def FailFast(message: str):...
    @staticmethod
    def GetCommandLineArgs() -> Array[str]:...
    @staticmethod
    def GetEnvironmentVariable(variable: str, target: EnvironmentVariableTarget) -> str:...
    @staticmethod
    def GetEnvironmentVariable(variable: str) -> str:...
    @staticmethod
    def GetEnvironmentVariables(target: EnvironmentVariableTarget) -> _n_0_t_5:...
    @staticmethod
    def GetEnvironmentVariables() -> _n_0_t_5:...
    @staticmethod
    def GetFolderPath(folder: Environment.SpecialFolder, option: Environment.SpecialFolderOption) -> str:...
    @staticmethod
    def GetFolderPath(folder: Environment.SpecialFolder) -> str:...
    @staticmethod
    def GetLogicalDrives() -> Array[str]:...
    @staticmethod
    def SetEnvironmentVariable(variable: str, value: str, target: EnvironmentVariableTarget):...
    @staticmethod
    def SetEnvironmentVariable(variable: str, value: str):...
    class SpecialFolder(Enum, IComparable, IFormattable, IConvertible):
        AdminTools: int
        ApplicationData: int
        CDBurning: int
        CommonAdminTools: int
        CommonApplicationData: int
        CommonDesktopDirectory: int
        CommonDocuments: int
        CommonMusic: int
        CommonOemLinks: int
        CommonPictures: int
        CommonProgramFiles: int
        CommonProgramFilesX86: int
        CommonPrograms: int
        CommonStartMenu: int
        CommonStartup: int
        CommonTemplates: int
        CommonVideos: int
        Cookies: int
        Desktop: int
        DesktopDirectory: int
        Favorites: int
        Fonts: int
        History: int
        InternetCache: int
        LocalApplicationData: int
        LocalizedResources: int
        MyComputer: int
        MyDocuments: int
        MyMusic: int
        MyPictures: int
        MyVideos: int
        NetworkShortcuts: int
        Personal: int
        PrinterShortcuts: int
        ProgramFiles: int
        ProgramFilesX86: int
        Programs: int
        Recent: int
        Resources: int
        SendTo: int
        StartMenu: int
        Startup: int
        System: int
        SystemX86: int
        Templates: int
        UserProfile: int
        value__: int
        Windows: int
    class SpecialFolderOption(Enum, IComparable, IFormattable, IConvertible):
        Create: int
        DoNotVerify: int
        _None: int
        value__: int
class EnvironmentVariableTarget(Enum, IComparable, IFormattable, IConvertible):
    Machine: int
    Process: int
    User: int
    value__: int
class EventArgs(object):
    Empty: int
    def __init__(self) -> EventArgs:...
class EventHandler(MulticastDelegate, ICloneable, _n_13_t_0, typing.Generic[TEventArgs]):
    def __init__(self, object: object, method: IntPtr) -> EventHandler:...
    def BeginInvoke(self, sender: object, e: TEventArgs, callback: AsyncCallback, object: object) -> IAsyncResult:...
    def EndInvoke(self, result: IAsyncResult):...
    def Invoke(self, sender: object, e: TEventArgs):...
class Exception(_n_13_t_0, _n_11_t_0):
    @property
    def Data(self) -> _n_0_t_5:"""Data { get; } -> IDictionary"""
    @property
    def HResult(self) -> int:"""HResult { get; set; } -> int"""
    def __init__(self, message: str, innerException: Exception) -> Exception:...
    def __init__(self, message: str) -> Exception:...
    def __init__(self) -> Exception:...
class ExecutionEngineException(SystemException, _n_13_t_0, _n_11_t_0):
    def __init__(self, message: str, innerException: Exception) -> ExecutionEngineException:...
    def __init__(self, message: str) -> ExecutionEngineException:...
    def __init__(self) -> ExecutionEngineException:...
class FieldAccessException(MemberAccessException, _n_13_t_0, _n_11_t_0):
    def __init__(self, message: str, inner: Exception) -> FieldAccessException:...
    def __init__(self, message: str) -> FieldAccessException:...
    def __init__(self) -> FieldAccessException:...
class FileStyleUriParser(UriParser):
    def __init__(self) -> FileStyleUriParser:...
class FlagsAttribute(Attribute, _n_11_t_2):
    def __init__(self) -> FlagsAttribute:...
class FormatException(SystemException, _n_13_t_0, _n_11_t_0):
    def __init__(self, message: str, innerException: Exception) -> FormatException:...
    def __init__(self, message: str) -> FormatException:...
    def __init__(self) -> FormatException:...
class FormattableString(IFormattable):
    @property
    def ArgumentCount(self) -> int:"""ArgumentCount { get; } -> int"""
    @property
    def Format(self) -> str:"""Format { get; } -> str"""
    def GetArgument(self, index: int) -> object:...
    def GetArguments(self) -> Array[object]:...
    @staticmethod
    def Invariant(formattable: FormattableString) -> str:...
class FtpStyleUriParser(UriParser):
    def __init__(self) -> FtpStyleUriParser:...
class Func(MulticastDelegate, ICloneable, _n_13_t_0, typing.Generic[TResult]):
    def __init__(self, object: object, method: IntPtr) -> Func:...
    def BeginInvoke(self, callback: AsyncCallback, object: object) -> IAsyncResult:...
    def EndInvoke(self, result: IAsyncResult) -> TResult:...
    def Invoke(self) -> TResult:...
class GC(object):
    @property
    def MaxGeneration(self) -> int:"""MaxGeneration { get; } -> int"""
    @staticmethod
    def AddMemoryPressure(bytesAllocated: int):...
    @staticmethod
    def CancelFullGCNotification():...
    @staticmethod
    def Collect(generation: int, mode: GCCollectionMode, blocking: bool, compacting: bool):...
    @staticmethod
    def Collect(generation: int, mode: GCCollectionMode, blocking: bool):...
    @staticmethod
    def Collect(generation: int, mode: GCCollectionMode):...
    @staticmethod
    def Collect():...
    @staticmethod
    def Collect(generation: int):...
    @staticmethod
    def CollectionCount(generation: int) -> int:...
    @staticmethod
    def EndNoGCRegion():...
    @staticmethod
    def GetGeneration(wo: WeakReference) -> int:...
    @staticmethod
    def GetGeneration(obj: object) -> int:...
    @staticmethod
    def GetTotalMemory(forceFullCollection: bool) -> int:...
    @staticmethod
    def KeepAlive(obj: object):...
    @staticmethod
    def RegisterForFullGCNotification(maxGenerationThreshold: int, largeObjectHeapThreshold: int):...
    @staticmethod
    def RemoveMemoryPressure(bytesAllocated: int):...
    @staticmethod
    def ReRegisterForFinalize(obj: object):...
    @staticmethod
    def SuppressFinalize(obj: object):...
    @staticmethod
    def TryStartNoGCRegion(totalSize: int, lohSize: int, disallowFullBlockingGC: bool) -> bool:...
    @staticmethod
    def TryStartNoGCRegion(totalSize: int, disallowFullBlockingGC: bool) -> bool:...
    @staticmethod
    def TryStartNoGCRegion(totalSize: int, lohSize: int) -> bool:...
    @staticmethod
    def TryStartNoGCRegion(totalSize: int) -> bool:...
    @staticmethod
    def WaitForFullGCApproach(millisecondsTimeout: int) -> GCNotificationStatus:...
    @staticmethod
    def WaitForFullGCApproach() -> GCNotificationStatus:...
    @staticmethod
    def WaitForFullGCComplete(millisecondsTimeout: int) -> GCNotificationStatus:...
    @staticmethod
    def WaitForFullGCComplete() -> GCNotificationStatus:...
    @staticmethod
    def WaitForPendingFinalizers():...
class GCCollectionMode(Enum, IComparable, IFormattable, IConvertible):
    Default: int
    Forced: int
    Optimized: int
    value__: int
class GCNotificationStatus(Enum, IComparable, IFormattable, IConvertible):
    Canceled: int
    Failed: int
    NotApplicable: int
    Succeeded: int
    Timeout: int
    value__: int
class GenericUriParser(UriParser):
    def __init__(self, options: GenericUriParserOptions) -> GenericUriParser:...
class GenericUriParserOptions(Enum, IComparable, IFormattable, IConvertible):
    AllowEmptyAuthority: int
    Default: int
    DontCompressPath: int
    DontConvertPathBackslashes: int
    DontUnescapePathDotsAndSlashes: int
    GenericAuthority: int
    Idn: int
    IriParsing: int
    NoFragment: int
    NoPort: int
    NoQuery: int
    NoUserInfo: int
    value__: int
class GopherStyleUriParser(UriParser):
    def __init__(self) -> GopherStyleUriParser:...
class Guid(ValueType, IFormattable, IComparable, IComparable[Guid], IEquatable[Guid]):
    Empty: int
    def __init__(self, g: str) -> Guid:...
    def __init__(self, a: int, b: int, c: int, d: Byte, e: Byte, f: Byte, g: Byte, h: Byte, i: Byte, j: Byte, k: Byte) -> Guid:...
    def __init__(self, a: int, b: int, c: int, d: Array[Byte]) -> Guid:...
    def __init__(self, a: UInt32, b: UInt16, c: UInt16, d: Byte, e: Byte, f: Byte, g: Byte, h: Byte, i: Byte, j: Byte, k: Byte) -> Guid:...
    def __init__(self, b: Array[Byte]) -> Guid:...
    @staticmethod
    def NewGuid() -> Guid:...
    @staticmethod
    def Parse(input: str) -> Guid:...
    @staticmethod
    def ParseExact(input: str, format: str) -> Guid:...
    def ToByteArray(self) -> Array[Byte]:...
    @staticmethod
    def TryParse(input: str, result: Guid) -> bool:...
    @staticmethod
    def TryParseExact(input: str, format: str, result: Guid) -> bool:...
class HttpStyleUriParser(UriParser):
    def __init__(self) -> HttpStyleUriParser:...
class IAppDomainSetup():
    @property
    def ApplicationBase(self) -> str:"""ApplicationBase { get; set; } -> str"""
    @property
    def ApplicationName(self) -> str:"""ApplicationName { get; set; } -> str"""
    @property
    def CachePath(self) -> str:"""CachePath { get; set; } -> str"""
    @property
    def ConfigurationFile(self) -> str:"""ConfigurationFile { get; set; } -> str"""
    @property
    def DynamicBase(self) -> str:"""DynamicBase { get; set; } -> str"""
    @property
    def LicenseFile(self) -> str:"""LicenseFile { get; set; } -> str"""
    @property
    def PrivateBinPath(self) -> str:"""PrivateBinPath { get; set; } -> str"""
    @property
    def PrivateBinPathProbe(self) -> str:"""PrivateBinPathProbe { get; set; } -> str"""
    @property
    def ShadowCopyDirectories(self) -> str:"""ShadowCopyDirectories { get; set; } -> str"""
    @property
    def ShadowCopyFiles(self) -> str:"""ShadowCopyFiles { get; set; } -> str"""
class IAsyncResult():
    @property
    def AsyncState(self) -> object:"""AsyncState { get; } -> object"""
    @property
    def AsyncWaitHandle(self) -> _n_18_t_1:"""AsyncWaitHandle { get; } -> WaitHandle"""
    @property
    def CompletedSynchronously(self) -> bool:"""CompletedSynchronously { get; } -> bool"""
    @property
    def IsCompleted(self) -> bool:"""IsCompleted { get; } -> bool"""
class ICloneable():
    def Clone(self) -> object:...
class IComparable(typing.Generic[T]):
    def CompareTo(self, other: T) -> int:...
class IConvertible():
    def GetTypeCode(self) -> TypeCode:...
    def ToBoolean(self, provider: IFormatProvider) -> bool:...
    def ToByte(self, provider: IFormatProvider) -> Byte:...
    def ToChar(self, provider: IFormatProvider) -> Char:...
    def ToDateTime(self, provider: IFormatProvider) -> DateTime:...
    def ToDecimal(self, provider: IFormatProvider) -> Decimal:...
    def ToDouble(self, provider: IFormatProvider) -> float:...
    def ToInt16(self, provider: IFormatProvider) -> int:...
    def ToInt32(self, provider: IFormatProvider) -> int:...
    def ToInt64(self, provider: IFormatProvider) -> int:...
    def ToSByte(self, provider: IFormatProvider) -> SByte:...
    def ToSingle(self, provider: IFormatProvider) -> float:...
    def ToString(self, provider: IFormatProvider) -> str:...
    def ToType(self, conversionType: Type, provider: IFormatProvider) -> object:...
    def ToUInt16(self, provider: IFormatProvider) -> UInt16:...
    def ToUInt32(self, provider: IFormatProvider) -> UInt32:...
    def ToUInt64(self, provider: IFormatProvider) -> UInt64:...
class ICustomFormatter():
    def Format(self, format: str, arg: object, formatProvider: IFormatProvider) -> str:...
class IDisposable():
    def Dispose(self):...
class IEquatable(typing.Generic[T]):
    def Equals(self, other: T) -> bool:...
class IFormatProvider():
    def GetFormat(self, formatType: Type) -> object:...
class IFormattable():
    def ToString(self, format: str, formatProvider: IFormatProvider) -> str:...
class IndexOutOfRangeException(SystemException, _n_13_t_0, _n_11_t_0):
    def __init__(self, message: str, innerException: Exception) -> IndexOutOfRangeException:...
    def __init__(self, message: str) -> IndexOutOfRangeException:...
    def __init__(self) -> IndexOutOfRangeException:...
class InsufficientExecutionStackException(SystemException, _n_13_t_0, _n_11_t_0):
    def __init__(self, message: str, innerException: Exception) -> InsufficientExecutionStackException:...
    def __init__(self, message: str) -> InsufficientExecutionStackException:...
    def __init__(self) -> InsufficientExecutionStackException:...
class InsufficientMemoryException(OutOfMemoryException, _n_13_t_0, _n_11_t_0):
    def __init__(self, message: str, innerException: Exception) -> InsufficientMemoryException:...
    def __init__(self, message: str) -> InsufficientMemoryException:...
    def __init__(self) -> InsufficientMemoryException:...
class IntPtr(ValueType, _n_13_t_0):
    Zero: int
    @property
    def Size(self) -> int:"""Size { get; } -> int"""
    def __init__(self, value: Void) -> IntPtr:...
    def __init__(self, value: int) -> IntPtr:...
    @staticmethod
    def Add(pointer: IntPtr, offset: int) -> IntPtr:...
    @staticmethod
    def Subtract(pointer: IntPtr, offset: int) -> IntPtr:...
    def ToInt32(self) -> int:...
    def ToInt64(self) -> int:...
    def ToPointer(self) -> Void:...
class InvalidCastException(SystemException, _n_13_t_0, _n_11_t_0):
    def __init__(self, message: str, errorCode: int) -> InvalidCastException:...
    def __init__(self, message: str, innerException: Exception) -> InvalidCastException:...
    def __init__(self, message: str) -> InvalidCastException:...
    def __init__(self) -> InvalidCastException:...
class InvalidOperationException(SystemException, _n_13_t_0, _n_11_t_0):
    def __init__(self, message: str, innerException: Exception) -> InvalidOperationException:...
    def __init__(self, message: str) -> InvalidOperationException:...
    def __init__(self) -> InvalidOperationException:...
class InvalidProgramException(SystemException, _n_13_t_0, _n_11_t_0):
    def __init__(self, message: str, inner: Exception) -> InvalidProgramException:...
    def __init__(self, message: str) -> InvalidProgramException:...
    def __init__(self) -> InvalidProgramException:...
class InvalidTimeZoneException(Exception, _n_13_t_0, _n_11_t_0):
    def __init__(self) -> InvalidTimeZoneException:...
    def __init__(self, message: str, innerException: Exception) -> InvalidTimeZoneException:...
    def __init__(self, message: str) -> InvalidTimeZoneException:...
class IObservable(typing.Generic[T]):
    def Subscribe(self, observer: IObserver[T]) -> IDisposable:...
class IObserver(typing.Generic[T]):
    def OnCompleted(self):...
    def OnError(self, error: Exception):...
    def OnNext(self, value: T):...
class IProgress(typing.Generic[T]):
    def Report(self, value: T):...
class IServiceProvider():
    def GetService(self, serviceType: Type) -> object:...
class Lazy(typing.Generic[T]):
    @property
    def IsValueCreated(self) -> bool:"""IsValueCreated { get; } -> bool"""
    @property
    def Value(self) -> T:"""Value { get; } -> T"""
    def __init__(self, valueFactory: Func[T], isThreadSafe: bool) -> Lazy:...
    def __init__(self, mode: _n_18_t_2) -> Lazy:...
    def __init__(self, isThreadSafe: bool) -> Lazy:...
    def __init__(self, valueFactory: Func[T]) -> Lazy:...
    def __init__(self) -> Lazy:...
    def __init__(self, valueFactory: Func[T], mode: _n_18_t_2) -> Lazy:...
class LdapStyleUriParser(UriParser):
    def __init__(self) -> LdapStyleUriParser:...
class LoaderOptimization(Enum, IComparable, IFormattable, IConvertible):
    DisallowBindings: int
    DomainMask: int
    MultiDomain: int
    MultiDomainHost: int
    NotSpecified: int
    SingleDomain: int
    value__: int
class LoaderOptimizationAttribute(Attribute, _n_11_t_2):
    @property
    def Value(self) -> LoaderOptimization:"""Value { get; } -> LoaderOptimization"""
    def __init__(self, value: LoaderOptimization) -> LoaderOptimizationAttribute:...
    def __init__(self, value: Byte) -> LoaderOptimizationAttribute:...
class LocalDataStoreSlot(object):
    pass
class MarshalByRefObject(object):
    def CreateObjRef(self, requestedType: Type) -> _n_12_t_1:...
    def GetLifetimeService(self) -> object:...
    def InitializeLifetimeService(self) -> object:...
class Math(object):
    E: int
    PI: int
    @staticmethod
    def Abs(value: Decimal) -> Decimal:...
    @staticmethod
    def Abs(value: float) -> float:...
    @staticmethod
    def Abs(value: int) -> int:...
    @staticmethod
    def Abs(value: SByte) -> SByte:...
    @staticmethod
    def Acos(d: float) -> float:...
    @staticmethod
    def Asin(d: float) -> float:...
    @staticmethod
    def Atan(d: float) -> float:...
    @staticmethod
    def Atan2(y: float, x: float) -> float:...
    @staticmethod
    def BigMul(a: int, b: int) -> int:...
    @staticmethod
    def Ceiling(a: float) -> float:...
    @staticmethod
    def Ceiling(d: Decimal) -> Decimal:...
    @staticmethod
    def Cos(d: float) -> float:...
    @staticmethod
    def Cosh(value: float) -> float:...
    @staticmethod
    def DivRem(a: int, b: int, result: int) -> int:...
    @staticmethod
    def Exp(d: float) -> float:...
    @staticmethod
    def Floor(d: float) -> float:...
    @staticmethod
    def Floor(d: Decimal) -> Decimal:...
    @staticmethod
    def IEEERemainder(x: float, y: float) -> float:...
    @staticmethod
    def Log(a: float, newBase: float) -> float:...
    @staticmethod
    def Log(d: float) -> float:...
    @staticmethod
    def Log10(d: float) -> float:...
    @staticmethod
    def Max(val1: Decimal, val2: Decimal) -> Decimal:...
    @staticmethod
    def Max(val1: float, val2: float) -> float:...
    @staticmethod
    def Max(val1: UInt64, val2: UInt64) -> UInt64:...
    @staticmethod
    def Max(val1: UInt32, val2: UInt32) -> UInt32:...
    @staticmethod
    def Max(val1: UInt16, val2: UInt16) -> UInt16:...
    @staticmethod
    def Max(val1: int, val2: int) -> int:...
    @staticmethod
    def Max(val1: Byte, val2: Byte) -> Byte:...
    @staticmethod
    def Max(val1: SByte, val2: SByte) -> SByte:...
    @staticmethod
    def Min(val1: Decimal, val2: Decimal) -> Decimal:...
    @staticmethod
    def Min(val1: float, val2: float) -> float:...
    @staticmethod
    def Min(val1: UInt64, val2: UInt64) -> UInt64:...
    @staticmethod
    def Min(val1: UInt32, val2: UInt32) -> UInt32:...
    @staticmethod
    def Min(val1: UInt16, val2: UInt16) -> UInt16:...
    @staticmethod
    def Min(val1: int, val2: int) -> int:...
    @staticmethod
    def Min(val1: Byte, val2: Byte) -> Byte:...
    @staticmethod
    def Min(val1: SByte, val2: SByte) -> SByte:...
    @staticmethod
    def Pow(x: float, y: float) -> float:...
    @staticmethod
    def Round(d: Decimal, decimals: int, mode: MidpointRounding) -> Decimal:...
    @staticmethod
    def Round(d: Decimal, mode: MidpointRounding) -> Decimal:...
    @staticmethod
    def Round(d: Decimal, decimals: int) -> Decimal:...
    @staticmethod
    def Round(d: Decimal) -> Decimal:...
    @staticmethod
    def Round(value: float, digits: int, mode: MidpointRounding) -> float:...
    @staticmethod
    def Round(value: float, mode: MidpointRounding) -> float:...
    @staticmethod
    def Round(value: float, digits: int) -> float:...
    @staticmethod
    def Round(a: float) -> float:...
    @staticmethod
    def Sign(value: Decimal) -> int:...
    @staticmethod
    def Sign(value: float) -> int:...
    @staticmethod
    def Sign(value: int) -> int:...
    @staticmethod
    def Sign(value: SByte) -> int:...
    @staticmethod
    def Sin(a: float) -> float:...
    @staticmethod
    def Sinh(value: float) -> float:...
    @staticmethod
    def Sqrt(d: float) -> float:...
    @staticmethod
    def Tan(a: float) -> float:...
    @staticmethod
    def Tanh(value: float) -> float:...
    @staticmethod
    def Truncate(d: float) -> float:...
    @staticmethod
    def Truncate(d: Decimal) -> Decimal:...
class MemberAccessException(SystemException, _n_13_t_0, _n_11_t_0):
    def __init__(self, message: str, inner: Exception) -> MemberAccessException:...
    def __init__(self, message: str) -> MemberAccessException:...
    def __init__(self) -> MemberAccessException:...
class MethodAccessException(MemberAccessException, _n_13_t_0, _n_11_t_0):
    def __init__(self, message: str, inner: Exception) -> MethodAccessException:...
    def __init__(self, message: str) -> MethodAccessException:...
    def __init__(self) -> MethodAccessException:...
class MidpointRounding(Enum, IComparable, IFormattable, IConvertible):
    AwayFromZero: int
    ToEven: int
    value__: int
class MissingFieldException(MissingMemberException, _n_13_t_0, _n_11_t_0):
    def __init__(self, className: str, fieldName: str) -> MissingFieldException:...
    def __init__(self, message: str, inner: Exception) -> MissingFieldException:...
    def __init__(self, message: str) -> MissingFieldException:...
    def __init__(self) -> MissingFieldException:...
class MissingMemberException(MemberAccessException, _n_13_t_0, _n_11_t_0):
    def __init__(self, className: str, memberName: str) -> MissingMemberException:...
    def __init__(self, message: str, inner: Exception) -> MissingMemberException:...
    def __init__(self, message: str) -> MissingMemberException:...
    def __init__(self) -> MissingMemberException:...
class MissingMethodException(MissingMemberException, _n_13_t_0, _n_11_t_0):
    def __init__(self, className: str, methodName: str) -> MissingMethodException:...
    def __init__(self, message: str, inner: Exception) -> MissingMethodException:...
    def __init__(self, message: str) -> MissingMethodException:...
    def __init__(self) -> MissingMethodException:...
class ModuleHandle(ValueType):
    EmptyHandle: int
    @property
    def MDStreamVersion(self) -> int:"""MDStreamVersion { get; } -> int"""
    def GetRuntimeFieldHandleFromMetadataToken(self, fieldToken: int) -> RuntimeFieldHandle:...
    def GetRuntimeMethodHandleFromMetadataToken(self, methodToken: int) -> RuntimeMethodHandle:...
    def GetRuntimeTypeHandleFromMetadataToken(self, typeToken: int) -> RuntimeTypeHandle:...
    def ResolveFieldHandle(self, fieldToken: int, typeInstantiationContext: Array[RuntimeTypeHandle], methodInstantiationContext: Array[RuntimeTypeHandle]) -> RuntimeFieldHandle:...
    def ResolveFieldHandle(self, fieldToken: int) -> RuntimeFieldHandle:...
    def ResolveMethodHandle(self, methodToken: int, typeInstantiationContext: Array[RuntimeTypeHandle], methodInstantiationContext: Array[RuntimeTypeHandle]) -> RuntimeMethodHandle:...
    def ResolveMethodHandle(self, methodToken: int) -> RuntimeMethodHandle:...
    def ResolveTypeHandle(self, typeToken: int, typeInstantiationContext: Array[RuntimeTypeHandle], methodInstantiationContext: Array[RuntimeTypeHandle]) -> RuntimeTypeHandle:...
    def ResolveTypeHandle(self, typeToken: int) -> RuntimeTypeHandle:...
class MTAThreadAttribute(Attribute, _n_11_t_2):
    def __init__(self) -> MTAThreadAttribute:...
class MulticastDelegate(Delegate, ICloneable, _n_13_t_0):
    pass
class MulticastNotSupportedException(SystemException, _n_13_t_0, _n_11_t_0):
    def __init__(self, message: str, inner: Exception) -> MulticastNotSupportedException:...
    def __init__(self, message: str) -> MulticastNotSupportedException:...
    def __init__(self) -> MulticastNotSupportedException:...
class NetPipeStyleUriParser(UriParser):
    def __init__(self) -> NetPipeStyleUriParser:...
class NetTcpStyleUriParser(UriParser):
    def __init__(self) -> NetTcpStyleUriParser:...
class NewsStyleUriParser(UriParser):
    def __init__(self) -> NewsStyleUriParser:...
class NonSerializedAttribute(Attribute, _n_11_t_2):
    def __init__(self) -> NonSerializedAttribute:...
class NotFiniteNumberException(ArithmeticException, _n_13_t_0, _n_11_t_0):
    @property
    def OffendingNumber(self) -> float:"""OffendingNumber { get; } -> float"""
    def __init__(self, message: str, offendingNumber: float, innerException: Exception) -> NotFiniteNumberException:...
    def __init__(self, message: str, innerException: Exception) -> NotFiniteNumberException:...
    def __init__(self, message: str, offendingNumber: float) -> NotFiniteNumberException:...
    def __init__(self, message: str) -> NotFiniteNumberException:...
    def __init__(self, offendingNumber: float) -> NotFiniteNumberException:...
    def __init__(self) -> NotFiniteNumberException:...
class NotImplementedException(SystemException, _n_13_t_0, _n_11_t_0):
    def __init__(self, message: str, inner: Exception) -> NotImplementedException:...
    def __init__(self, message: str) -> NotImplementedException:...
    def __init__(self) -> NotImplementedException:...
class NotSupportedException(SystemException, _n_13_t_0, _n_11_t_0):
    def __init__(self, message: str, innerException: Exception) -> NotSupportedException:...
    def __init__(self, message: str) -> NotSupportedException:...
    def __init__(self) -> NotSupportedException:...
class Nullable(ValueType, typing.Generic[T]):
    @property
    def HasValue(self) -> bool:"""HasValue { get; } -> bool"""
    @property
    def Value(self) -> T:"""Value { get; } -> T"""
    def __init__(self, value: T) -> Nullable:...
    def GetValueOrDefault(self, defaultValue: T) -> T:...
    def GetValueOrDefault(self) -> T:...
class NullReferenceException(SystemException, _n_13_t_0, _n_11_t_0):
    def __init__(self, message: str, innerException: Exception) -> NullReferenceException:...
    def __init__(self, message: str) -> NullReferenceException:...
    def __init__(self) -> NullReferenceException:...
class ObjectDisposedException(InvalidOperationException, _n_13_t_0, _n_11_t_0):
    @property
    def ObjectName(self) -> str:"""ObjectName { get; } -> str"""
    def __init__(self, message: str, innerException: Exception) -> ObjectDisposedException:...
    def __init__(self, objectName: str, message: str) -> ObjectDisposedException:...
    def __init__(self, objectName: str) -> ObjectDisposedException:...
class ObsoleteAttribute(Attribute, _n_11_t_2):
    @property
    def IsError(self) -> bool:"""IsError { get; } -> bool"""
    @property
    def Message(self) -> str:"""Message { get; } -> str"""
    def __init__(self, message: str, error: bool) -> ObsoleteAttribute:...
    def __init__(self, message: str) -> ObsoleteAttribute:...
    def __init__(self) -> ObsoleteAttribute:...
class OperatingSystem(ICloneable, _n_13_t_0):
    @property
    def Platform(self) -> PlatformID:"""Platform { get; } -> PlatformID"""
    @property
    def ServicePack(self) -> str:"""ServicePack { get; } -> str"""
    @property
    def Version(self) -> Version:"""Version { get; } -> Version"""
    @property
    def VersionString(self) -> str:"""VersionString { get; } -> str"""
    def __init__(self, platform: PlatformID, version: Version) -> OperatingSystem:...
class OperationCanceledException(SystemException, _n_13_t_0, _n_11_t_0):
    @property
    def CancellationToken(self) -> _n_18_t_3:"""CancellationToken { get; set; } -> CancellationToken"""
    def __init__(self, message: str, innerException: Exception, token: _n_18_t_3) -> OperationCanceledException:...
    def __init__(self, message: str, token: _n_18_t_3) -> OperationCanceledException:...
    def __init__(self, token: _n_18_t_3) -> OperationCanceledException:...
    def __init__(self, message: str, innerException: Exception) -> OperationCanceledException:...
    def __init__(self, message: str) -> OperationCanceledException:...
    def __init__(self) -> OperationCanceledException:...
class OutOfMemoryException(SystemException, _n_13_t_0, _n_11_t_0):
    def __init__(self, message: str, innerException: Exception) -> OutOfMemoryException:...
    def __init__(self, message: str) -> OutOfMemoryException:...
    def __init__(self) -> OutOfMemoryException:...
class OverflowException(ArithmeticException, _n_13_t_0, _n_11_t_0):
    def __init__(self, message: str, innerException: Exception) -> OverflowException:...
    def __init__(self, message: str) -> OverflowException:...
    def __init__(self) -> OverflowException:...
class ParamArrayAttribute(Attribute, _n_11_t_2):
    def __init__(self) -> ParamArrayAttribute:...
class PlatformID(Enum, IComparable, IFormattable, IConvertible):
    MacOSX: int
    Unix: int
    value__: int
    Win32NT: int
    Win32S: int
    Win32Windows: int
    WinCE: int
    Xbox: int
class PlatformNotSupportedException(NotSupportedException, _n_13_t_0, _n_11_t_0):
    def __init__(self, message: str, inner: Exception) -> PlatformNotSupportedException:...
    def __init__(self, message: str) -> PlatformNotSupportedException:...
    def __init__(self) -> PlatformNotSupportedException:...
class Predicate(MulticastDelegate, ICloneable, _n_13_t_0, typing.Generic[T]):
    def __init__(self, object: object, method: IntPtr) -> Predicate:...
    def BeginInvoke(self, obj: T, callback: AsyncCallback, object: object) -> IAsyncResult:...
    def EndInvoke(self, result: IAsyncResult) -> bool:...
    def Invoke(self, obj: T) -> bool:...
class Progress(IProgress[T], typing.Generic[T]):
    @property
    def ProgressChanged(self) -> EventHandler[T]:
        """ProgressChanged Event: EventHandler"""
    def __init__(self, handler: Action[T]) -> Progress:...
    def __init__(self) -> Progress:...
class Random(object):
    def __init__(self, Seed: int) -> Random:...
    def __init__(self) -> Random:...
    def Next(self, maxValue: int) -> int:...
    def Next(self, minValue: int, maxValue: int) -> int:...
    def Next(self) -> int:...
    def NextBytes(self, buffer: Array[Byte]):...
    def NextDouble(self) -> float:...
class RankException(SystemException, _n_13_t_0, _n_11_t_0):
    def __init__(self, message: str, innerException: Exception) -> RankException:...
    def __init__(self, message: str) -> RankException:...
    def __init__(self) -> RankException:...
class ResolveEventArgs(EventArgs):
    @property
    def Name(self) -> str:"""Name { get; } -> str"""
    @property
    def RequestingAssembly(self) -> _n_7_t_3:"""RequestingAssembly { get; } -> Assembly"""
    def __init__(self, name: str, requestingAssembly: _n_7_t_3) -> ResolveEventArgs:...
    def __init__(self, name: str) -> ResolveEventArgs:...
class ResolveEventHandler(MulticastDelegate, ICloneable, _n_13_t_0):
    def __init__(self, object: object, method: IntPtr) -> ResolveEventHandler:...
    def BeginInvoke(self, sender: object, args: ResolveEventArgs, callback: AsyncCallback, object: object) -> IAsyncResult:...
    def EndInvoke(self, result: IAsyncResult) -> _n_7_t_3:...
    def Invoke(self, sender: object, args: ResolveEventArgs) -> _n_7_t_3:...
class RuntimeArgumentHandle(ValueType):
    pass
class RuntimeFieldHandle(ValueType, _n_13_t_0):
    @property
    def Value(self) -> IntPtr:"""Value { get; } -> IntPtr"""
class RuntimeMethodHandle(ValueType, _n_13_t_0):
    @property
    def Value(self) -> IntPtr:"""Value { get; } -> IntPtr"""
    def GetFunctionPointer(self) -> IntPtr:...
class RuntimeTypeHandle(ValueType, _n_13_t_0):
    @property
    def Value(self) -> IntPtr:"""Value { get; } -> IntPtr"""
    def GetModuleHandle(self) -> ModuleHandle:...
class SByte(ValueType, IComparable, IFormattable, IConvertible, IComparable[SByte], IEquatable[SByte]):
    MaxValue: int
    MinValue: int
    @staticmethod
    def Parse(s: str, style: _n_5_t_1, provider: IFormatProvider) -> SByte:...
    @staticmethod
    def Parse(s: str, provider: IFormatProvider) -> SByte:...
    @staticmethod
    def Parse(s: str, style: _n_5_t_1) -> SByte:...
    @staticmethod
    def Parse(s: str) -> SByte:...
    @staticmethod
    def TryParse(s: str, style: _n_5_t_1, provider: IFormatProvider, result: SByte) -> bool:...
    @staticmethod
    def TryParse(s: str, result: SByte) -> bool:...
class SerializableAttribute(Attribute, _n_11_t_2):
    def __init__(self) -> SerializableAttribute:...
class StackOverflowException(SystemException, _n_13_t_0, _n_11_t_0):
    def __init__(self, message: str, innerException: Exception) -> StackOverflowException:...
    def __init__(self, message: str) -> StackOverflowException:...
    def __init__(self) -> StackOverflowException:...
class STAThreadAttribute(Attribute, _n_11_t_2):
    def __init__(self) -> STAThreadAttribute:...
class StringComparer(_n_0_t_3, _n_0_t_6, _n_1_t_1[str], _n_1_t_5[str]):
    @property
    def CurrentCulture(self) -> StringComparer:"""CurrentCulture { get; } -> StringComparer"""
    @property
    def CurrentCultureIgnoreCase(self) -> StringComparer:"""CurrentCultureIgnoreCase { get; } -> StringComparer"""
    @property
    def InvariantCulture(self) -> StringComparer:"""InvariantCulture { get; } -> StringComparer"""
    @property
    def InvariantCultureIgnoreCase(self) -> StringComparer:"""InvariantCultureIgnoreCase { get; } -> StringComparer"""
    @property
    def Ordinal(self) -> StringComparer:"""Ordinal { get; } -> StringComparer"""
    @property
    def OrdinalIgnoreCase(self) -> StringComparer:"""OrdinalIgnoreCase { get; } -> StringComparer"""
    @staticmethod
    def Create(culture: _n_5_t_0, ignoreCase: bool) -> StringComparer:...
class StringComparison(Enum, IComparable, IFormattable, IConvertible):
    CurrentCulture: int
    CurrentCultureIgnoreCase: int
    InvariantCulture: int
    InvariantCultureIgnoreCase: int
    Ordinal: int
    OrdinalIgnoreCase: int
    value__: int
class StringNormalizationExtensions(object):
    @staticmethod
    def IsNormalized(value: str, normalizationForm: _n_17_t_1) -> bool:...
    @staticmethod
    def IsNormalized(value: str) -> bool:...
    @staticmethod
    def Normalize(value: str, normalizationForm: _n_17_t_1) -> str:...
    @staticmethod
    def Normalize(value: str) -> str:...
class StringSplitOptions(Enum, IComparable, IFormattable, IConvertible):
    _None: int
    RemoveEmptyEntries: int
    value__: int
class SystemException(Exception, _n_13_t_0, _n_11_t_0):
    def __init__(self, message: str, innerException: Exception) -> SystemException:...
    def __init__(self, message: str) -> SystemException:...
    def __init__(self) -> SystemException:...
class ThreadStaticAttribute(Attribute, _n_11_t_2):
    def __init__(self) -> ThreadStaticAttribute:...
class TimeoutException(SystemException, _n_13_t_0, _n_11_t_0):
    def __init__(self, message: str, innerException: Exception) -> TimeoutException:...
    def __init__(self, message: str) -> TimeoutException:...
    def __init__(self) -> TimeoutException:...
class TimeSpan(ValueType, IComparable, IComparable[TimeSpan], IEquatable[TimeSpan], IFormattable):
    MaxValue: int
    MinValue: int
    TicksPerDay: int
    TicksPerHour: int
    TicksPerMillisecond: int
    TicksPerMinute: int
    TicksPerSecond: int
    Zero: int
    @property
    def Days(self) -> int:"""Days { get; } -> int"""
    @property
    def Hours(self) -> int:"""Hours { get; } -> int"""
    @property
    def Milliseconds(self) -> int:"""Milliseconds { get; } -> int"""
    @property
    def Minutes(self) -> int:"""Minutes { get; } -> int"""
    @property
    def Seconds(self) -> int:"""Seconds { get; } -> int"""
    @property
    def Ticks(self) -> int:"""Ticks { get; } -> int"""
    @property
    def TotalDays(self) -> float:"""TotalDays { get; } -> float"""
    @property
    def TotalHours(self) -> float:"""TotalHours { get; } -> float"""
    @property
    def TotalMilliseconds(self) -> float:"""TotalMilliseconds { get; } -> float"""
    @property
    def TotalMinutes(self) -> float:"""TotalMinutes { get; } -> float"""
    @property
    def TotalSeconds(self) -> float:"""TotalSeconds { get; } -> float"""
    def __init__(self, days: int, hours: int, minutes: int, seconds: int, milliseconds: int) -> TimeSpan:...
    def __init__(self, days: int, hours: int, minutes: int, seconds: int) -> TimeSpan:...
    def __init__(self, hours: int, minutes: int, seconds: int) -> TimeSpan:...
    def __init__(self, ticks: int) -> TimeSpan:...
    def Add(self, ts: TimeSpan) -> TimeSpan:...
    @staticmethod
    def Compare(t1: TimeSpan, t2: TimeSpan) -> int:...
    def Duration(self) -> TimeSpan:...
    @staticmethod
    def FromDays(value: float) -> TimeSpan:...
    @staticmethod
    def FromHours(value: float) -> TimeSpan:...
    @staticmethod
    def FromMilliseconds(value: float) -> TimeSpan:...
    @staticmethod
    def FromMinutes(value: float) -> TimeSpan:...
    @staticmethod
    def FromSeconds(value: float) -> TimeSpan:...
    @staticmethod
    def FromTicks(value: int) -> TimeSpan:...
    def Negate(self) -> TimeSpan:...
    @staticmethod
    def Parse(input: str, formatProvider: IFormatProvider) -> TimeSpan:...
    @staticmethod
    def Parse(s: str) -> TimeSpan:...
    @staticmethod
    def ParseExact(input: str, formats: Array[str], formatProvider: IFormatProvider, styles: _n_5_t_5) -> TimeSpan:...
    @staticmethod
    def ParseExact(input: str, format: str, formatProvider: IFormatProvider, styles: _n_5_t_5) -> TimeSpan:...
    @staticmethod
    def ParseExact(input: str, formats: Array[str], formatProvider: IFormatProvider) -> TimeSpan:...
    @staticmethod
    def ParseExact(input: str, format: str, formatProvider: IFormatProvider) -> TimeSpan:...
    def Subtract(self, ts: TimeSpan) -> TimeSpan:...
    @staticmethod
    def TryParse(input: str, formatProvider: IFormatProvider, result: TimeSpan) -> bool:...
    @staticmethod
    def TryParse(s: str, result: TimeSpan) -> bool:...
    @staticmethod
    def TryParseExact(input: str, formats: Array[str], formatProvider: IFormatProvider, styles: _n_5_t_5, result: TimeSpan) -> bool:...
    @staticmethod
    def TryParseExact(input: str, format: str, formatProvider: IFormatProvider, styles: _n_5_t_5, result: TimeSpan) -> bool:...
    @staticmethod
    def TryParseExact(input: str, formats: Array[str], formatProvider: IFormatProvider, result: TimeSpan) -> bool:...
    @staticmethod
    def TryParseExact(input: str, format: str, formatProvider: IFormatProvider, result: TimeSpan) -> bool:...
class TimeZone(object):
    @property
    def CurrentTimeZone(self) -> TimeZone:"""CurrentTimeZone { get; } -> TimeZone"""
    @property
    def DaylightName(self) -> str:"""DaylightName { get; } -> str"""
    @property
    def StandardName(self) -> str:"""StandardName { get; } -> str"""
    def GetDaylightChanges(self, year: int) -> _n_5_t_6:...
    def GetUtcOffset(self, time: DateTime) -> TimeSpan:...
    @staticmethod
    def IsDaylightSavingTime(time: DateTime, daylightTimes: _n_5_t_6) -> bool:...
    def IsDaylightSavingTime(self, time: DateTime) -> bool:...
    def ToLocalTime(self, time: DateTime) -> DateTime:...
    def ToUniversalTime(self, time: DateTime) -> DateTime:...
class TimeZoneInfo(IEquatable[TimeZoneInfo], _n_13_t_0, _n_13_t_1):
    @property
    def BaseUtcOffset(self) -> TimeSpan:"""BaseUtcOffset { get; } -> TimeSpan"""
    @property
    def DaylightName(self) -> str:"""DaylightName { get; } -> str"""
    @property
    def DisplayName(self) -> str:"""DisplayName { get; } -> str"""
    @property
    def Id(self) -> str:"""Id { get; } -> str"""
    @property
    def Local(self) -> TimeZoneInfo:"""Local { get; } -> TimeZoneInfo"""
    @property
    def StandardName(self) -> str:"""StandardName { get; } -> str"""
    @property
    def SupportsDaylightSavingTime(self) -> bool:"""SupportsDaylightSavingTime { get; } -> bool"""
    @property
    def Utc(self) -> TimeZoneInfo:"""Utc { get; } -> TimeZoneInfo"""
    @staticmethod
    def ClearCachedData():...
    @staticmethod
    def ConvertTime(dateTime: DateTime, sourceTimeZone: TimeZoneInfo, destinationTimeZone: TimeZoneInfo) -> DateTime:...
    @staticmethod
    def ConvertTime(dateTime: DateTime, destinationTimeZone: TimeZoneInfo) -> DateTime:...
    @staticmethod
    def ConvertTime(dateTimeOffset: DateTimeOffset, destinationTimeZone: TimeZoneInfo) -> DateTimeOffset:...
    @staticmethod
    def ConvertTimeBySystemTimeZoneId(dateTime: DateTime, sourceTimeZoneId: str, destinationTimeZoneId: str) -> DateTime:...
    @staticmethod
    def ConvertTimeBySystemTimeZoneId(dateTime: DateTime, destinationTimeZoneId: str) -> DateTime:...
    @staticmethod
    def ConvertTimeBySystemTimeZoneId(dateTimeOffset: DateTimeOffset, destinationTimeZoneId: str) -> DateTimeOffset:...
    @staticmethod
    def ConvertTimeFromUtc(dateTime: DateTime, destinationTimeZone: TimeZoneInfo) -> DateTime:...
    @staticmethod
    def ConvertTimeToUtc(dateTime: DateTime, sourceTimeZone: TimeZoneInfo) -> DateTime:...
    @staticmethod
    def ConvertTimeToUtc(dateTime: DateTime) -> DateTime:...
    @staticmethod
    def CreateCustomTimeZone(id: str, baseUtcOffset: TimeSpan, displayName: str, standardDisplayName: str, daylightDisplayName: str, adjustmentRules: Array[TimeZoneInfo.AdjustmentRule], disableDaylightSavingTime: bool) -> TimeZoneInfo:...
    @staticmethod
    def CreateCustomTimeZone(id: str, baseUtcOffset: TimeSpan, displayName: str, standardDisplayName: str, daylightDisplayName: str, adjustmentRules: Array[TimeZoneInfo.AdjustmentRule]) -> TimeZoneInfo:...
    @staticmethod
    def CreateCustomTimeZone(id: str, baseUtcOffset: TimeSpan, displayName: str, standardDisplayName: str) -> TimeZoneInfo:...
    @staticmethod
    def FindSystemTimeZoneById(id: str) -> TimeZoneInfo:...
    @staticmethod
    def FromSerializedString(source: str) -> TimeZoneInfo:...
    def GetAdjustmentRules(self) -> Array[TimeZoneInfo.AdjustmentRule]:...
    def GetAmbiguousTimeOffsets(self, dateTime: DateTime) -> Array[TimeSpan]:...
    def GetAmbiguousTimeOffsets(self, dateTimeOffset: DateTimeOffset) -> Array[TimeSpan]:...
    @staticmethod
    def GetSystemTimeZones() -> _n_2_t_0[TimeZoneInfo]:...
    def GetUtcOffset(self, dateTime: DateTime) -> TimeSpan:...
    def GetUtcOffset(self, dateTimeOffset: DateTimeOffset) -> TimeSpan:...
    def HasSameRules(self, other: TimeZoneInfo) -> bool:...
    def IsAmbiguousTime(self, dateTime: DateTime) -> bool:...
    def IsAmbiguousTime(self, dateTimeOffset: DateTimeOffset) -> bool:...
    def IsDaylightSavingTime(self, dateTime: DateTime) -> bool:...
    def IsDaylightSavingTime(self, dateTimeOffset: DateTimeOffset) -> bool:...
    def IsInvalidTime(self, dateTime: DateTime) -> bool:...
    def ToSerializedString(self) -> str:...
    class AdjustmentRule(IEquatable[TimeZoneInfo.AdjustmentRule], _n_13_t_0, _n_13_t_1):
        @property
        def DateEnd(self) -> DateTime:"""DateEnd { get; } -> DateTime"""
        @property
        def DateStart(self) -> DateTime:"""DateStart { get; } -> DateTime"""
        @property
        def DaylightDelta(self) -> TimeSpan:"""DaylightDelta { get; } -> TimeSpan"""
        @property
        def DaylightTransitionEnd(self) -> TimeZoneInfo.TransitionTime:"""DaylightTransitionEnd { get; } -> TimeZoneInfo.TransitionTime"""
        @property
        def DaylightTransitionStart(self) -> TimeZoneInfo.TransitionTime:"""DaylightTransitionStart { get; } -> TimeZoneInfo.TransitionTime"""
        @staticmethod
        def CreateAdjustmentRule(dateStart: DateTime, dateEnd: DateTime, daylightDelta: TimeSpan, daylightTransitionStart: TimeZoneInfo.TransitionTime, daylightTransitionEnd: TimeZoneInfo.TransitionTime) -> TimeZoneInfo.AdjustmentRule:...
    class TransitionTime(ValueType, IEquatable[TimeZoneInfo.TransitionTime], _n_13_t_0, _n_13_t_1):
        @property
        def Day(self) -> int:"""Day { get; } -> int"""
        @property
        def DayOfWeek(self) -> DayOfWeek:"""DayOfWeek { get; } -> DayOfWeek"""
        @property
        def IsFixedDateRule(self) -> bool:"""IsFixedDateRule { get; } -> bool"""
        @property
        def Month(self) -> int:"""Month { get; } -> int"""
        @property
        def TimeOfDay(self) -> DateTime:"""TimeOfDay { get; } -> DateTime"""
        @property
        def Week(self) -> int:"""Week { get; } -> int"""
        @staticmethod
        def CreateFixedDateRule(timeOfDay: DateTime, month: int, day: int) -> TimeZoneInfo.TransitionTime:...
        @staticmethod
        def CreateFloatingDateRule(timeOfDay: DateTime, month: int, week: int, dayOfWeek: DayOfWeek) -> TimeZoneInfo.TransitionTime:...
class TimeZoneNotFoundException(Exception, _n_13_t_0, _n_11_t_0):
    def __init__(self) -> TimeZoneNotFoundException:...
    def __init__(self, message: str, innerException: Exception) -> TimeZoneNotFoundException:...
    def __init__(self, message: str) -> TimeZoneNotFoundException:...
class Tuple(_n_0_t_2, _n_0_t_1, IComparable, ITupleInternal, typing.Generic[T1]):
    @property
    def Item1(self) -> T1:"""Item1 { get; } -> T1"""
    def __init__(self, item1: T1) -> Tuple:...
    def Deconstruct(self, item1: object, item2: object, item3: object, item4: object, item5: object, item6: object, item7: object, item8: object, item9: object, item10: object, item11: object, item12: object, item13: object, item14: object, item15: object, item16: object, item17: object, item18: object, item19: object, item20: object, item21: object):
        """Extension from: System.TupleExtensions"""
    def Deconstruct(self, item1: object, item2: object, item3: object, item4: object, item5: object, item6: object, item7: object, item8: object, item9: object, item10: object, item11: object, item12: object, item13: object, item14: object, item15: object, item16: object, item17: object, item18: object, item19: object, item20: object):
        """Extension from: System.TupleExtensions"""
    def Deconstruct(self, item1: object, item2: object, item3: object, item4: object, item5: object, item6: object, item7: object, item8: object, item9: object, item10: object, item11: object, item12: object, item13: object, item14: object, item15: object, item16: object, item17: object, item18: object, item19: object):
        """Extension from: System.TupleExtensions"""
    def Deconstruct(self, item1: object, item2: object, item3: object, item4: object, item5: object, item6: object, item7: object, item8: object, item9: object, item10: object, item11: object, item12: object, item13: object, item14: object, item15: object, item16: object, item17: object, item18: object):
        """Extension from: System.TupleExtensions"""
    def Deconstruct(self, item1: object, item2: object, item3: object, item4: object, item5: object, item6: object, item7: object, item8: object, item9: object, item10: object, item11: object, item12: object, item13: object, item14: object, item15: object, item16: object, item17: object):
        """Extension from: System.TupleExtensions"""
    def Deconstruct(self, item1: object, item2: object, item3: object, item4: object, item5: object, item6: object, item7: object, item8: object, item9: object, item10: object, item11: object, item12: object, item13: object, item14: object, item15: object, item16: object):
        """Extension from: System.TupleExtensions"""
    def Deconstruct(self, item1: object, item2: object, item3: object, item4: object, item5: object, item6: object, item7: object, item8: object, item9: object, item10: object, item11: object, item12: object, item13: object, item14: object, item15: object):
        """Extension from: System.TupleExtensions"""
    def Deconstruct(self, item1: object, item2: object, item3: object, item4: object, item5: object, item6: object, item7: object, item8: object, item9: object, item10: object, item11: object, item12: object, item13: object, item14: object):
        """Extension from: System.TupleExtensions"""
    def Deconstruct(self, item1: object, item2: object, item3: object, item4: object, item5: object, item6: object, item7: object, item8: object, item9: object, item10: object, item11: object, item12: object, item13: object):
        """Extension from: System.TupleExtensions"""
    def Deconstruct(self, item1: object, item2: object, item3: object, item4: object, item5: object, item6: object, item7: object, item8: object, item9: object, item10: object, item11: object, item12: object):
        """Extension from: System.TupleExtensions"""
    def Deconstruct(self, item1: object, item2: object, item3: object, item4: object, item5: object, item6: object, item7: object, item8: object, item9: object, item10: object, item11: object):
        """Extension from: System.TupleExtensions"""
    def Deconstruct(self, item1: object, item2: object, item3: object, item4: object, item5: object, item6: object, item7: object, item8: object, item9: object, item10: object):
        """Extension from: System.TupleExtensions"""
    def Deconstruct(self, item1: object, item2: object, item3: object, item4: object, item5: object, item6: object, item7: object, item8: object, item9: object):
        """Extension from: System.TupleExtensions"""
    def Deconstruct(self, item1: object, item2: object, item3: object, item4: object, item5: object, item6: object, item7: object, item8: object):
        """Extension from: System.TupleExtensions"""
    def Deconstruct(self, item1: object, item2: object, item3: object, item4: object, item5: object, item6: object, item7: object):
        """Extension from: System.TupleExtensions"""
    def Deconstruct(self, item1: object, item2: object, item3: object, item4: object, item5: object, item6: object):
        """Extension from: System.TupleExtensions"""
    def Deconstruct(self, item1: object, item2: object, item3: object, item4: object, item5: object):
        """Extension from: System.TupleExtensions"""
    def Deconstruct(self, item1: object, item2: object, item3: object, item4: object):
        """Extension from: System.TupleExtensions"""
    def Deconstruct(self, item1: object, item2: object, item3: object):
        """Extension from: System.TupleExtensions"""
    def Deconstruct(self, item1: object, item2: object):
        """Extension from: System.TupleExtensions"""
    def Deconstruct(self, item1: object):
        """Extension from: System.TupleExtensions"""
    def ToValueTuple(self) -> ValueTuple[T1]:
        """Extension from: System.TupleExtensions"""
class TupleExtensions(object):
    @staticmethod
    def Deconstruct(value: Tuple[typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, Tuple[typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, Tuple[typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, typing.Any]]], item1: object, item2: object, item3: object, item4: object, item5: object, item6: object, item7: object, item8: object, item9: object, item10: object, item11: object, item12: object, item13: object, item14: object, item15: object, item16: object, item17: object, item18: object, item19: object, item20: object, item21: object):...
    @staticmethod
    def Deconstruct(value: Tuple[typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, Tuple[typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, Tuple[typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, typing.Any]]], item1: object, item2: object, item3: object, item4: object, item5: object, item6: object, item7: object, item8: object, item9: object, item10: object, item11: object, item12: object, item13: object, item14: object, item15: object, item16: object, item17: object, item18: object, item19: object, item20: object):...
    @staticmethod
    def Deconstruct(value: Tuple[typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, Tuple[typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, Tuple[typing.Any, typing.Any, typing.Any, typing.Any, typing.Any]]], item1: object, item2: object, item3: object, item4: object, item5: object, item6: object, item7: object, item8: object, item9: object, item10: object, item11: object, item12: object, item13: object, item14: object, item15: object, item16: object, item17: object, item18: object, item19: object):...
    @staticmethod
    def Deconstruct(value: Tuple[typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, Tuple[typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, Tuple[typing.Any, typing.Any, typing.Any, typing.Any]]], item1: object, item2: object, item3: object, item4: object, item5: object, item6: object, item7: object, item8: object, item9: object, item10: object, item11: object, item12: object, item13: object, item14: object, item15: object, item16: object, item17: object, item18: object):...
    @staticmethod
    def Deconstruct(value: Tuple[typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, Tuple[typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, Tuple[typing.Any, typing.Any, typing.Any]]], item1: object, item2: object, item3: object, item4: object, item5: object, item6: object, item7: object, item8: object, item9: object, item10: object, item11: object, item12: object, item13: object, item14: object, item15: object, item16: object, item17: object):...
    @staticmethod
    def Deconstruct(value: Tuple[typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, Tuple[typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, Tuple[typing.Any, typing.Any]]], item1: object, item2: object, item3: object, item4: object, item5: object, item6: object, item7: object, item8: object, item9: object, item10: object, item11: object, item12: object, item13: object, item14: object, item15: object, item16: object):...
    @staticmethod
    def Deconstruct(value: Tuple[typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, Tuple[typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, Tuple[typing.Any]]], item1: object, item2: object, item3: object, item4: object, item5: object, item6: object, item7: object, item8: object, item9: object, item10: object, item11: object, item12: object, item13: object, item14: object, item15: object):...
    @staticmethod
    def Deconstruct(value: Tuple[typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, Tuple[typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, typing.Any]], item1: object, item2: object, item3: object, item4: object, item5: object, item6: object, item7: object, item8: object, item9: object, item10: object, item11: object, item12: object, item13: object, item14: object):...
    @staticmethod
    def Deconstruct(value: Tuple[typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, Tuple[typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, typing.Any]], item1: object, item2: object, item3: object, item4: object, item5: object, item6: object, item7: object, item8: object, item9: object, item10: object, item11: object, item12: object, item13: object):...
    @staticmethod
    def Deconstruct(value: Tuple[typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, Tuple[typing.Any, typing.Any, typing.Any, typing.Any, typing.Any]], item1: object, item2: object, item3: object, item4: object, item5: object, item6: object, item7: object, item8: object, item9: object, item10: object, item11: object, item12: object):...
    @staticmethod
    def Deconstruct(value: Tuple[typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, Tuple[typing.Any, typing.Any, typing.Any, typing.Any]], item1: object, item2: object, item3: object, item4: object, item5: object, item6: object, item7: object, item8: object, item9: object, item10: object, item11: object):...
    @staticmethod
    def Deconstruct(value: Tuple[typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, Tuple[typing.Any, typing.Any, typing.Any]], item1: object, item2: object, item3: object, item4: object, item5: object, item6: object, item7: object, item8: object, item9: object, item10: object):...
    @staticmethod
    def Deconstruct(value: Tuple[typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, Tuple[typing.Any, typing.Any]], item1: object, item2: object, item3: object, item4: object, item5: object, item6: object, item7: object, item8: object, item9: object):...
    @staticmethod
    def Deconstruct(value: Tuple[typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, Tuple[typing.Any]], item1: object, item2: object, item3: object, item4: object, item5: object, item6: object, item7: object, item8: object):...
    @staticmethod
    def Deconstruct(value: Tuple[typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, typing.Any], item1: object, item2: object, item3: object, item4: object, item5: object, item6: object, item7: object):...
    @staticmethod
    def Deconstruct(value: Tuple[typing.Any, typing.Any, typing.Any, typing.Any, typing.Any, typing.Any], item1: object, item2: object, item3: object, item4: object, item5: object, item6: object):...
    @staticmethod
    def Deconstruct(value: Tuple[typing.Any, typing.Any, typing.Any, typing.Any, typing.Any], item1: object, item2: object, item3: object, item4: object, item5: object):...
    @staticmethod
    def Deconstruct(value: Tuple[typing.Any, typing.Any, typing.Any, typing.Any], item1: object, item2: object, item3: object, item4: object):...
    @staticmethod
    def Deconstruct(value: Tuple[typing.Any, typing.Any, typing.Any], item1: object, item2: object, item3: object):...
    @staticmethod
    def Deconstruct(value: Tuple[typing.Any, typing.Any], item1: object, item2: object):...
    @staticmethod
    def Deconstruct(value: Tuple[typing.Any], item1: object):...
    @staticmethod
    def ToTuple(value: ValueTuple[typing.Any]) -> Tuple[typing.Any]:...
    @staticmethod
    def ToValueTuple(value: Tuple[typing.Any]) -> ValueTuple[typing.Any]:...
class Type(_n_7_t_6, _n_7_t_8, _n_11_t_3, _n_11_t_4, _n_7_t_9):
    Delimiter: int
    EmptyTypes: int
    FilterAttribute: int
    FilterName: int
    FilterNameIgnoreCase: int
    Missing: int
    @property
    def ContainsGenericParameters(self) -> bool:"""ContainsGenericParameters { get; } -> bool"""
    @property
    def DeclaringMethod(self) -> _n_7_t_10:"""DeclaringMethod { get; } -> MethodBase"""
    @property
    def DefaultBinder(self) -> _n_7_t_1:"""DefaultBinder { get; } -> Binder"""
    @property
    def GenericParameterAttributes(self) -> _n_7_t_11:"""GenericParameterAttributes { get; } -> GenericParameterAttributes"""
    @property
    def GenericParameterPosition(self) -> int:"""GenericParameterPosition { get; } -> int"""
    @property
    def GenericTypeArguments(self) -> Array[Type]:"""GenericTypeArguments { get; } -> Array"""
    @property
    def IsConstructedGenericType(self) -> bool:"""IsConstructedGenericType { get; } -> bool"""
    @property
    def IsGenericParameter(self) -> bool:"""IsGenericParameter { get; } -> bool"""
    @property
    def IsGenericType(self) -> bool:"""IsGenericType { get; } -> bool"""
    @property
    def IsGenericTypeDefinition(self) -> bool:"""IsGenericTypeDefinition { get; } -> bool"""
    @property
    def IsNested(self) -> bool:"""IsNested { get; } -> bool"""
    @property
    def IsSecurityCritical(self) -> bool:"""IsSecurityCritical { get; } -> bool"""
    @property
    def IsSecuritySafeCritical(self) -> bool:"""IsSecuritySafeCritical { get; } -> bool"""
    @property
    def IsSecurityTransparent(self) -> bool:"""IsSecurityTransparent { get; } -> bool"""
    @property
    def IsVisible(self) -> bool:"""IsVisible { get; } -> bool"""
    @property
    def StructLayoutAttribute(self) -> _n_11_t_5:"""StructLayoutAttribute { get; } -> StructLayoutAttribute"""
    def GetEnumName(self, value: object) -> str:...
    def GetEnumNames(self) -> Array[str]:...
    def GetEnumUnderlyingType(self) -> Type:...
    def GetEnumValues(self) -> Array:...
    def GetGenericArguments(self) -> Array[Type]:...
    def GetGenericParameterConstraints(self) -> Array[Type]:...
    def GetGenericTypeDefinition(self) -> Type:...
    @staticmethod
    def GetTypeArray(args: Array[object]) -> Array[Type]:...
    @staticmethod
    def GetTypeCode(type: Type) -> TypeCode:...
    @staticmethod
    def GetTypeFromCLSID(clsid: Guid, server: str, throwOnError: bool) -> Type:...
    @staticmethod
    def GetTypeFromCLSID(clsid: Guid, server: str) -> Type:...
    @staticmethod
    def GetTypeFromCLSID(clsid: Guid, throwOnError: bool) -> Type:...
    @staticmethod
    def GetTypeFromCLSID(clsid: Guid) -> Type:...
    @staticmethod
    def GetTypeFromHandle(handle: RuntimeTypeHandle) -> Type:...
    @staticmethod
    def GetTypeFromProgID(progID: str, server: str, throwOnError: bool) -> Type:...
    @staticmethod
    def GetTypeFromProgID(progID: str, server: str) -> Type:...
    @staticmethod
    def GetTypeFromProgID(progID: str, throwOnError: bool) -> Type:...
    @staticmethod
    def GetTypeFromProgID(progID: str) -> Type:...
    @staticmethod
    def GetTypeHandle(o: object) -> RuntimeTypeHandle:...
    def IsEnumDefined(self, value: object) -> bool:...
    def IsEquivalentTo(self, other: Type) -> bool:...
    def MakeArrayType(self, rank: int) -> Type:...
    def MakeArrayType(self) -> Type:...
    def MakeByRefType(self) -> Type:...
    def MakeGenericType(self, typeArguments: Array[Type]) -> Type:...
    def MakePointerType(self) -> Type:...
    @staticmethod
    def ReflectionOnlyGetType(typeName: str, throwIfNotFound: bool, ignoreCase: bool) -> Type:...
    def GetRuntimeEvent(self, name: str) -> _n_7_t_13:
        """Extension from: System.Reflection.RuntimeReflectionExtensions"""
    def GetRuntimeEvents(self) -> _n_1_t_0[_n_7_t_13]:
        """Extension from: System.Reflection.RuntimeReflectionExtensions"""
    def GetRuntimeField(self, name: str) -> _n_7_t_12:
        """Extension from: System.Reflection.RuntimeReflectionExtensions"""
    def GetRuntimeFields(self) -> _n_1_t_0[_n_7_t_12]:
        """Extension from: System.Reflection.RuntimeReflectionExtensions"""
    def GetRuntimeMethod(self, name: str, parameters: Array[Type]) -> _n_7_t_7:
        """Extension from: System.Reflection.RuntimeReflectionExtensions"""
    def GetRuntimeMethods(self) -> _n_1_t_0[_n_7_t_7]:
        """Extension from: System.Reflection.RuntimeReflectionExtensions"""
    def GetRuntimeProperties(self) -> _n_1_t_0[_n_7_t_14]:
        """Extension from: System.Reflection.RuntimeReflectionExtensions"""
    def GetRuntimeProperty(self, name: str) -> _n_7_t_14:
        """Extension from: System.Reflection.RuntimeReflectionExtensions"""
    def GetTypeInfo(self) -> _n_7_t_15:
        """Extension from: System.Reflection.IntrospectionExtensions"""
class TypeAccessException(TypeLoadException, _n_13_t_0, _n_11_t_0):
    def __init__(self, message: str, inner: Exception) -> TypeAccessException:...
    def __init__(self, message: str) -> TypeAccessException:...
    def __init__(self) -> TypeAccessException:...
class TypeCode(Enum, IComparable, IFormattable, IConvertible):
    Boolean: int
    Byte: int
    Char: int
    DateTime: int
    DBNull: int
    Decimal: int
    Double: int
    Empty: int
    Int16: int
    Int32: int
    Int64: int
    Object: int
    SByte: int
    Single: int
    String: int
    UInt16: int
    UInt32: int
    UInt64: int
    value__: int
class TypedReference(ValueType):
    @staticmethod
    def GetTargetType(value: TypedReference) -> Type:...
    @staticmethod
    def MakeTypedReference(target: object, flds: Array[_n_7_t_12]) -> TypedReference:...
    @staticmethod
    def SetTypedReference(target: TypedReference, value: object):...
    @staticmethod
    def TargetTypeToken(value: TypedReference) -> RuntimeTypeHandle:...
    @staticmethod
    def ToObject(value: TypedReference) -> object:...
class TypeInitializationException(SystemException, _n_13_t_0, _n_11_t_0):
    @property
    def TypeName(self) -> str:"""TypeName { get; } -> str"""
    def __init__(self, fullTypeName: str, innerException: Exception) -> TypeInitializationException:...
class TypeLoadException(SystemException, _n_13_t_0, _n_11_t_0):
    @property
    def TypeName(self) -> str:"""TypeName { get; } -> str"""
    def __init__(self, message: str, inner: Exception) -> TypeLoadException:...
    def __init__(self, message: str) -> TypeLoadException:...
    def __init__(self) -> TypeLoadException:...
class TypeUnloadedException(SystemException, _n_13_t_0, _n_11_t_0):
    def __init__(self, message: str, innerException: Exception) -> TypeUnloadedException:...
    def __init__(self, message: str) -> TypeUnloadedException:...
    def __init__(self) -> TypeUnloadedException:...
class UInt16(ValueType, IComparable, IFormattable, IConvertible, IComparable[UInt16], IEquatable[UInt16]):
    MaxValue: int
    MinValue: int
    @staticmethod
    def Parse(s: str, style: _n_5_t_1, provider: IFormatProvider) -> UInt16:...
    @staticmethod
    def Parse(s: str, provider: IFormatProvider) -> UInt16:...
    @staticmethod
    def Parse(s: str, style: _n_5_t_1) -> UInt16:...
    @staticmethod
    def Parse(s: str) -> UInt16:...
    @staticmethod
    def TryParse(s: str, style: _n_5_t_1, provider: IFormatProvider, result: UInt16) -> bool:...
    @staticmethod
    def TryParse(s: str, result: UInt16) -> bool:...
class UInt32(ValueType, IComparable, IFormattable, IConvertible, IComparable[UInt32], IEquatable[UInt32]):
    MaxValue: int
    MinValue: int
    @staticmethod
    def Parse(s: str, style: _n_5_t_1, provider: IFormatProvider) -> UInt32:...
    @staticmethod
    def Parse(s: str, provider: IFormatProvider) -> UInt32:...
    @staticmethod
    def Parse(s: str, style: _n_5_t_1) -> UInt32:...
    @staticmethod
    def Parse(s: str) -> UInt32:...
    @staticmethod
    def TryParse(s: str, style: _n_5_t_1, provider: IFormatProvider, result: UInt32) -> bool:...
    @staticmethod
    def TryParse(s: str, result: UInt32) -> bool:...
class UInt64(ValueType, IComparable, IFormattable, IConvertible, IComparable[UInt64], IEquatable[UInt64]):
    MaxValue: int
    MinValue: int
    @staticmethod
    def Parse(s: str, style: _n_5_t_1, provider: IFormatProvider) -> UInt64:...
    @staticmethod
    def Parse(s: str, provider: IFormatProvider) -> UInt64:...
    @staticmethod
    def Parse(s: str, style: _n_5_t_1) -> UInt64:...
    @staticmethod
    def Parse(s: str) -> UInt64:...
    @staticmethod
    def TryParse(s: str, style: _n_5_t_1, provider: IFormatProvider, result: UInt64) -> bool:...
    @staticmethod
    def TryParse(s: str, result: UInt64) -> bool:...
class UIntPtr(ValueType, _n_13_t_0):
    Zero: int
    @property
    def Size(self) -> int:"""Size { get; } -> int"""
    def __init__(self, value: Void) -> UIntPtr:...
    def __init__(self, value: UInt64) -> UIntPtr:...
    def __init__(self, value: UInt32) -> UIntPtr:...
    @staticmethod
    def Add(pointer: UIntPtr, offset: int) -> UIntPtr:...
    @staticmethod
    def Subtract(pointer: UIntPtr, offset: int) -> UIntPtr:...
    def ToPointer(self) -> Void:...
    def ToUInt32(self) -> UInt32:...
    def ToUInt64(self) -> UInt64:...
class UnauthorizedAccessException(SystemException, _n_13_t_0, _n_11_t_0):
    def __init__(self, message: str, inner: Exception) -> UnauthorizedAccessException:...
    def __init__(self, message: str) -> UnauthorizedAccessException:...
    def __init__(self) -> UnauthorizedAccessException:...
class UnhandledExceptionEventArgs(EventArgs):
    @property
    def ExceptionObject(self) -> object:"""ExceptionObject { get; } -> object"""
    @property
    def IsTerminating(self) -> bool:"""IsTerminating { get; } -> bool"""
    def __init__(self, exception: object, isTerminating: bool) -> UnhandledExceptionEventArgs:...
class UnhandledExceptionEventHandler(MulticastDelegate, ICloneable, _n_13_t_0):
    def __init__(self, object: object, method: IntPtr) -> UnhandledExceptionEventHandler:...
    def BeginInvoke(self, sender: object, e: UnhandledExceptionEventArgs, callback: AsyncCallback, object: object) -> IAsyncResult:...
    def EndInvoke(self, result: IAsyncResult):...
    def Invoke(self, sender: object, e: UnhandledExceptionEventArgs):...
class Uri(_n_13_t_0):
    SchemeDelimiter: int
    UriSchemeFile: int
    UriSchemeFtp: int
    UriSchemeGopher: int
    UriSchemeHttp: int
    UriSchemeHttps: int
    UriSchemeMailto: int
    UriSchemeNetPipe: int
    UriSchemeNetTcp: int
    UriSchemeNews: int
    UriSchemeNntp: int
    @property
    def AbsolutePath(self) -> str:"""AbsolutePath { get; } -> str"""
    @property
    def AbsoluteUri(self) -> str:"""AbsoluteUri { get; } -> str"""
    @property
    def Authority(self) -> str:"""Authority { get; } -> str"""
    @property
    def DnsSafeHost(self) -> str:"""DnsSafeHost { get; } -> str"""
    @property
    def Fragment(self) -> str:"""Fragment { get; } -> str"""
    @property
    def Host(self) -> str:"""Host { get; } -> str"""
    @property
    def HostNameType(self) -> UriHostNameType:"""HostNameType { get; } -> UriHostNameType"""
    @property
    def IdnHost(self) -> str:"""IdnHost { get; } -> str"""
    @property
    def IsAbsoluteUri(self) -> bool:"""IsAbsoluteUri { get; } -> bool"""
    @property
    def IsDefaultPort(self) -> bool:"""IsDefaultPort { get; } -> bool"""
    @property
    def IsFile(self) -> bool:"""IsFile { get; } -> bool"""
    @property
    def IsLoopback(self) -> bool:"""IsLoopback { get; } -> bool"""
    @property
    def IsUnc(self) -> bool:"""IsUnc { get; } -> bool"""
    @property
    def LocalPath(self) -> str:"""LocalPath { get; } -> str"""
    @property
    def OriginalString(self) -> str:"""OriginalString { get; } -> str"""
    @property
    def PathAndQuery(self) -> str:"""PathAndQuery { get; } -> str"""
    @property
    def Port(self) -> int:"""Port { get; } -> int"""
    @property
    def Query(self) -> str:"""Query { get; } -> str"""
    @property
    def Scheme(self) -> str:"""Scheme { get; } -> str"""
    @property
    def Segments(self) -> Array[str]:"""Segments { get; } -> Array"""
    @property
    def UserEscaped(self) -> bool:"""UserEscaped { get; } -> bool"""
    @property
    def UserInfo(self) -> str:"""UserInfo { get; } -> str"""
    def __init__(self, baseUri: Uri, relativeUri: Uri) -> Uri:...
    def __init__(self, baseUri: Uri, relativeUri: str) -> Uri:...
    def __init__(self, uriString: str, uriKind: UriKind) -> Uri:...
    def __init__(self, baseUri: Uri, relativeUri: str, dontEscape: bool) -> Uri:...
    def __init__(self, uriString: str, dontEscape: bool) -> Uri:...
    def __init__(self, uriString: str) -> Uri:...
    @staticmethod
    def CheckHostName(name: str) -> UriHostNameType:...
    @staticmethod
    def CheckSchemeName(schemeName: str) -> bool:...
    @staticmethod
    def Compare(uri1: Uri, uri2: Uri, partsToCompare: UriComponents, compareFormat: UriFormat, comparisonType: StringComparison) -> int:...
    @staticmethod
    def EscapeDataString(stringToEscape: str) -> str:...
    @staticmethod
    def EscapeUriString(stringToEscape: str) -> str:...
    @staticmethod
    def FromHex(digit: Char) -> int:...
    def GetComponents(self, components: UriComponents, format: UriFormat) -> str:...
    def GetLeftPart(self, part: UriPartial) -> str:...
    @staticmethod
    def HexEscape(character: Char) -> str:...
    @staticmethod
    def HexUnescape(pattern: str, index: int) -> Char:...
    def IsBaseOf(self, uri: Uri) -> bool:...
    @staticmethod
    def IsHexDigit(character: Char) -> bool:...
    @staticmethod
    def IsHexEncoding(pattern: str, index: int) -> bool:...
    def IsWellFormedOriginalString(self) -> bool:...
    @staticmethod
    def IsWellFormedUriString(uriString: str, uriKind: UriKind) -> bool:...
    def MakeRelative(self, toUri: Uri) -> str:...
    def MakeRelativeUri(self, uri: Uri) -> Uri:...
    @staticmethod
    def TryCreate(baseUri: Uri, relativeUri: Uri, result: Uri) -> bool:...
    @staticmethod
    def TryCreate(baseUri: Uri, relativeUri: str, result: Uri) -> bool:...
    @staticmethod
    def TryCreate(uriString: str, uriKind: UriKind, result: Uri) -> bool:...
    @staticmethod
    def UnescapeDataString(stringToUnescape: str) -> str:...
class UriBuilder(object):
    @property
    def Fragment(self) -> str:"""Fragment { get; set; } -> str"""
    @property
    def Host(self) -> str:"""Host { get; set; } -> str"""
    @property
    def Password(self) -> str:"""Password { get; set; } -> str"""
    @property
    def Path(self) -> str:"""Path { get; set; } -> str"""
    @property
    def Port(self) -> int:"""Port { get; set; } -> int"""
    @property
    def Query(self) -> str:"""Query { get; set; } -> str"""
    @property
    def Scheme(self) -> str:"""Scheme { get; set; } -> str"""
    @property
    def Uri(self) -> Uri:"""Uri { get; } -> Uri"""
    @property
    def UserName(self) -> str:"""UserName { get; set; } -> str"""
    def __init__(self, scheme: str, host: str, port: int, path: str, extraValue: str) -> UriBuilder:...
    def __init__(self, scheme: str, host: str, port: int, pathValue: str) -> UriBuilder:...
    def __init__(self, scheme: str, host: str, portNumber: int) -> UriBuilder:...
    def __init__(self, schemeName: str, hostName: str) -> UriBuilder:...
    def __init__(self, uri: Uri) -> UriBuilder:...
    def __init__(self, uri: str) -> UriBuilder:...
    def __init__(self) -> UriBuilder:...
class UriComponents(Enum, IComparable, IFormattable, IConvertible):
    AbsoluteUri: int
    Fragment: int
    Host: int
    HostAndPort: int
    HttpRequestUrl: int
    KeepDelimiter: int
    NormalizedHost: int
    Path: int
    PathAndQuery: int
    Port: int
    Query: int
    Scheme: int
    SchemeAndServer: int
    SerializationInfoString: int
    StrongAuthority: int
    StrongPort: int
    UserInfo: int
    value__: int
class UriFormat(Enum, IComparable, IFormattable, IConvertible):
    SafeUnescaped: int
    Unescaped: int
    UriEscaped: int
    value__: int
class UriFormatException(FormatException, _n_13_t_0, _n_11_t_0):
    def __init__(self, textString: str, e: Exception) -> UriFormatException:...
    def __init__(self, textString: str) -> UriFormatException:...
    def __init__(self) -> UriFormatException:...
class UriHostNameType(Enum, IComparable, IFormattable, IConvertible):
    Basic: int
    Dns: int
    IPv4: int
    IPv6: int
    Unknown: int
    value__: int
class UriIdnScope(Enum, IComparable, IFormattable, IConvertible):
    All: int
    AllExceptIntranet: int
    _None: int
    value__: int
class UriKind(Enum, IComparable, IFormattable, IConvertible):
    Absolute: int
    Relative: int
    RelativeOrAbsolute: int
    value__: int
class UriParser(object):
    @staticmethod
    def IsKnownScheme(schemeName: str) -> bool:...
    @staticmethod
    def Register(uriParser: UriParser, schemeName: str, defaultPort: int):...
class UriPartial(Enum, IComparable, IFormattable, IConvertible):
    Authority: int
    Path: int
    Query: int
    Scheme: int
    value__: int
class UriTypeConverter(_n_3_t_0):
    def __init__(self) -> UriTypeConverter:...
class ValueTuple(ValueType, IEquatable[ValueTuple[T1]], _n_0_t_2, _n_0_t_1, IComparable, IComparable[ValueTuple[T1]], IValueTupleInternal, typing.Generic[T1]):
    Item1: int
    def __init__(self, item1: T1) -> ValueTuple:...
    def ToTuple(self) -> Tuple[T1]:
        """Extension from: System.TupleExtensions"""
class ValueType(object):
    pass
class Version(ICloneable, IComparable, IComparable[Version], IEquatable[Version]):
    @property
    def Build(self) -> int:"""Build { get; } -> int"""
    @property
    def Major(self) -> int:"""Major { get; } -> int"""
    @property
    def MajorRevision(self) -> int:"""MajorRevision { get; } -> int"""
    @property
    def Minor(self) -> int:"""Minor { get; } -> int"""
    @property
    def MinorRevision(self) -> int:"""MinorRevision { get; } -> int"""
    @property
    def Revision(self) -> int:"""Revision { get; } -> int"""
    def __init__(self) -> Version:...
    def __init__(self, version: str) -> Version:...
    def __init__(self, major: int, minor: int) -> Version:...
    def __init__(self, major: int, minor: int, build: int) -> Version:...
    def __init__(self, major: int, minor: int, build: int, revision: int) -> Version:...
    @staticmethod
    def Parse(input: str) -> Version:...
    @staticmethod
    def TryParse(input: str, result: Version) -> bool:...
class WeakReference(_n_13_t_0, typing.Generic[T]):
    def __init__(self, target: T, trackResurrection: bool) -> WeakReference:...
    def __init__(self, target: T) -> WeakReference:...
    def SetTarget(self, target: T):...
    def TryGetTarget(self, target: object) -> bool:...
